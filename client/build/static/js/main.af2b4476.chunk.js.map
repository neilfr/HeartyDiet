{"version":3,"sources":["components/Grid/index.js","components/Jumbotron/index.js","pages/NoMatch.js","components/Form/index.js","utils/storage.js","components/Nav/index.js","utils/API.js","pages/Login.js","pages/Logout.js","pages/AddFood.js","components/Button/index.js","components/List/index.js","components/Card/index.js","pages/FoodPic.js","pages/SearchResults.js","pages/ViewFood.js","components/DeleteBtn/index.js","components/Date/index.js","pages/ViewSchedule.js","pages/AddMeal.js","pages/ViewMeal.js","pages/ViewDailyPlan.js","pages/Books.js","pages/HomeContainer.js","components/CustomCard/index.js","pages/ViewFoodFavorite.js","pages/AddFoodGroup.js","pages/Register.js","App.js","index.js"],"names":["Container","_ref","fluid","children","react_default","a","createElement","className","concat","Row","_ref2","Col","_ref3","size","split","map","join","Jumbotron","NoMatch","components_Jumbotron","role","aria-label","Input","props","Object","assign","Dropdown","label","FormBtn","style","float","marginBottom","getFromStorage","key","valueStr","localStorage","getItem","JSON","parse","err","Nav","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","componentDidMount","setState","user","onLogout","e","preventDefault","obj","token","axios","get","then","res","data","success","removeItem","window","location","href","alert","state","align","name","email","console","log","Link","to","pathname","onClick","userInfoButton","Component","API","getRecipes","query","params","q","getFood","getMeal","removeFoodFromMealByID","mealId","foodId","delete","removeMealFromDailyPlanByID","dailyPlanId","removeDailyPlanFromScheduleByID","scheduleId","updateEnergyPotassiumTotalsForMealByID","totalEnergy","totalPotassium","put","updateEnergyPotassiumTotalsForDailyPlanByID","updateEnergyPotassiumTotalsForScheduleByID","addFoodToMealByID","servingSize","post","addMealToDailyPlanByID","getMealByUser","userName","getDailyPlanByUser","getMealByID","id","getDailyPlanByID","getScheduleByScheduleDate","scheduleDate","getScheduleByUser","deleteMeal","deleteDailyPlan","getFoodByFoodGroupName","foodGroupName","getFoodByFoodGroupNameAndUser","getFoodByUser","getFoodGroupByMasterAndUser","getFoodByID","getFoodByFoodName","foodName","deleteFoodByID","updateFoodByID","updatedFood","saveFood","foodData","saveSchedule","scheduleData","updateSchedule","saveFoodGroup","foodGroupData","saveMeal","mealData","saveDailyPlan","dailyPlanData","getUser","getUserByID","getFoodGroup","getFoodGroupByID","Login","onSignIn","_this$state","signInEmail","signInPassword","isLoading","password","signInError","message","error","setItem","stringify","setInStorage","catch","signUpError","signUpName","signUpEmail","signUpPassword","onTextboxChangeSignInEmail","bind","assertThisInitialized","onTextboxChangeSignInPassword","_this2","event","target","value","_this$state2","type","placeholder","onChange","disabled","Logout","Food","energy","potassium","foodGroupList","loadFoodGroupByMasterAndUser","handleInputChange","_event$target","defineProperty","handleFormSubmit","Button","tabIndex","List","Card","width","FoodContainer","FoodPic","_ref$thumbnail","thumbnail","alt","src","SearchResults","display","foodList","pics","efficiency","results","foodSearch","loadFood","loadFoodGroupMasterAndUser","loadFoodByFoodGroupName","deleteFood","saveFoodByUser","loadFoodOnSearch","foodItem","FoodID","foodDisplay","color","fontWeight","iconClass","position","bottom","right","length","height","image","components_Button","_id","DeleteBtn","Date","moment","require","Schedule","dailyPlanList","scheduleDailyPlanList","scheduleList","currentSchedule","currentDailyPlan","scheduleObject","dailyPlanObject","mealObject","foodObject","scheduleContent","loadSchedule","loadDailyPlan","loadDailyPlanByScheduleDate","scheduleFoodArray","scheduleElement","dailyPlanID","mealList","mealListID","food","push","removeFromSchedule","tempScheduleList","schedule","addToSchedule","dailyPlan_id","dailyPlanTotalEnergy","dailyPlanTotalPotassium","deleteSchedule","handleInputChangeScheduleDate","defaultData","format","defaultValue","Fragment","dailyPlan","components_Card","dailyPlanName","Meal","mealName","loadMeals","foods","meal","components_DeleteBtn","foodFavoriteList","currentMeal","loadFoodFavorites","selectMeal","removeFromMeal","foodID","tempFoodList","addToMeal","food_id","textAlign","DailyPlan","dailyPlanMealList","loadMealList","loadDailyPlans","selectDailyPlan","mealListArray","mealID","removeFromDailyPlan","tempMealList","addToDailyPlan","meal_id","FoodItem","findPic","ImgRec","filter","recipe","Boolean","item","pages_SearchResults","HomeContainer","Books","pages_Login","CustomCard","class","title","foodGroup","username","FoodFavorite","customize","editFoodID","loadFoodFavorite","confirm","edit","components_CustomCard","fontSize","FoodGroup","pic","border","Register","onSignUp","onTextboxChangeSignUpName","onTextboxChangeSignUpEmail","onTextboxChangeSignUpPassword","App","BrowserRouter","components_Nav","Switch","Route","exact","path","component","AddFood","ViewFood","AddFoodGroup","AddMeal","ViewMeal","ViewDailyPlan","ViewSchedule","ViewFoodFavorite","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.af2b4476.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\"\n\n// Exporting the Container, Row, and Col components from this file\n\n// This Container component allows us to use a bootstrap container without worrying about class names\nexport function Container({ fluid, children }) {\n  return <div className={`container${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\n}\n\n// This Row component lets us use a bootstrap row without having to think about class names\nexport function Row({ fluid, children }) {\n  return <div className={`row${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\n}\n\n// This Col component lets us size bootstrap columns with less syntax\n// e.g. <Col size=\"md-12\"> instead of <div className=\"col-md-12\">\nexport function Col({ size, children }) {\n  return (\n    <div\n      className={size\n        .split(\" \")\n        .map(size => \"col-\" + size)\n        .join(\" \")}\n    >\n      {children}\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Jumbotron({ children }) {\n  return <div className=\"jumbotron\">{children}</div>;\n}\n\nexport default Jumbotron;\n","import React from \"react\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport Jumbotron from \"../components/Jumbotron\";\n\nfunction NoMatch() {\n  return (\n    <Container fluid>\n      <Row>\n        <Col size=\"md-12\">\n          <Jumbotron>\n            <h1>404 Page Not Found</h1>\n            <h1>\n              <span role=\"img\" aria-label=\"Face With Rolling Eyes Emoji\">\n                🙄\n              </span>\n            </h1>\n          </Jumbotron>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default NoMatch;\n","import React from \"react\";\n\n// This file exports the Input, TextArea, and FormBtn components\n\nexport function Input(props) {\n  return (\n    <div className=\"form-group\">\n      <input className=\"form-control\" {...props} />\n    </div>\n  );\n}\n\nexport function Dropdown(props) {\n  return (\n    <div className=\"form-group\">\n      <label>\n        {props.label}\n        <select {...props} className=\"form-control\">\n          {props.children}\n          {/* <option value=\"grapefruit\">Grapefruit</option>\n          <option value=\"lime\">Lime</option>\n          <option value=\"coconut\">Coconut</option>\n          <option value=\"mango\">Mango</option> */}\n        </select>\n      </label>\n    </div>\n  );\n}\n\nexport function TextArea(props) {\n  return (\n    <div className=\"form-group\">\n      <textarea className=\"form-control\" rows=\"20\" {...props} />\n    </div>\n  );\n}\n\nexport function FormBtn(props) {\n  return (\n    <button\n      {...props}\n      style={{ float: \"right\", marginBottom: 10 }}\n\n    >\n      {props.children}\n    </button>\n  );\n}\n","export function getFromStorage(key) {\n    if(!key) {\n        return null;\n    }\n    \n    try {\n        const valueStr = localStorage.getItem(key);\n        if (valueStr) {\n            return JSON.parse(valueStr);\n        }\n        return null;\n    } catch (err) {\n        return null;\n    }\n}\n\nexport function setInStorage(key, obj) {\n    if (!key) {\n        console.error('Error: Key is missing!');\n    }\n\n    try {\n        localStorage.setItem(key, JSON.stringify(obj));\n    } catch (err) {\n        console.error(err);\n    }\n}\n\nexport function deleteFromStorage(key) {\n    localStorage.removeItem(key);\n}","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { FormBtn } from \"../Form\";\nimport { getFromStorage, deleteFromStorage } from \"../../utils/storage\";\nimport axios from \"axios\";\n\nclass Nav extends Component {\n  constructor() {\n    super();\n    this.state = {\n      user: {}\n    };\n  }\n\n  componentDidMount = () => {\n    this.setState({ user: JSON.parse(localStorage.getItem(\"userObj\")) });\n  };\n\n  userInfoButton() {\n    return (\n      <span className=\"navbar-text\" align=\"right\">\n        Welcome:{\" \"}\n        <a href=\"/\">{this.state.user.name + \": \" + this.state.user.email}</a>\n      </span>\n    );\n  }\n\n  onLogout = e => {\n    e.preventDefault();\n    const obj = getFromStorage(\"userObj\");\n    if (obj && obj.token) {\n      const { token } = obj;\n      // Verify the token\n      axios.get(\"/api/account/logout?token=\" + token).then(res => {\n        if (res.data.success) {\n          this.setState({\n            user: \"\"\n          });\n          deleteFromStorage(\"userObj\");\n          window.location.href = \"/\";\n        } else {\n          alert(\"Logout Error.\");\n        }\n      });\n    } else {\n      alert(\"No user logged in.\");\n    }\n  };\n\n  render() {\n    console.log(this.state.user);\n\n    return (\n      <nav className=\"navbar navbar-expand-lg navbar-dark #ef5350 red lighten-1\">\n        <a className=\"navbar-brand\" href=\"#\">\n          Hearty Diet\n        </a>\n        {/* <button\n          className=\"navbar-toggler\"\n          type=\"button\"\n          data-toggle=\"collapse\"\n          data-target=\"#navbarNav\"\n          aria-controls=\"navbarNav\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span className=\"navbar-toggler-icon\" />\n        </button> */}\n        {/* <div className=\"collapse navbar-collapse\" id=\"navbarNav\"> */}\n        <ul className=\"nav\">\n          <li className=\"nav-item m-2\">\n            <Link\n              to=\"/\"\n              className={\n                window.location.pathname === \"/\"\n                  ? \"text-white white-darker-hover font-weight-bold\"\n                  : \"text-dark\"\n              }\n            >\n              Login\n            </Link>\n          </li>\n          <li className=\"nav-item m-2\">\n            <Link\n              to=\"/AddFood\"\n              className={\n                window.location.pathname === \"/AddFood\"\n                  ? \"text-white white-darker-hover font-weight-bold\"\n                  : \"text-dark\"\n              }\n            >\n              Add Food\n            </Link>\n          </li>\n          <li className=\"nav-item m-2\">\n            <Link\n              to=\"/ViewFood\"\n              className={\n                window.location.pathname === \"/ViewFood\"\n                  ? \"text-white white-darker-hover font-weight-bold\"\n                  : \"text-dark grey-lighter-hover\"\n              }\n            >\n              View Food\n            </Link>\n          </li>\n          <li className=\"nav-item m-2\">\n            <Link\n              to=\"/AddFoodGroup\"\n              className={\n                window.location.pathname === \"/AddFoodGroup\"\n                  ? \"text-white white-darker-hover font-weight-bold\"\n                  : \"text-dark\"\n              }\n            >\n              Add Food Group\n            </Link>\n          </li>\n\n          <li className=\"nav-item m-2\">\n            <Link\n              to=\"/ViewMeal\"\n              className={\n                window.location.pathname === \"/ViewMeal\"\n                  ? \"text-white white-darker-hover font-weight-bold\"\n                  : \"text-dark\"\n              }\n            >\n              View Meal\n            </Link>\n          </li>\n\n          <li className=\"nav-item m-2\">\n            <Link\n              to=\"/ViewDailyPlan\"\n              className={\n                window.location.pathname === \"/ViewDailyPlan\"\n                  ? \"text-white white-darker-hover font-weight-bold\"\n                  : \"text-dark\"\n              }\n            >\n              View Daily Plan\n            </Link>\n          </li>\n\n          <li className=\"nav-item m-2\">\n            <Link\n              to=\"/ViewSchedule\"\n              className={\n                window.location.pathname === \"/ViewSchedule\"\n                  ? \"text-white white-darker-hover font-weight-bold\"\n                  : \"text-dark\"\n              }\n            >\n              View Schedule\n            </Link>\n          </li>\n          <li className=\"nav-item m-2\">\n            <Link\n              to=\"/ViewFoodFavorite\"\n              className={\n                window.location.pathname === \"/ViewFoodFavorite\"\n                  ? \"text-white white-darker-hover font-weight-bold\"\n                  : \"text-dark\"\n              }\n            >\n              View Favorite Foods\n            </Link>\n          </li>\n          <li className=\"nav-item m-2\">\n            <a href=\"#\" onClick={this.onLogout}>\n              Logout\n            </a>\n          </li>\n          {/* <li className=\"nav-item m-2\">\n              <a className=\"text-dark disabled\" href=\"#\">\n                Disabled\n              </Link>\n            </li> */}\n        </ul>\n        {/* </div> */}\n\n        {this.state.user ? this.userInfoButton() : \"\"}\n      </nav>\n    );\n  }\n}\n\nexport default Nav;\n","import axios from \"axios\";\n\nexport default {\n  //To get the picture from recipes API\n\n  getRecipes: function(query) {\n    return axios.get(\n      \"https://cors.io/?http://www.recipepuppy.com/api/?q=\" +\n        { params: { q: query } }\n    );\n  },\n  // Gets all foods\n  getFood: function() {\n    return axios.get(\"/api/food\");\n  },\n  getMeal: function() {\n    return axios.get(\"/api/meal\");\n  },\n\n  //! this is the new one ignored this in merge conflict\n  //   updateMealByID: function (id, updatedMeal) {\n  //     return axios.put(\"/api/meal/\" + id, updatedMeal);\n  //   },\n  //   getMealByUser: function (userName) {\n  removeFoodFromMealByID: function(mealId, foodId) {\n    console.log(\"inside client api removeFoodFromMealById\");\n    console.log(\"mealId is:\", mealId); //this is right\n    console.log(\"foodId is:\", foodId); // this is correct\n    return axios.delete(\"/api/meal/food/\" + mealId + \"/\" + foodId);\n  },\n\n  removeMealFromDailyPlanByID: function(dailyPlanId, mealId) {\n    console.log(\"inside client api removeMealFromDailyPlanByID\");\n    console.log(\"dailPlanId is:\", dailyPlanId);\n    console.log(\"mealId is:\", mealId);\n    return axios.delete(\"/api/dailyPlan/meal/\" + dailyPlanId + \"/\" + mealId);\n  },\n\n  removeDailyPlanFromScheduleByID: function(scheduleId, dailyPlanId) {\n    return axios.delete(\n      \"/api/schedule/dailyPlan/\" + scheduleId + \"/\" + dailyPlanId\n    );\n  },\n\n  //! new stuff\n  updateEnergyPotassiumTotalsForMealByID: function(\n    mealId,\n    totalEnergy,\n    totalPotassium\n  ) {\n    console.log(\"mealId is:\", mealId);\n    console.log(\"totalEnergy is:\", totalEnergy);\n    console.log(\"totalPotassium is:\", totalPotassium);\n    return axios.put(\"/api/meal/KCalTotals/\" + mealId, {\n      totalEnergy: totalEnergy,\n      totalPotassium: totalPotassium\n    });\n  },\n\n  updateEnergyPotassiumTotalsForDailyPlanByID: function(\n    dailyPlanId,\n    totalEnergy,\n    totalPotassium\n  ) {\n    console.log(\"dailyPlanId is:\", dailyPlanId);\n    console.log(\"totalEnergy is:\", totalEnergy);\n    console.log(\"totalPotassium is:\", totalPotassium);\n    return axios.put(\"/api/dailyPlan/KCalTotals/\" + dailyPlanId, {\n      totalEnergy: totalEnergy,\n      totalPotassium: totalPotassium\n    });\n  },\n\n  updateEnergyPotassiumTotalsForScheduleByID: function(\n    scheduleId,\n    totalEnergy,\n    totalPotassium\n  ) {\n    console.log(\"scheduleId is:\", scheduleId);\n    console.log(\"totalEnergy is:\", totalEnergy);\n    console.log(\"totalPotassium is:\", totalPotassium);\n    return axios.put(\"/api/schedule/KCalTotals/\" + scheduleId, {\n      totalEnergy: totalEnergy,\n      totalPotassium: totalPotassium\n    });\n  },\n\n  addFoodToMealByID: function(mealId, foodId, servingSize) {\n    console.log(\"in addFoodToMealByID\");\n    console.log(\"mealId is:\", mealId);\n    console.log(\"foodId is:\", foodId);\n    console.log(\"servingSize is:\", servingSize);\n    return axios.post(\"/api/meal/food/\" + mealId + \"/\" + foodId, {\n      servingSize: servingSize\n    });\n  },\n\n  addMealToDailyPlanByID: function(dailyPlanId, mealId) {\n    return axios.post(\"/api/dailyPlan/meal/\" + dailyPlanId + \"/\" + mealId);\n  },\n\n  // addDailyPlanToScheduleByDate: function(scheduleData) {\n  //   return axios.post(\"/api/schedule\" + scheduleData);\n  // },\n\n  getMealByUser: function(userName) {\n    console.log(\n      \"I'm inside getMealByUser in the API... looking for meals for:\",\n      userName\n    );\n    return axios.get(\"/api/meal/mealByUser/\" + userName);\n  },\n\n  getDailyPlanByUser: function(userName) {\n    return axios.get(\"/api/dailyPlan/dailyPlanByUser/\" + userName);\n  },\n\n  getMealByID: function(id) {\n    return axios.get(\"/api/meal/mealByID/\" + id);\n  },\n\n  getDailyPlanByID: function(id) {\n    return axios.get(\"/api/dailyPlan/\" + id);\n  },\n\n  getScheduleByScheduleDate: function(scheduleDate) {\n    return axios.get(\"/api/schedule/dailyPlanByScheduleDate/\" + scheduleDate);\n  },\n\n  getScheduleByUser: function(userName) {\n    return axios.get(\"/api/schedule/scheduleByUser/\" + userName);\n  },\n\n  deleteMeal: function(id) {\n    return axios.delete(\"/api/meal/\" + id);\n  },\n\n  deleteDailyPlan: function(id) {\n    return axios.delete(\"/api/dailyPlan/\" + id);\n  },\n  getFoodByFoodGroupName: function(foodGroupName) {\n    return axios.get(\"/api/food/foodByFoodGroupName/\" + foodGroupName);\n  },\n  getFoodByFoodGroupNameAndUser: function(foodGroupName, userName) {\n    return axios.get(\n      \"/api/food/foodByFoodGroupNameAndUser/\" + foodGroupName + \"/\" + userName\n    );\n  },\n  getFoodByUser: function(userName) {\n    return axios.get(\"/api/food/foodByUser/\" + userName);\n  },\n  getFoodGroupByMasterAndUser: function(userName) {\n    return axios.get(\"/api/foodgroup/foodGroupByMasterAndUser/\" + userName);\n  },\n  // Gets the food with the given id\n  getFoodByID: function(id) {\n    return axios.get(\"/api/food/foodByID/\" + id);\n  },\n  getFoodByFoodName: function(foodName) {\n    return axios.get(\"/api/food/foodByFoodName/\" + foodName);\n  },\n  // Deletes the food with the given id\n\n  deleteFoodByID: function(id) {\n    return axios.delete(\"/api/food/foodByID/\" + id);\n  },\n  // Update the food with the given id\n\n  updateFoodByID: function(id, updatedFood) {\n    return axios.put(\"/api/food/foodByID/\" + id, updatedFood);\n  },\n\n  // Saves a food to the database\n  saveFood: function(foodData) {\n    return axios.post(\"/api/food\", foodData);\n  },\n  saveSchedule: function(scheduleData) {\n    return axios.post(\"/api/schedule\", scheduleData);\n  },\n  updateSchedule: function(scheduleData) {\n    return axios.put(\"/api/schedule\", scheduleData);\n  },\n  saveFoodGroup: function(foodGroupData) {\n    return axios.post(\"/api/foodGroup\", foodGroupData);\n  },\n  saveMeal: function(mealData) {\n    return axios.post(\"/api/meal\", mealData);\n  },\n  saveDailyPlan: function(dailyPlanData) {\n    return axios.post(\"/api/dailyPlan\", dailyPlanData);\n  },\n  getUser: function() {\n    return axios.get(\"/api/user\");\n  },\n  getUserByID: function(id) {\n    return axios.get(\"/api/user/userByID/\" + id);\n  },\n  getFoodGroup: function() {\n    return axios.get(\"/api/foodgroup\");\n  },\n  // Gets the food with the given id\n  getFoodGroupByID: function(id) {\n    return axios.get(\"/api/foodgroup/foodGroupByID/\" + id);\n  }\n};\n","import React, { Component } from \"react\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport API from \"../utils/API\";\n// import { Link } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../components/Grid\";\n// import { List, ListItem } from \"../components/List\";\nimport { Input, TextArea, FormBtn, Dropdown } from \"../components/Form\";\nimport axios from \"axios\";\nimport { setInStorage, getFromStorage } from \"../utils/storage\";\nimport { BrowserRouter as Router, Route, Link, Switch } from \"react-router-dom\";\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isLoading: true,\n      token: \"\",\n      signUpError: \"\",\n      signInError: \"\",\n      signInEmail: \"\",\n      signInPassword: \"\",\n      signUpName: \"\",\n      signUpEmail: \"\",\n      signUpPassword: \"\",\n      user: \"\"\n    };\n\n    this.onTextboxChangeSignInEmail = this.onTextboxChangeSignInEmail.bind(\n      this\n    );\n    this.onTextboxChangeSignInPassword = this.onTextboxChangeSignInPassword.bind(\n      this\n    );\n    this.onSignIn = this.onSignIn.bind(this);\n  }\n\n  componentDidMount() {\n    const obj = getFromStorage(\"userObj\");\n    if (obj && obj.token) {\n      const { token } = obj;\n      // Verify the token\n      axios.get(\"/api/account/verify?token=\" + token).then(res => {\n        if (res.success) {\n          this.setState({\n            isLoading: false\n          });\n        } else {\n          this.setState({\n            isLoading: false\n          });\n        }\n      });\n    } else {\n      this.setState({\n        isLoading: false\n      });\n    }\n  }\n\n  onTextboxChangeSignInEmail(event) {\n    this.setState({\n      signInEmail: event.target.value\n    });\n  }\n  onTextboxChangeSignInPassword(event) {\n    this.setState({\n      signInPassword: event.target.value\n    });\n  }\n\n  onSignIn = e => {\n    e.preventDefault();\n    //Grab the state\n    const { signInEmail, signInPassword } = this.state;\n\n    this.setState({\n      isLoading: true\n    });\n\n    //Post request to backend\n    axios\n      .post(\"/api/account/signin\", {\n        email: signInEmail,\n        password: signInPassword\n      })\n      .then(res => {\n        console.log(res.data);\n        if (res.data.success) {\n          // setInStorage('userObj', { token: res.data.token });\n          this.setState({\n            signInError: res.message,\n            isLoading: false,\n            signInEmail: \"\",\n            signInPassword: \"\",\n            token: res.data.token,\n            user: res.data.user\n          });\n\n          res.data.user.token = res.data.token;\n\n          setInStorage(\"userObj\", res.data.user);\n          // REDIRECT TO FOOD HOMEPAGE\n          window.location.href = \"/AddFood\";\n        }\n      })\n      .catch(err => {});\n  };\n\n  render() {\n    const {\n      isLoading,\n      token,\n      signInError,\n      signInEmail,\n      signInPassword\n    } = this.state;\n\n    return (\n      <Container fluid>\n        {/* <Row>\n          <Col size=\"md-12\">\n            <Jumbotron>\n              <h1>Please Login to plan your Hearty Diet.</h1>\n            </Jumbotron>\n          </Col>\n        </Row> */}\n        <Row>\n          <Col size=\"md-4\" />\n          <Col size=\"md-4\">\n            <form>\n              Email\n              <Input\n                type=\"email\"\n                placeholder=\"Email\"\n                value={signInEmail}\n                onChange={this.onTextboxChangeSignInEmail}\n              />\n              Password\n              <Input\n                type=\"password\"\n                placeholder=\"Password\"\n                value={signInPassword}\n                onChange={this.onTextboxChangeSignInPassword}\n              />\n              <FormBtn\n                disabled={\n                  !(this.state.signInEmail && this.state.signInPassword)\n                }\n                onClick={this.onSignIn}\n              >\n                Login\n              </FormBtn>\n              <br />\n              <Link to=\"/register\">Register New User</Link>\n            </form>\n          </Col>\n          <Col size=\"md-4\" />\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default Login;\n\n// state = {\n//   userName: \"\",\n//   password: \"\"\n// };\n\n// handleInputChange = event => {\n//   const { name, value } = event.target;\n//   this.setState({\n//     [name]: value\n//   });\n// };\n\n// handleFormSubmit = event => {\n//   event.preventDefault();\n//   if (this.state.userName && this.state.password) {\n//     // API.login({\n//     //   userName: this.state.userName,\n//     //  password: this.state.passowrd,\n//     // })\n//     //   .then(\n//     //     res => this.loadFood()\n//     //   )\n//     //   .catch(err => console.log(err));\n//   }\n// };\n\n// render() {\n//   return (\n//     <Container fluid>\n//       <Row>\n//         <Col size=\"md-12\">\n//           <Jumbotron>\n//             <h1>Login / Landing Page - Login is not actually working</h1>\n//           </Jumbotron>\n//         </Col>\n//       </Row>\n//       <Row>\n//         <Col size=\"md-4\" />\n//         <Col size=\"md-4\">\n//           <form>\n//             UserName\n//             <Input\n//               value={this.state.userName}\n//               onChange={this.handleInputChange}\n//               name=\"userName\"\n//               placeholder=\"\"\n//             />\n//             Password\n//             <Input\n//               value={this.state.password}\n//               onChange={this.handleInputChange}\n//               name=\"passoword\"\n//               placeholder=\"\"\n//             />\n//             <FormBtn\n//               disabled={!(this.state.userName && this.state.password)}\n//               onClick={this.handleFormSubmit}\n//             >\n//               Login\n//             </FormBtn>\n//           </form>\n//         </Col>\n//         <Col size=\"md-4\" />\n//       </Row>\n//     </Container>\n//   );\n// }\n","import React, { Component } from \"react\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport API from \"../utils/API\";\n// import { Link } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../components/Grid\";\n// import { List, ListItem } from \"../components/List\";\nimport { Input, TextArea, FormBtn, Dropdown } from \"../components/Form\";\nimport axios from 'axios';\nimport {\n  setInStorage,\n  getFromStorage,\n} from '../utils/storage';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Link,\n  Switch\n} from 'react-router-dom'\n\n\nclass Logout extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isLoading: true,\n            token: '',\n            signUpError: '',\n            signInError: '',\n            signInEmail: '',\n            signInPassword: '',\n            signUpName: '',\n            signUpEmail: '',\n            signUpPassword: '',\n            user: ''\n          };\n\n          this.onLogout = this.onLogout.bind(this);\n    }\n\n    componentDidMount() {\n        const obj = getFromStorage('the_main_app');\n        if (obj && obj.token) {\n          const { token } = obj;\n          // Verify the token\n          axios.get('/api/account/verify?token=' + token)\n          .then(res => {\n            if (res.data.success) {\n              this.setState({\n                token,\n                isLoading: false\n              });\n            } else {\n              this.setState({\n                isLoading: false,\n              });\n            }\n          });\n        } else {\n          this.setState({\n            isLoading: false,\n          });\n        }\n      }\n\n\n      onLogout = e => {\n        e.preventDefault();\n        this.setState({\n          isLoading: true,\n        });\n        const obj = getFromStorage('the_main_app');\n        if (obj && obj.token) {\n          const { token } = obj;\n          // Verify the token\n          axios.get('/api/account/logout?token=' + token)\n          .then(res => {\n            if (res.data.success) {\n              this.setState({\n                token: '',\n                isLoading: false\n              });\n            } else {\n              this.setState({\n                isLoading: false,\n              });\n            }\n          });\n        } else {\n          this.setState({\n            isLoading: false,\n          });\n          window.location.href= './'\n        }\n      }\n\n}\n\nexport default Logout;\n\n\n\n","import React, { Component } from \"react\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport API from \"../utils/API\";\n// import { Link } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../components/Grid\";\n// import { List, ListItem } from \"../components/List\";\nimport { Input, TextArea, FormBtn, Dropdown } from \"../components/Form\";\n\nclass Food extends Component {\n  state = {\n    foodName: \"\",\n    foodGroupName: \"\",\n    energy: \"\",\n    potassium: \"\",\n    foodGroupList: []\n  };\n\n  componentDidMount() {\n    this.loadFoodGroupByMasterAndUser(\"JohnSmith\");\n  }\n\n  loadFoodGroupByMasterAndUser = userName => {\n    API.getFoodGroupByMasterAndUser(userName)\n      .then(res =>\n        this.setState({\n          foodGroupList: res.data\n        })\n      )\n      .catch(err => console.log(err));\n  };\n\n  // deleteFood = id => {\n  //   API.deleteFood(id)\n  //     .then(res => this.loadFood())\n  //     .catch(err => console.log(err));\n  // };\n\n  handleInputChange = event => {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n    if (\n      this.state.foodName &&\n      this.state.foodGroupName &&\n      this.state.energy &&\n      this.state.potassium\n    ) {\n      API.saveFood({\n        foodName: this.state.foodName,\n        foodGroupName: this.state.foodGroupName,\n        energy: this.state.energy,\n        potassium: this.state.potassium,\n        userName: \"JohnSmith\"\n      })\n        .then(\n          this.setState({\n            foodName: \"\",\n            foodGroupName: \"\",\n            energy: \"\",\n            potassium: \"\"\n          })\n        )\n        .catch(err => console.log(err));\n    }\n  };\n\n  render() {\n    return (\n      <Container fluid>\n        <Row>\n          <Col size=\"md-12\">\n            {/* <Jumbotron>\n              <h1>Add Custom Food</h1>\n            </Jumbotron> */}\n            <form>\n              <Input\n                value={this.state.foodName}\n                onChange={this.handleInputChange}\n                name=\"foodName\"\n                placeholder=\"Food Name (required)\"\n              />\n\n              <Dropdown\n                name=\"foodGroupName\"\n                onChange={this.handleInputChange}\n                label=\"Food Group\"\n                value={this.state.foodGroupName}\n              >\n                {this.state.foodGroupList.map(foodGroupList => (\n                  <option value={foodGroupList.foodGroupName}>\n                    {foodGroupList.foodGroupName}\n                  </option>\n                ))}\n              </Dropdown>\n              <Input\n                value={this.state.energy}\n                onChange={this.handleInputChange}\n                name=\"energy\"\n                placeholder=\"Energy (required)\"\n              />\n              <Input\n                value={this.state.potassium}\n                onChange={this.handleInputChange}\n                name=\"potassium\"\n                placeholder=\"Potassium (required)\"\n              />\n              {/* <TextArea\n                value={this.state.synopsis}\n                onChange={this.handleInputChange}\n                name=\"synopsis\"\n                placeholder=\"Synopsis (Optional)\"\n              /> */}\n              <FormBtn\n                disabled={\n                  !(\n                    this.state.foodName &&\n                    this.state.foodGroupName &&\n                    this.state.energy &&\n                    this.state.potassium\n                  )\n                }\n                onClick={this.handleFormSubmit}\n              >\n                Submit Food\n              </FormBtn>\n            </form>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default Food;\n","import React from \"react\";\nimport \"./style.css\";\n\n// The ...props means, spread all of the passed props onto this element\n// That way we don't have to define them all individually\nfunction Button(props) {\n  return (\n    <span {...props} type=\"button\" role=\"button\" tabIndex=\"0\">\n      {props.children}\n    </span>\n  );\n}\n\nexport default Button;","import React from \"react\";\nimport \"./style.css\";\n\n// This file exports both the List and ListItem components\n\nexport function List({ children }) {\n  return (\n    <div className=\"list-overflow-container\">\n      <ul className=\"list-group\">{children}</ul>\n    </div>\n  );\n}\n\nexport function ListItem({ children }) {\n  return <li className=\"list-group-item\">{children}</li>;\n}\n","import React from \"react\";\n\nfunction Card({ children }) {\n  return (\n    <div style={{ width: \"18rem\" }} className=\"card\">\n      <div className=\"card-body\">\n        <div className=\"card-title\">\n          <div className=\"card-subtitle mb-2 text-muted\">\n            <div className=\"card-text\">\n              {/* <a href=\"#\" class=\"card-link\">Card link</a> */}\n\n              {children}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Card;","import React from \"react\";\n\nexport function FoodContainer(props) {\n    return <div>{props.children}</div>;\n}\n\nexport function FoodPic({ thumbnail = \"https://placehold.it/300x300\" }) {\n    return (\n        <div>\n            <img alt=\"foodPic\" src={thumbnail} />\n        </div>\n    )\n}\n\n","import React from \"react\";\n// import \"./style.css\";\n\nfunction SearchResults(props) {\n    return (\n        <div style={{ display: 'inline-blocks' }}>\n            <p>{props.foodName}</p>\n            <p>Potassium Content:{props.potassium}gm</p>\n        </div>\n\n    );\n}\n\nexport default SearchResults;\n","import React, { Component } from \"react\";\nimport Button from \"../components/Button\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport API from \"../utils/API\";\nimport { Link } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { List, ListItem } from \"../components/List\";\nimport { Input, TextArea, FormBtn } from \"../components/Form\";\nimport Card from \"../components/Card\";\nimport { FoodPic, FoodContainer } from \"./FoodPic\";\nimport \"./viewFoodStyle.css\";\nimport SearchResults from \"./SearchResults\";\nimport \"font-awesome/css/font-awesome.min.css\";\n//import { MDBMask, MDBView, MDBContainer, MDBRow, MDBCol } from \"mdbreact\";\n\nclass Food extends Component {\n  state = {\n    foodList: [],\n    foodGroupList: [],\n    foodName: \"\",\n    foodGroupName: \"\",\n    energy: \"\",\n    potassium: \"\",\n    pics: null,\n    efficiency: \"\",\n    results: [],\n    foodSearch: \"\"\n  };\n\n  componentDidMount() {\n    this.loadFoodGroupMasterAndUser(\"master\");\n  }\n\n  loadFood = () => {\n    API.getFood()\n      .then(res =>\n        this.setState({\n          foodList: res.data,\n          foodName: \"\",\n          foodGroupName: \"\",\n          energy: \"\",\n          potassium: \"\",\n          efficiency: \"\"\n        })\n      )\n      .catch(err => console.log(err));\n  };\n\n  loadFoodGroupMasterAndUser = userName => {\n    API.getFoodGroupByMasterAndUser(userName)\n      .then(res =>\n        this.setState({\n          foodList: [],\n          foodGroupList: res.data,\n          foodName: \"\",\n          foodGroupName: \"\",\n          energy: \"\",\n          potassium: \"\",\n          efficiency: \"\"\n        })\n      )\n      .catch(err => console.log(err));\n  };\n\n  loadFoodByFoodGroupName = foodGroupName => {\n    // this.findPic(foodGroupName)\n    // this.setState((state, props) => {\n    //   return { thumbnail: state.pics }\n    // })\n    console.log(this.state.thumbnail);\n    API.getFoodByFoodGroupName(foodGroupName)\n      .then(res =>\n        this.setState({\n          foodList: res.data,\n          foodName: \"\",\n          foodGroupName: \"\",\n          energy: \"\",\n          potassium: \"\",\n          efficiency: \"\"\n        })\n      )\n      .catch(err => console.log(err));\n  };\n\n  deleteFood = id => {\n    API.deleteFood(id)\n      .then(res => this.loadFood())\n      .catch(err => console.log(err));\n  };\n\n  saveFoodByUser = id => {\n    API.getFoodByID(id)\n\n      .then(res => {\n        console.log(res);\n        API.saveFood({\n          foodName: res.data.foodName,\n          foodGroupName: res.data.foodGroupName,\n          energy: res.data.energy,\n          potassium: res.data.potassium,\n          userName: \"JohnSmith\"\n        })\n          .then(alert(res.data.foodName + \" saved as favorite food\"))\n          .catch(err => console.log(err));\n      })\n      .catch(err => console.log(err));\n  };\n\n  // loading foodList specific to food group on button click\n  // loadFoodCards = (GroupName) => {\n  //   this.state.foodGroupList.map(group => {\n  //     if (group.foodGroupName == GroupName) {\n  //       this.loadFoodByFoodGroupName(GroupName)\n  //       console.log(GroupName, this.state.foodList, this.state.pics)\n  //     }\n  //   })\n  // }\n  //for search bar\n  loadFoodOnSearch = id => {\n    console.log(this.state.foodList);\n    this.state.foodList.map(foodItem => {\n      if (foodItem.FoodID === id) {\n        console.log(foodItem);\n        this.setState({ results: foodItem });\n        console.log(this.state.results);\n      }\n    });\n  };\n\n  handleInputChange = event => {\n    this.setState({ foodSearch: event.target.value });\n  };\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n    console.log(\"something\");\n    console.log(this.state.foodSearch);\n    console.log(this.state.foodList);\n\n    API.getFoodByFoodName(this.state.foodSearch)\n      .then(res =>\n        this.setState({\n          // results: res\n          foodList: res.data\n        })\n      )\n      .catch(err => console.log(err));\n  };\n\n  render() {\n    var foodDisplay = {\n      color: \"#1e90ff\",\n      fontWeight: \"bold\"\n    };\n    var iconClass = {\n      position: \"absolute\",\n      bottom: 0,\n      right: 6\n    };\n\n    return (\n      <Container fluid>\n        <Row>\n          <div className=\"col-6 search-bar offset-6\">\n            <div className=\"input-group mt-3 form-sm form-2 pl-0\">\n              <input\n                className=\"form-control my-0 py-1 red-border\"\n                type=\"text\"\n                placeholder=\"Enter Food Name\"\n                aria-label=\"Search\"\n                value={this.state.foodSearch}\n                onChange={this.handleInputChange}\n                name=\"foodSearch\"\n              />\n              <div className=\"input-group-append\">\n                {/* <span className=\"input-group-text red lighten-3\" id=\"basic-text1\"><i className=\"fa fa-search\" aria-hidden=\"true\"></i></span> */}\n                <button\n                  className=\"input-group-text red lighten-3\"\n                  onClick={this.handleFormSubmit}\n                >\n                  <i className=\" fa fa-search\" />\n                </button>\n              </div>\n            </div>\n\n            {/* <form>\n              <Input\n                value={this.state.foodSearch}\n                onChange={this.handleInputChange}\n                name=\"foodSearch\"\n                placeholder=\"Enter Food Name\"\n              />\n              <button\n                onClick={this.handleFormSubmit}><i className=\"fa fa-search\"></i>\n              </button>\n            </form> */}\n          </div>\n          {/* <SearchResults\n            foodName={this.state.results.foodName}\n            potassium={this.state.results.potassium}\n          /> */}\n        </Row>\n        <div className=\"container\">\n          <h4>Browse Common Foods</h4>\n          <hr />\n          <Row>\n            {this.state.foodGroupList.length ? (\n              this.state.foodGroupList.map(foodGroupList => (\n                <Col size=\"lg-4\">\n                  <Container>\n                    <div\n                      className=\"holder container card\"\n                      onClick={() =>\n                        this.loadFoodByFoodGroupName(\n                          foodGroupList.foodGroupName\n                        )\n                      }\n                    >\n                      {/* {console.log(foodGroupList.image)} */}\n                      {/* <div className=\"card\" style={{ width: 35 }}> */}\n                      <div className=\"row p-2 pt-3\">\n                        <div className=\"col-4 view overlay zoom\">\n                          <img\n                            className=\"card-img-left\"\n                            style={{ width: 95, height: 95 }}\n                            alt=\"foodPic\"\n                            src={foodGroupList.image}\n                          />\n                          {/* <Col size=\"md-6\" className=\"card-body\"> */}\n                        </div>\n                        <div className=\"col-6 offset-1\">\n                          <button\n                            key={foodGroupList.foodGroupName}\n                            className=\"custom-btn text-center\"\n                          >\n                            {/* <Link to={\"/food/\" + food._id}></Link> */}\n                            <strong>\n                              <p className=\"card-title\">\n                                {\" \"}\n                                {foodGroupList.foodGroupName}{\" \"}\n                              </p>\n                            </strong>\n                          </button>\n                        </div>\n                      </div>\n                      <div style={iconClass} className=\"moreIcon\">\n                        <p style={{ color: \"blue\" }}>more</p>\n                      </div>\n                    </div>\n                  </Container>\n                </Col>\n              ))\n            ) : (\n              <h3>No Results to Display1</h3>\n            )}\n            {/* </Col> */}\n          </Row>\n        </div>\n        <Row>\n          {this.state.foodList.length ? (\n            this.state.foodList.map(foodList => (\n              <Col size=\"md-6\">\n                <Button\n                  key={foodList._id}\n                  onClick={() => this.saveFoodByUser(foodList._id, \"\")}\n                  className=\"btn btn-light btn-lg text-left designed p-5\"\n                >\n                  <div className=\"card-content\">\n                    <strong>\n                      <h5 style={foodDisplay}>{foodList.foodName}</h5>\n                      <br />\n                      Food Group: {foodList.foodGroupName} <br />\n                      Energy: {foodList.energy}kCal <br />\n                      Potassium: {foodList.potassium}gm <br />\n                      Efficiency: {foodList.efficiency} <br />\n                      Username: {foodList.userName} <br />\n                    </strong>\n                  </div>\n                  <div className=\"text-right\">\n                    <i className=\"fa fa-gratipay\" />\n                    <br />\n                    <p className=\"add-fav\">Add to favorites</p>\n                  </div>\n                </Button>\n              </Col>\n            ))\n          ) : (\n            <h3>No Results to Display</h3>\n          )}\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default Food;\n","import React from \"react\";\nimport \"./style.css\";\n\n// The ...props means, spread all of the passed props onto this element\n// That way we don't have to define them all individually\nfunction DeleteBtn(props) {\n  return (\n    <span className=\"delete-btn\" {...props} role=\"button\" tabIndex=\"0\">\n      ✗\n    </span>\n  );\n}\n\nexport default DeleteBtn;\n","import React from \"react\";\nimport \"./style.css\";\n\n// The ...props means, spread all of the passed props onto this element\n// That way we don't have to define them all individually\nfunction Date(props) {\n  return (\n    <div className=\"form-group\">\n      <input {...props} type=\"date\" />\n    </div>\n  );\n}\n\nexport default Date;\n","import React, { Component } from \"react\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport API from \"../utils/API\";\nimport { Link } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { List, ListItem } from \"../components/List\";\nimport { Input, TextArea, FormBtn } from \"../components/Form\";\nimport Card from \"../components/Card\";\nimport DeleteBtn from \"../components/DeleteBtn\";\nimport AddBtn from \"../components/AddBtn\";\nimport Button from \"../components/Button\";\n//import Calendar from \"../components/Calendar\";\nimport Date from \"../components/Date\";\nvar moment = require(\"moment\");\n\nclass Schedule extends Component {\n  state = {\n    scheduleDate: \"\",\n    dailyPlanList: [],\n    scheduleDailyPlanList: [],\n    scheduleList: null,\n    currentSchedule: [],\n    totalEnergy: null,\n    totalPotassium: null,\n    currentDailyPlan: [],\n    scheduleObject: [],\n    dailyPlanObject: [],\n    mealObject: [],\n    foodObject: [],\n    scheduleContent: []\n  };\n\n  componentDidMount() {\n    // this.loadSchedule(\"JohnSmith\");\n    this.loadDailyPlan(\"JohnSmith\");\n\n    this.setState({\n      scheduleDate: moment().format(\"YYYY-MM-DD\")\n    });\n  }\n  // loadFoodFavorites = userName => {\n  //   API.getFoodByUser(userName)\n  //     .then(res => {\n  //       console.log(\"foodFavoriteList is: \", res.data);\n  //       this.setState({\n  //         foodFavoriteList: res.data\n  //       });\n  //     })\n  //     .catch(err => console.log(err));\n  // };\n\n  loadSchedule = userName => {\n    API.getScheduleByUser(userName)\n      .then(res => {\n        this.setState({\n          scheduleList: res.data\n        });\n      })\n      .catch(err => console.log(err));\n  };\n\n  loadDailyPlan = userName => {\n    API.getDailyPlanByUser(userName)\n      .then(res => {\n        this.setState({\n          dailyPlanList: res.data\n        });\n      })\n      .catch(err => console.log(err));\n  };\n\n  loadDailyPlanByScheduleDate = scheduleDate => {\n    var scheduleFoodArray = [];\n\n    API.getScheduleByScheduleDate(scheduleDate)\n      .then(scheduleObject => {\n        console.log(\"scheduleObject is:\", scheduleObject);\n        this.setState({\n          currentSchedule: scheduleObject.data[0]\n        });\n\n        if (scheduleObject.data.length !== 0) {\n          console.log(\"scheduleObject.data.length is greater than zero\");\n          scheduleObject.data.map(scheduleElement =>\n            API.getDailyPlanByID(scheduleElement.dailyPlanID)\n              .then(dailyPlanObject => {\n                // this.setState({\n                //   dailyPlanObject: dailyPlanObject.data\n                // });\n                console.log(\"dailyPlanObject is:\", dailyPlanObject);\n                dailyPlanObject.data.mealList.map(mealListID =>\n                  API.getMealByID(mealListID)\n                    .then(mealObject => {\n                      console.log(\"mealObject is:\", mealObject);\n                      // this.setState({\n                      //   mealObject: mealObject.data\n                      // });\n\n                      // scheduleContent += mealObject.data.mealName;\n\n                      mealObject.data.foodList.map(foodList =>\n                        API.getFoodByID(foodList.food._id)\n                          .then(foodObject => {\n                            //  console.log(\"foodObject is:\", foodObject);\n                            // foodObject.data.map(food =>\n                            // let scheduleDailyPlanListObject = {\n                            //   scheduleObject: {\n                            //     dailyPlanObject: {\n                            //       mealObject: {\n                            //         foodObject\n                            //       }\n                            //     }\n                            //   }\n                            // };\n                            console.log(\"foodObject is:\", foodObject);\n                            scheduleFoodArray.push(foodObject);\n                            //);\n\n                            this.setState({\n                              scheduleContent: scheduleFoodArray\n                            });\n                          })\n                          .catch(err => console.log(err))\n                      );\n                    })\n                    .catch(err => console.log(err))\n                );\n              })\n              .catch(err => console.log(err))\n          );\n        } //if statement\n      })\n      .catch(err => console.log(err));\n  };\n\n  removeFromSchedule = dailyPlanID => {\n    API.removeDailyPlanFromScheduleByID(\n      this.state.currentSchedule._id,\n      dailyPlanID\n    )\n      .then(data => {\n        // console.log(\"in remove food... data.data is\", data.data);\n        // console.log(\"foodlist is:\", data.data.foodList);\n        // const totalEnergy = data.data.foodList.reduce((a, b) => ({\n        //   energy: a.energy + b.energy\n        // }));\n        // const totalPotassium = data.data.foodList.reduce((a, b) => ({\n        //   potassium: a.potassium + b.potassium\n        // }));\n        const tempScheduleList = data.data.scheduleList;\n        let totalPotassium = 0;\n        let totalEnergy = 0;\n        tempScheduleList.map(schedule => {\n          totalPotassium += schedule.potassium;\n          totalEnergy += schedule.energy;\n        });\n        console.log(\"total energy is:\", totalEnergy);\n        console.log(\"total potassium is:\", totalPotassium);\n        API.updateEnergyPotassiumTotalsForScheduleByID(\n          this.state.currentSchedule._id,\n          totalEnergy,\n          totalPotassium\n        ).then(data => {\n          console.log(\n            \"dailyPlan data after food REMOVE, with updated totals\",\n            data.data\n          );\n          this.setState({\n            currentSchedule: data.data\n          });\n        });\n      })\n      .catch(err => console.log(err));\n  };\n\n  //! new version\n  addToSchedule = (\n    dailyPlan_id,\n    dailyPlanTotalEnergy,\n    dailyPlanTotalPotassium\n  ) => {\n    // console.log(\"in addToDailyPlan\");\n    // console.log(\"food id is:\", food_id);\n    // console.log(\"servingSize is:\", servingSize);\n\n    let scheduleData = {\n      scheduleDate: this.state.scheduleDate,\n      userName: \"JohnSmith\",\n      totalEnergy: dailyPlanTotalEnergy,\n      totalPotassium: dailyPlanTotalPotassium,\n      dailyPlanID: dailyPlan_id\n    };\n\n    API.updateSchedule(scheduleData)\n      .then(res => {\n        // const tempDailyPlanList = data.data.dailyPlanList;\n        // let totalPotassium = 0;\n        // let totalEnergy = 0;\n        // tempDailyPlanList.map(dailyPlan => {\n        //   totalPotassium += dailyPlan.potassium;\n        //   totalEnergy += dailyPlan.energy;\n        // });\n\n        // this.setState({\n        //   currentSchedule: res.data\n        // });\n        this.loadDailyPlanByScheduleDate(this.state.scheduleDate);\n      })\n      .catch(err => console.log(err));\n  };\n  //next 3 functions from addDailyPlan.js\n  deleteSchedule = id => {\n    API.deleteSchedule(id)\n      .then(res => {\n        console.log(\"res is: \", res.data);\n        window.location.href = \"/ViewSchedule\";\n\n        // window.location.href = \"/AddDailyPlan\";\n        // this.setState({\n        //   dailyPlanList: res.data\n        // });\n      })\n      .catch(err => console.log(err));\n  };\n\n  //  handleInputChange = event => {\n\n  //   };\n\n  handleInputChangeScheduleDate = event => {\n    event.preventDefault();\n\n    this.setState({\n      scheduleDate: event.target.value,\n      scheduleContent: []\n    });\n\n    this.loadDailyPlanByScheduleDate(event.target.value);\n\n    if (this.state.scheduleObject.dailyPlanID === null) {\n      var defaultData = {\n        scheduleDate: event.target.value,\n        userName: \"JohnSmith\",\n        dailyPlanID: null,\n        totalEnergy: 0,\n        totalPotassium: 0\n      };\n\n      if (event.target.value) {\n        API.saveSchedule(defaultData)\n          //todo this refreshes the screen... or should i update state?\n          .then(\n            //res => (window.location.href = \"/ViewSchedule\")\n            //res =>\n            this.setState({\n              currentSchedule: defaultData\n            })\n\n            //  console.log(res.data)\n          )\n          // .then(res => (window.location.href = \"/AddDailyPlan\"))\n          //.then(res => this.loadDailyPlans())\n          .catch(err => console.log(err));\n      }\n    }\n  };\n\n  render() {\n    return (\n      <Container fluid>\n        {/* <Row>\n          <Col size=\"md-12 sm-12\">\n            <Jumbotron>\n              <h1>View Schedule</h1>\n            </Jumbotron>\n          </Col>\n        </Row> */}\n\n        <Row>\n          <Col size=\"md-12\">\n            <form>\n              <Input\n                value={this.state.scheduleDate}\n                onChange={this.handleInputChangeScheduleDate}\n                name=\"scheduleDate\"\n                type=\"date\"\n                defaultValue={this.state.scheduleDate}\n              />\n            </form>\n          </Col>\n        </Row>\n\n        {console.log(this.state.currentSchedule)}\n        {this.state.currentSchedule ? (\n          <Row>\n            <Col size=\"md-12 sm-12\">\n              {/* <strong>Selected DailyPlan: </strong>{\" \"}\n              {this.state.currentDailyPlan.dailyPlanName} */}\n              <strong>Schedule Date: </strong>\n              {moment(this.state.currentSchedule.scheduleDate).format(\n                \"YYYY-MM-DD\"\n              ) + \" \"}\n              <strong>Total Energy: </strong>\n              {this.state.currentSchedule.totalEnergy}{\" \"}\n              <strong>Total Potassium: </strong>\n              {this.state.currentSchedule.totalPotassium}\n            </Col>\n          </Row>\n        ) : (\n          \"\"\n        )}\n\n        <Row>\n          <Col size=\"md-4 sm-4\">\n            <h3>DailyPlan List</h3>\n\n            {/* <Row>\n              <Col> */}\n            {this.state.dailyPlanList.length ? (\n              <>\n                {this.state.dailyPlanList.map(dailyPlan => (\n                  <Card\n                    key={dailyPlan._id}\n                    //todo: clicking on card isn't working...need to fix\n                    // onClick={() => this.selectDailyPlan(dailyPlan)}\n                  >\n                    {/* <Link to={\"/food/\" + food._id}></Link> */}\n                    <strong>\n                      DailyPlan Name: {dailyPlan.dailyPlanName} <br />\n                      Energy: {dailyPlan.totalEnergy} <br />\n                      Potassium: {dailyPlan.totalPotassium} <br />\n                    </strong>\n\n                    <Button\n                      className=\"btn btn-primary\"\n                      onClick={() =>\n                        this.addToSchedule(\n                          dailyPlan._id,\n                          dailyPlan.totalEnergy,\n                          dailyPlan.totalPotassium\n                        )\n                      }\n                    >\n                      Add\n                    </Button>\n                  </Card>\n                ))}\n              </>\n            ) : (\n              <h6>No DailyPlans, Add a dailyPlan first</h6>\n            )}\n          </Col>\n\n          <Col size=\"md-4 sm-4\">\n            <h3>Foods in your Schedule</h3>\n            {console.log(\n              \"this.state.scheduleContent is\",\n              this.state.scheduleContent\n            )}\n\n            {/* {this.state.scheduleContent.map(food => (\n              <Card key={food.data._id}>\n                <strong>\n                  <br /> {food.data.foodName} <br />\n                  <br /> Energy:{food.data.energy} <br />\n                  <br /> Potassium:{food.data.potassium} <br />\n                  <br /> Efficiency:{food.data.efficiency}\n                  {food.efficiency} <br />\n                </strong>\n              </Card>\n            ))} */}\n\n            {this.state.currentSchedule &&\n            this.state.currentSchedule.dailyPlanID === null\n              ? \"Please add a Daily Plan to your schedule\"\n              : this.state.scheduleContent.map(food => (\n                  <Card key={food.data._id}>\n                    <strong>\n                      <br /> {food.data.foodName} <br />\n                      <br /> Energy:{food.data.energy} <br />\n                      <br /> Potassium:{food.data.potassium} <br />\n                      <br /> Efficiency:{food.data.efficiency}\n                      {food.efficiency} <br />\n                    </strong>\n                  </Card>\n                ))}\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default Schedule;\n","import React, { Component } from \"react\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport API from \"../utils/API\";\nimport { Link } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport Card from \"../components/Card\";\nimport { List, ListItem } from \"../components/List\";\nimport { Input, TextArea, FormBtn, Dropdown } from \"../components/Form\";\nimport DeleteBtn from \"../components/DeleteBtn\";\n\nclass Meal extends Component {\n  state = {\n    mealName: \"\",\n    mealList: []\n  };\n\n  componentDidMount() {\n    this.loadMeals();\n  }\n\n  loadMeals = () => {\n    API.getMealByUser(\"JohnSmith\")\n      .then(res => {\n        this.setState({\n          mealList: res.data\n        });\n      })\n      .catch(err => console.log(err));\n  };\n\n  deleteMeal = id => {\n    API.deleteMeal(id)\n      .then(res => {\n        console.log(\"res is: \", res.data);\n        window.location.href = \"/AddMeal\";\n        // this.setState({\n        //   mealList: res.data\n        // });\n      })\n      .catch(err => console.log(err));\n  };\n\n  // loadFood = () => {\n  //   API.getFoodByFoodGroupNameAndUser(\"Sweets\", \"master\")\n  //     // API.getFoodByFoodGroupAndUser(\"Sweets\", \"JohnSmith\")\n  //     .then(res =>\n  //       this.setState({\n  //         foodList: res.data,\n  //         mealName: \"\",\n  //         foods: 0\n  //       })\n  //     )\n  //     .catch(err => console.log(err));\n  // };\n\n  // deleteFood = id => {\n  //   API.deleteFood(id)\n  //     .then(res => this.loadFood())\n  //     .catch(err => console.log(err));\n  // };\n\n  handleInputChange = event => {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value\n    });\n    console.log([name], value);\n    // console.log(this.state.foods);\n  };\n\n  handleFormSubmit = event => {\n    alert(this.state.foods);\n    event.preventDefault();\n    if (this.state.mealName) {\n      API.saveMeal({\n        mealName: this.state.mealName,\n        userName: \"JohnSmith\",\n        totalEnergy: 0,\n        totalPotassium: 0\n      })\n        //todo this refreshes the screen... or should i update state?\n        .then(res => (window.location.href = \"/AddMeal\"))\n        //.then(res => this.loadMeals())\n        .catch(err => console.log(err));\n    }\n  };\n\n  render() {\n    return (\n      <Container fluid>\n        <Row>\n          <Col size=\"md-12\">\n            <Jumbotron>\n              <h1>Add New Meal</h1>\n            </Jumbotron>\n          </Col>\n        </Row>\n        <Row>\n          <Col size=\"md-12\">\n            {/* <form> */}\n            <Input\n              value={this.state.mealName}\n              onChange={this.handleInputChange}\n              name=\"mealName\"\n              placeholder=\"Meal Name (required)\"\n            />\n            <FormBtn\n              disabled={\n                !this.state.mealName\n\n                // && this.state.foodGroup &&\n                // this.state.energy &&\n                // this.state.potassium\n              }\n              onClick={this.handleFormSubmit}\n            >\n              Add Meal\n            </FormBtn>\n          </Col>\n        </Row>\n        <Row>\n          <Col size=\"md-12\">\n            <>\n              {/* // name=\"foods\" // onChange={this.handleInputChange}\n              // label=\"Foods\" // // value={this.state.foods[0].foodId}> */}\n              {this.state.mealList.map(meal => (\n                // <ListItem value={meal._id}>\n                <Card value={meal._id}>\n                  {meal.mealName}\n                  <DeleteBtn onClick={() => this.deleteMeal(meal._id)} />\n                </Card>\n                // </ListItem>\n              ))}\n              {/* {console.log(this.state.mealList)} */}\n            </>\n            {/* <Input\n                value={this.state.foods[0].servingSize}\n                onChange={this.handleInputChange}\n                name=\"servingsize\"\n                placeholder=\"Serving Size (optional)\"\n              /> */}\n\n            {/* <TextArea\n                value={this.state.synopsis}\n                onChange={this.handleInputChange}\n                name=\"synopsis\"\n                placeholder=\"Synopsis (Optional)\"\n              /> */}\n            {/* </form> */}\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default Meal;\n","import React, { Component } from \"react\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport API from \"../utils/API\";\nimport { Link } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { List, ListItem } from \"../components/List\";\nimport { Input, TextArea, FormBtn } from \"../components/Form\";\nimport Card from \"../components/Card\";\nimport DeleteBtn from \"../components/DeleteBtn\";\nimport AddBtn from \"../components/AddBtn\";\nimport Button from \"../components/Button\";\nimport \"./viewFoodStyle.css\";\nimport \"font-awesome/css/font-awesome.min.css\";\n// import '../node_modules/react-vis/dist/style.css';\n//import 'C:\\Users\\gurne\\OneDrive\\Documents\\Project3\\project3\\client\\node_modules/'\n//import { XYPlot, XAxis, YAxis, HorizontalGridLines, LineSeries } from 'react-vis';\n\nclass Meal extends Component {\n  state = {\n    // first item from add meal\n    mealName: \"\",\n    mealList: [],\n    foodList: [],\n    foodFavoriteList: [],\n    currentMeal: null\n  };\n\n  componentDidMount() {\n    this.loadMeals(\"JohnSmith\");\n    this.loadFoodFavorites(\"JohnSmith\");\n  }\n\n  loadFoodFavorites = userName => {\n    API.getFoodByUser(userName)\n      .then(res => {\n        console.log(\"FOODFAVORITES LIST IS: \", res.data);\n        this.setState({\n          foodFavoriteList: res.data\n        });\n      })\n      .catch(err => console.log(err));\n  };\n\n  loadMeals = userName => {\n    API.getMealByUser(userName)\n      .then(res => {\n        console.log(\"GETMEALBYUSER RETURNED: \", res.data);\n        this.setState({\n          mealList: res.data,\n          currentMeal: res.data[0]\n        });\n      })\n      .catch(err => console.log(err));\n  };\n\n  selectMeal = mealId => {\n    console.log(\"JUST GOT INTO SELECT MEAL AND MEALID IS:\", mealId);\n    API.getMealByID(mealId)\n      .then(res => {\n        console.log(\"GETMEALBYID RETURNED: \", res.data);\n        this.setState({\n          currentMeal: res.data\n        });\n      })\n      .catch(err => console.log(err));\n  };\n\n  removeFromMeal = foodID => {\n    console.log(\"remove food:\", foodID);\n    console.log(\"from meal:\", this.state.currentMeal._id);\n    API.removeFoodFromMealByID(this.state.currentMeal._id, foodID)\n      .then(data => {\n        console.log(\"food delete returned: \", data);\n        // }\n        // );\n        const tempFoodList = data.data.foodList;\n        let totalPotassium = 0;\n        let totalEnergy = 0;\n        tempFoodList.map(food => {\n          totalPotassium += food.food.potassium;\n          totalEnergy += food.food.energy;\n        });\n        console.log(\"total energy is:\", totalEnergy);\n        console.log(\"total potassium is:\", totalPotassium);\n        API.updateEnergyPotassiumTotalsForMealByID(\n          this.state.currentMeal._id,\n          totalEnergy,\n          totalPotassium\n        ).then(data => {\n          console.log(\n            \"meal data after food REMOVE, with updated totals\",\n            data.data\n          );\n          this.setState({\n            currentMeal: data.data\n          });\n        });\n      })\n      .catch(err => console.log(err));\n  };\n\n  //! new version\n  addToMeal = (food_id, servingSize) => {\n    // console.log(\"in addToMeal\");\n    // console.log(\"food id is:\", food_id);\n    // console.log(\"servingSize is:\", servingSize);\n    API.addFoodToMealByID(this.state.currentMeal._id, food_id, servingSize)\n      .then(data => {\n        // console.log(\"addFoodToMealByID data.data is\", data.data);\n        // console.log(\"foodlist is:\", data.data.foodList);\n        // const totalEnergy = data.data.foodList.reduce((a, b) => ({\n        //   energy: a.energy + b.energy\n        // }));\n        // const totalPotassium = data.data.foodList.reduce((a, b) => ({\n        //   potassium: a.potassium + b.potassium\n        // }));\n        console.log(\"data.data is:\", data.data);\n        const tempFoodList = data.data.foodList;\n        console.log(\"tempFoodList is:\", tempFoodList);\n        let totalPotassium = 0;\n        let totalEnergy = 0;\n        tempFoodList.map(food => {\n          totalPotassium += food.food.potassium;\n          totalEnergy += food.food.energy;\n        });\n        console.log(\"total energy before update totals is:\", totalEnergy);\n        console.log(\"total potassium before update totals is:\", totalPotassium);\n        API.updateEnergyPotassiumTotalsForMealByID(\n          this.state.currentMeal._id,\n          totalEnergy,\n          totalPotassium\n        ).then(data => {\n          console.log(\n            \"meal data after food ADD, with updated totals\",\n            data.data\n          );\n          this.setState({\n            currentMeal: data.data\n          });\n        });\n      })\n      .catch(err => console.log(err));\n  };\n\n  //next 3 functions from addMeal.js\n  deleteMeal = id => {\n    API.deleteMeal(id)\n      .then(res => {\n        console.log(\"res is: \", res.data);\n        window.location.href = \"/ViewMeal\";\n\n        // window.location.href = \"/AddMeal\";\n        // this.setState({\n        //   mealList: res.data\n        // });\n      })\n      .catch(err => console.log(err));\n  };\n\n  handleInputChange = event => {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value\n    });\n    console.log([name], value);\n    // console.log(this.state.foods);\n  };\n\n  handleFormSubmit = event => {\n    // alert(this.state.foods);\n    event.preventDefault();\n    if (this.state.mealName) {\n      API.saveMeal({\n        mealName: this.state.mealName,\n        userName: \"JohnSmith\",\n        totalEnergy: 0,\n        totalPotassium: 0\n      })\n        //todo this refreshes the screen... or should i update state?\n        .then(res => (window.location.href = \"/ViewMeal\"))\n        // .then(res => (window.location.href = \"/AddMeal\"))\n        .catch(err => console.log(err));\n    }\n  };\n\n  render() {\n    const thumbnail = {\n      width: 50,\n      height: 50\n    };\n    // console.log(this.state.currentMeal);\n    return (\n      <Container fluid>\n        {/* <Row>\n          <Col size=\"sm-12\">\n            <Jumbotron>\n              <h1>View Meal</h1>\n            </Jumbotron>\n          </Col>\n        </Row> */}\n        {/* the charts and details should show here */}\n        {this.state.currentMeal ? (\n          <div>\n            <div className=\"d-flex flex-row justify-content-center mb-1\">\n              <h3>Current Meal</h3>\n            </div>\n            <div className=\"d-flex flex-row justify-content-center mb-5\">\n              <div className=\"p-3 pl-5 dotted-div\">\n                <img\n                  style={thumbnail}\n                  alt=\"icon\"\n                  src=\"https://i.imgur.com/ftEWZYQ.png\"\n                />\n                <span className=\"meal-selected\">\n                  {\" \"}\n                  {this.state.currentMeal.mealName}\n                </span>\n              </div>\n              <div className=\"p-3 dotted-div\">\n                <img\n                  style={thumbnail}\n                  alt=\"icon\"\n                  src=\"https://i.imgur.com/iCAG80W.png\"\n                />\n                {this.state.currentMeal.totalEnergy}kCal\n              </div>\n              <div className=\"p-3 dotted-div\">\n                <img\n                  style={thumbnail}\n                  alt=\"icon\"\n                  src=\"https://i.imgur.com/rK4wz3p.jpg\"\n                />{\" \"}\n                {this.state.currentMeal.totalPotassium}gm\n              </div>\n              <div className=\"p-3  pr-5 dotted-div\">\n                <img\n                  style={thumbnail}\n                  alt=\"icon\"\n                  src=\"https://i.imgur.com/rK4wz3p.jpg\"\n                />{\" \"}\n                {this.state.currentMeal.efficiency}\n              </div>\n            </div>\n          </div>\n        ) : (\n          <div className=\"row ml-5\">\n            <h6>\n              Select a Meal from the meal list to see what foods it contains and\n              to make changes\n            </h6>\n          </div>\n        )}\n        <div className=\"container row ml-3 mb-3\">\n          <div className=\"col-6 mt-2\">\n            <Input\n              value={this.state.mealName}\n              onChange={this.handleInputChange}\n              name=\"mealName\"\n              placeholder=\"Enter meal name to create new meal\"\n            />\n          </div>\n          <div className=\"col-2\">\n            <Button\n              className=\"btn btn-primary\"\n              disabled={\n                !this.state.mealName\n\n                // && this.state.foodGroup &&\n                // this.state.energy &&\n                // this.state.potassium\n              }\n              onClick={this.handleFormSubmit}\n            >\n              Add Meal\n            </Button>\n          </div>\n        </div>\n\n        {/* end of add meal section */}\n        {/* <Col size=\"md-4 sm-4\">\n          <Row>\n            <Col size=\"sm-12\">\n              <h6>Select a Meal</h6>\n            </Col>\n          </Row>\n          )}\n        </Col> */}\n        {/* starting the display */}\n        <div className=\"row\">\n          {/* select a meal div */}\n          <div className=\"col-3 ml-5\">\n            <div className=\" justify-content-center\">\n              <h3 className=\"text-center\">Select a Meal</h3>\n              <hr />\n            </div>\n            <Row>\n              {this.state.mealList.length ? (\n                <>\n                  <ul className=\"list-group list-group-flush\">\n                    <ul className=\"list-group\">\n                      {this.state.mealList.map(meal => (\n                        <li className=\"list-group-item\" key={meal._id}>\n                          {/* //todo: clicking on card isn't working...need to fix */}\n                          {/* // onClick={() => this.selectMeal(meal)} */}\n                          {/* <Link to={\"/food/\" + food._id}></Link> */}\n                          <div className=\"row\">\n                            <div className=\"col-8\">\n                              <strong>\n                                <h5 style={{ fontWeight: \"bolder\" }}>\n                                  {\" \"}\n                                  Meal Name:\n                                  <span className=\"meal-selected\">\n                                    {meal.mealName}\n                                  </span>{\" \"}\n                                </h5>\n                                <span className=\"spanIt\">Energy:</span>{\" \"}\n                                {meal.totalEnergy} kCal <br />\n                                <span className=\"spanIt\"> Potassium:</span>{\" \"}\n                                {meal.totalPotassium} gm\n                                <br />\n                                {/* {parseInt(meal.totalPotassium) === 0\n                                  ? 0\n                                  : parseFloat(\n                                    parseInt(meal.totalEnergy) /\n                                    parseInt(meal.totalPotassium)\n                                  ).toFixed(2)} */}\n                                <br />\n                              </strong>\n                            </div>\n                            <div className=\"col-2\">\n                              <div className=\"col-12\">\n                                <button\n                                  // style={{ border: 0 }}\n                                  role=\"button\"\n                                  className=\"btn px-3 text-center blue-gradient \"\n                                  onClick={() => this.selectMeal(meal._id)}\n                                >\n                                  <div style={{ textAlign: \"center\" }}>\n                                    <i className=\"fa fa-plus-circle fa-2x\" />\n                                  </div>\n                                </button>\n                              </div>\n                              <div className=\"col-12\">\n                                <button\n                                  // style={{ border: 0 }}\n                                  role=\"button\"\n                                  className=\"btn px-3 text-center peach-gradient \"\n                                  onClick={() => this.deleteMeal(meal._id)}\n                                >\n                                  <div style={{ textAlign: \"center\" }}>\n                                    <i className=\"fa fa-minus-circle fa-2x\" />\n                                  </div>\n                                </button>\n                              </div>\n                            </div>\n                          </div>\n                        </li>\n                      ))}\n                    </ul>\n                  </ul>\n                </>\n              ) : (\n                <div className=\"justify-content-center\">\n                  <h6 className=\"text-center\">No Meals, Add a meal first</h6>\n                </div>\n              )}\n            </Row>\n          </div>\n\n          {/* you custom food div */}\n          <div className=\"col-3 offset-1\">\n            <div className=\"justify-content-center ml-3\">\n              <h3>Customize your Meal</h3>\n              <hr />\n            </div>\n\n            <Row>\n              {this.state.currentMeal &&\n              this.state.currentMeal.foodList.length > 0 ? (\n                <ul className=\"list-group list-group-flush\">\n                  <ul className=\"list-group\">\n                    {this.state.currentMeal.foodList.map(food => (\n                      <li\n                        className=\"list-group-item text-center\"\n                        key={food._id}\n                      >\n                        <div>\n                          <strong>\n                            <h5 style={{ fontWeight: \"bolder\" }}>\n                              {food.food.foodName}\n                            </h5>\n                            <span className=\"spanIt\">Energy:</span>\n                            {food.food.energy} <br />\n                            <span className=\"spanIt\">Potassium:</span>\n                            {food.food.potassium} <br />\n                            <span className=\"spanIt\"> ServingSize:</span>\n                            {food.servingSize}\n                            <br />\n                            <span className=\"spanIt\"> Efficiency:</span>\n                            {food.food.efficiency}{\" \"}\n                            {/* {food.food.energy / food.food.potassium} */}\n                            {/* {parseFloat(\n                              parseInt(food.food.energy) /\n                                parseInt(food.food.potassium)\n                            ).toFixed(2)} */}\n                            <br />\n                          </strong>\n                        </div>\n                        <button\n                          className=\"btn px-3 text-center peach-gradient \"\n                          onClick={() => this.removeFromMeal(food._id)}\n                        >\n                          <div style={{ textAlign: \"center\" }}>\n                            <i className=\"fa fa-minus-circle fa-2x\" />\n                          </div>\n                        </button>\n                      </li>\n                    ))}\n                  </ul>\n                </ul>\n              ) : (\n                <h6>Click Add on a food item to add it to your meal</h6>\n              )}\n            </Row>\n          </div>\n\n          {/* add fav food div */}\n          <div className=\"col-3 offset-1\">\n            <div className=\"justify-content-center ml-5\">\n              <h3>Add Favorite Foods</h3>\n              <hr />\n            </div>\n\n            <Row>\n              {this.state.foodFavoriteList.length ? (\n                <ul className=\"list-group list-group-flush\">\n                  <ul className=\"list-group\">\n                    {this.state.foodFavoriteList.map(food => (\n                      <li className=\"list-group-item\" key={food._id}>\n                        <div className=\"row\">\n                          <div className=\"col-2 mt-5\">\n                            <button\n                              // style={{ border: 0 }}\n                              role=\"button\"\n                              type=\"button\"\n                              className=\"btn px-3 text-center blue-gradient \"\n                              onClick={() => this.addToMeal(food._id, 100)}\n                            >\n                              <div style={{ textAlign: \"center\" }}>\n                                <i className=\"fa fa-plus-circle fa-2x\" />\n                              </div>\n                            </button>\n                          </div>\n                          <div className=\"col-8 offset-2\">\n                            <strong>\n                              <h5 style={{ fontWeight: \"bolder\" }}>\n                                {food.foodName}{\" \"}\n                              </h5>\n                              <span className=\"spanIt\">Energy:</span>\n                              {food.energy} <br />\n                              <span className=\"spanIt\">Potassium:</span>{\" \"}\n                              {food.potassium} <br />\n                              <span className=\"spanIt\">Efficiency:</span>\n                              {food.efficiency} <br />\n                            </strong>\n                          </div>\n                        </div>\n                      </li>\n                    ))}\n                  </ul>\n                </ul>\n              ) : (\n                <div className=\"justify-content-center ml-5\">\n                  <h6>Click Add to add a food to the meal</h6>\n                </div>\n              )}\n            </Row>\n          </div>\n        </div>\n      </Container>\n    );\n  }\n}\n\nexport default Meal;\n","import React, { Component } from \"react\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport API from \"../utils/API\";\nimport { Link } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { List, ListItem } from \"../components/List\";\nimport { Input, TextArea, FormBtn } from \"../components/Form\";\nimport Card from \"../components/Card\";\nimport DeleteBtn from \"../components/DeleteBtn\";\nimport AddBtn from \"../components/AddBtn\";\nimport Button from \"../components/Button\";\n\nclass DailyPlan extends Component {\n  state = {\n    dailyPlanName: \"\",\n    dailyPlanList: [],\n    mealList: [],\n    dailyPlanMealList: [],\n    currentDailyPlan: null\n  };\n\n  componentDidMount() {\n    this.loadDailyPlans(\"JohnSmith\");\n    this.loadMealList(\"JohnSmith\");\n  }\n  loadMealList = userName => {\n    API.getMealByUser(userName)\n      .then(res => {\n        console.log(\"mealList is: \", res.data);\n        this.setState({\n          mealList: res.data\n        });\n      })\n      .catch(err => console.log(err));\n  };\n\n  loadDailyPlans = userName => {\n    API.getDailyPlanByUser(userName)\n      .then(res => {\n        console.log(\"getDailyPlanByUser returned: \", res.data);\n        this.setState({\n          dailyPlanList: res.data\n        });\n      })\n      .catch(err => console.log(err));\n  };\n\n  selectDailyPlan = dailyPlan => {\n    console.log(\"selectDailyPlan dailyplan is : \" + dailyPlan);\n    console.log(dailyPlan);\n\n    this.setState({ currentDailyPlan: dailyPlan });\n    console.log(\n      \"selected dailyPlan... now current dailyPlan state is:\",\n      this.state.currentDailyPlan\n    );\n\n    var mealListArray = [];\n    dailyPlan.mealList.map(mealID =>\n      API.getMealByID(mealID)\n        .then(res => {\n          console.log(\"mealListArray element is: \", res.data);\n\n          mealListArray.push(res.data);\n\n          this.setState({\n            dailyPlanMealList: mealListArray\n          });\n        })\n        .catch(err => console.log(err))\n    );\n  };\n\n  removeFromDailyPlan = mealID => {\n    console.log(\"remove meal:\", mealID);\n    console.log(\"from dailyPlan:\", this.state.currentDailyPlan._id);\n    API.removeMealFromDailyPlanByID(this.state.currentDailyPlan._id, mealID)\n      .then(data => {\n        console.log(\"meal delete returned: \", data);\n        // }\n        // );\n        const tempMealList = data.data.mealList;\n        let totalPotassium = 0;\n        let totalEnergy = 0;\n        tempMealList.map(meal => {\n          totalPotassium += meal.meal.totalPotassium;\n          totalEnergy += meal.meal.totalEnergy;\n        });\n        console.log(\"total energy is:\", totalEnergy);\n        console.log(\"total potassium is:\", totalPotassium);\n        API.updateEnergyPotassiumTotalsForDailyPlanByID(\n          this.state.currentDailyPlan._id,\n          totalEnergy,\n          totalPotassium\n        ).then(data => {\n          console.log(\n            \"dailyPlan data after meal REMOVE, with updated totals\",\n            data.data\n          );\n          this.setState({\n            currentDailyPlan: data.data,\n            dailyPlanMealList: data.data.mealList\n          });\n\n          console.log(this.state.dailyPlanMealList);\n        });\n      })\n      .catch(err => console.log(err));\n  };\n\n  //! new version\n  addToDailyPlan = meal_id => {\n    // console.log(\"in addToDailyPlan\");\n    // console.log(\"meal id is:\", meal_id);\n    // console.log(\"servingSize is:\", servingSize);\n    API.addMealToDailyPlanByID(this.state.currentDailyPlan._id, meal_id)\n      .then(data => {\n        // console.log(\"addMealToDailyPlanByID data.data is\", data.data);\n        // console.log(\"meallist is:\", data.data.mealList);\n        // const totalEnergy = data.data.mealList.reduce((a, b) => ({\n        //   energy: a.energy + b.energy\n        // }));\n        // const totalPotassium = data.data.mealList.reduce((a, b) => ({\n        //   potassium: a.potassium + b.potassium\n        // }));\n        console.log(\"data.data is:\", data.data);\n        let tempMealList = data.data.mealList;\n        console.log(\"tempMealList is:\", tempMealList);\n        let totalPotassium = 0;\n        let totalEnergy = 0;\n        tempMealList.map(meal => {\n          totalPotassium += meal.totalPotassium;\n          totalEnergy += meal.totalEnergy;\n        });\n        console.log(\"total energy before update totals is:\", totalEnergy);\n        console.log(\"total potassium before update totals is:\", totalPotassium);\n        API.updateEnergyPotassiumTotalsForDailyPlanByID(\n          this.state.currentDailyPlan._id,\n          totalEnergy,\n          totalPotassium\n        ).then(data => {\n          console.log(data);\n          console.log(\n            \"dailyPlan data after meal ADD, with updated totals\",\n            data.data\n          );\n\n          this.setState({\n            currentDailyPlan: data.data\n          });\n\n          var mealListArray = [];\n          data.data.mealList.map(mealID =>\n            API.getMealByID(mealID)\n              .then(res => {\n                console.log(\"mealListArray element is: \", res.data);\n\n                mealListArray.push(res.data);\n\n                this.setState({\n                  dailyPlanMealList: mealListArray\n                });\n              })\n              .catch(err => console.log(err))\n          );\n        });\n      })\n      .catch(err => console.log(err));\n  };\n  //next 3 functions from addDailyPlan.js\n  deleteDailyPlan = id => {\n    API.deleteDailyPlan(id)\n      .then(res => {\n        console.log(\"res is: \", res.data);\n        window.location.href = \"/ViewDailyPlan\";\n\n        // window.location.href = \"/AddDailyPlan\";\n        // this.setState({\n        //   dailyPlanList: res.data\n        // });\n      })\n      .catch(err => console.log(err));\n  };\n\n  handleInputChange = event => {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value\n    });\n    console.log([name], value);\n    // console.log(this.state.meals);\n  };\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n    if (this.state.dailyPlanName) {\n      API.saveDailyPlan({\n        dailyPlanName: this.state.dailyPlanName,\n        userName: \"JohnSmith\",\n        totalEnergy: 0,\n        totalPotassium: 0\n      })\n        //todo this refreshes the screen... or should i update state?\n        .then(res => (window.location.href = \"/ViewDailyPlan\"))\n        // .then(res => (window.location.href = \"/AddDailyPlan\"))\n        //.then(res => this.loadDailyPlans())\n        .catch(err => console.log(err));\n    }\n  };\n\n  render() {\n    return (\n      <Container fluid>\n        <Row>\n          <Col size=\"md-9 sm-9\">\n            <Input\n              value={this.state.dailyPlanName}\n              onChange={this.handleInputChange}\n              name=\"dailyPlanName\"\n              placeholder=\"Enter dailyPlan name to create new dailyPlan\"\n            />\n          </Col>\n          <Col size=\"md-3 sm-3\">\n            <Button\n              className=\"btn btn-primary\"\n              disabled={\n                !this.state.dailyPlanName\n\n                // && this.state.mealGroup &&\n                // this.state.energy &&\n                // this.state.potassium\n              }\n              onClick={this.handleFormSubmit}\n            >\n              Add DailyPlan\n            </Button>\n          </Col>\n        </Row>\n        {/* end of add dailyPlan section */}\n\n        {this.state.currentDailyPlan ? (\n          <Row>\n            <Col size=\"md-12 sm-12\">\n              <strong>Selected DailyPlan: </strong>{\" \"}\n              {this.state.currentDailyPlan.dailyPlanName}\n              <strong>Total Energy: </strong>\n              {this.state.currentDailyPlan.totalEnergy}\n              <strong>Total Potassium: </strong>\n              {this.state.currentDailyPlan.totalPotassium}\n            </Col>\n          </Row>\n        ) : (\n          <Row>\n            <Col size=\"md-12 sm-12\">\n              <h6>\n                Select a DailyPlan from the dailyPlan list to see what meals it\n                contains and to make changes\n              </h6>\n            </Col>\n          </Row>\n        )}\n\n        <Row>\n          <Col size=\"md-4 sm-4\">\n            <Row>\n              <h3>DailyPlan List</h3>\n            </Row>\n            <Row>\n              {this.state.dailyPlanList.length ? (\n                <>\n                  {this.state.dailyPlanList.map(dailyPlan => (\n                    <Card key={dailyPlan._id}>\n                      {/* <Link to={\"/meal/\" + meal._id}></Link> */}\n                      <strong>\n                        DailyPlan Name: {dailyPlan.dailyPlanName} <br />\n                        Energy: {dailyPlan.totalEnergy} <br />\n                        Potassium: {dailyPlan.totalPotassium} <br />\n                        Efficiency: {dailyPlan.efficiency} <br />\n                      </strong>\n                      <Button\n                        className=\"btn btn-primary\"\n                        onClick={() => this.selectDailyPlan(dailyPlan)}\n                      >\n                        Select\n                      </Button>\n                      <Button\n                        className=\"btn btn-danger\"\n                        onClick={() => this.deleteDailyPlan(dailyPlan._id)}\n                      >\n                        Delete\n                      </Button>\n                    </Card>\n                  ))}\n                </>\n              ) : (\n                <h6>No DailyPlans, Add a dailyPlan first</h6>\n              )}\n            </Row>\n          </Col>\n          <Col size=\"md-4 sm-4\">\n            <Row>\n              <h3>Meals in your DailyPlan</h3>\n            </Row>\n            <Row>\n              <div>\n                {/* this.state.currentDailyPlan && */}\n                {this.state.dailyPlanMealList.length + \" meals\"}\n                {this.state.dailyPlanMealList.length > 0 ? (\n                  <List>\n                    {this.state.dailyPlanMealList.map(meal => (\n                      <Card key={meal._id}>\n                        <strong>\n                          <br /> {meal.mealName} <br />\n                          <br /> Energy:{meal.totalEnergy} <br />\n                          <br /> Potassium:{meal.totalPotassium} <br />\n                          {/* <br /> ServingSize:{meal.servingSize}\n                          <br /> */}\n                          <br /> Efficiency: {meal.efficiency} <br />\n                        </strong>\n                        <Button\n                          className=\"btn btn-danger\"\n                          onClick={() => this.removeFromDailyPlan(meal._id)}\n                        >\n                          Remove\n                        </Button>\n                      </Card>\n                    ))}\n                  </List>\n                ) : (\n                  <h6>Click Add on a meal card to add it to your dailyPlan</h6>\n                )}\n              </div>\n            </Row>\n          </Col>\n          <Col size=\"md-4 sm-4\">\n            <Row>\n              <h3>Meals</h3>\n            </Row>\n            <Row>\n              {this.state.mealList.length ? (\n                this.state.mealList.map(meal => (\n                  <Card key={meal._id}>\n                    <strong>\n                      <br /> {meal.mealName} <br />\n                      <br /> Energy:{meal.totalEnergy} <br />\n                      <br /> Potassium:{meal.totalPotassium} <br />\n                      <br /> Efficiency:{meal.efficiency} <br />\n                    </strong>\n                    <Button\n                      className=\"btn btn-primary\"\n                      onClick={() => this.addToDailyPlan(meal._id)}\n                    >\n                      Add\n                    </Button>\n                  </Card>\n                ))\n              ) : (\n                <h6>Click Add to add a meal to the dailyPlan</h6>\n              )}\n            </Row>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default DailyPlan;\n","import React, { Component } from \"react\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport API from \"../utils/API\";\nimport { Link } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { List, ListItem } from \"../components/List\";\nimport { Input, TextArea, FormBtn } from \"../components/Form\";\nimport SearchResults from \"./SearchResults\";\nimport foods from \"./food.json\";\nimport { FoodPic, FoodContainer } from \"./FoodPic\";\n\nclass FoodItem extends Component {\n  state = {\n    results: \"\",\n    foodSearch: \"\",\n    pics: null\n  };\n\n  handleInputChange = event => {\n    this.setState({ foodSearch: event.target.value });\n  };\n\n  findPic = name => {\n    API.getRecipes(name)\n      .then(res => {\n        const ImgRec = res.data.results.filter(recipe =>\n          Boolean(recipe.thumbnail)\n        );\n        this.setState({ pics: ImgRec.length > 0 ? ImgRec[0].thumbnail : null });\n      })\n      .catch(err => console.log(err));\n  };\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n    console.log(foods);\n    foods.map(item => {\n      let key = item.id;\n      if (item.foodID === this.state.foodSearch) {\n        console.log(item.foodName);\n        this.setState({ results: item });\n        this.findPic(item.foodName);\n      }\n    });\n  };\n\n  render() {\n    return (\n      <Container fluid>\n        <Row>\n          <Col size=\"md-12\">\n            <h1>What Food Can I Eat?</h1>\n            <form>\n              <Input\n                value={this.state.foodSearch}\n                onChange={this.handleInputChange}\n                name=\"foodSearch\"\n                placeholder=\"Enter Food Name\"\n              />\n              <FormBtn onClick={this.handleFormSubmit}>Search Food</FormBtn>\n            </form>\n          </Col>\n        </Row>\n\n        <SearchResults\n          foodName={this.state.results.foodName}\n          potassium={this.state.results.potassium}\n        />\n        <FoodContainer>\n          {console.log(this.state.pics)}\n\n          {this.state.pics && <FoodPic thumbnail={this.state.pics} />}\n        </FoodContainer>\n      </Container>\n    );\n  }\n}\n\nexport default FoodItem;\n","import React, { Component } from \"react\";\nimport FoodItem from \"./Books\";\nimport Login from \"./Login\";\n\nfunction HomeContainer() {\n    return (\n        <div>\n            <FoodItem />\n            <Login />\n        </div>\n    )\n}\n\nexport default HomeContainer;","import React from \"react\";\nimport \"./style.css\"\n\nfunction CustomCard(props) {\n    return (\n        <div className=\"card pl-10\">\n\n            <div class=\"view overlay\">\n                <img class=\"card-img-top\" src=\"https://mdbootstrap.com/img/Photos/Horizontal/Work/4-col/img%20%2821%29.jpg\" alt=\"Card image cap\" />\n                <a>\n                    <div class=\"mask rgba-white-slight\"></div>\n                </a>\n            </div>\n\n\n            <h4 className=\"card-title\">{props.title}</h4>\n            <hr class=\"hr-light\" />\n            <div className=\"card-text\">\n                <ul className=\"list-group\">\n                    <li className=\"list-group-item d-flex justify-content-between align-items-center\">\n                        Food Group\n                        <span >{props.foodGroup}</span>\n                    </li>\n                    <li className=\"list-group-item d-flex justify-content-between align-items-center\">\n                        Energy\n            <span className=\"badge blue-gradient  badge-pill\">{props.energy} kCal</span>\n                    </li>\n                    <li className=\"list-group-item d-flex justify-content-between align-items-center\">\n                        Potassium\n            <span className=\"badge blue-gradient badge-pill\">{props.potassium} mg</span>\n                    </li>\n                    <li className=\"list-group-item d-flex justify-content-between align-items-center\">\n                        Efficiency\n            <span className=\"badge blue-gradient badge-pill\">{props.efficiency}</span>\n                    </li>\n                    <li className=\"list-group-item d-flex justify-content-between align-items-center\">\n                        User Name\n            <span>{props.username}</span>\n                    </li>\n                </ul>\n                {/* <p className=\"text-small text-muted mb-0 pt-3\">* At vero eos et accusamus et iusto ducimus.</p> */}\n            </div>\n        </div>\n\n    )\n}\n\nexport default CustomCard;","import React, { Component } from \"react\";\nimport Button from \"../components/Button\";\nimport API from \"../utils/API\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport Card from \"../components/Card\";\nimport { Input, TextArea, FormBtn, Dropdown } from \"../components/Form\";\nimport CustomCard from \"../components/CustomCard\"\n\nclass FoodFavorite extends Component {\n  state = {\n    foodFavoriteList: [],\n    customize: false,\n    editFoodID: null,\n    energy: 0,\n    potassium: 0,\n    foodGroupName: \"\",\n    foodGroupList: []\n  };\n\n  componentDidMount() {\n    this.loadFoodFavorite(\"JohnSmith\");\n    this.loadFoodGroupByMasterAndUser(\"JohnSmith\");\n  }\n\n  loadFoodFavorite = userName => {\n    API.getFoodByUser(userName)\n      .then(res => {\n        this.setState({\n          foodFavoriteList: res.data\n        });\n      })\n      .catch(err => console.log(err));\n  };\n\n  deleteFood = (id, foodName) => {\n    if (\n      window.confirm(\n        \"Are you sure you would like to delete \" +\n        foodName +\n        \" from your Favorite Foods?\"\n      )\n    ) {\n      API.deleteFoodByID(id)\n        .then(res => this.loadFoodFavorite(\"JohnSmith\"))\n        .catch(err => console.log(err));\n    }\n  };\n\n  handleInputChange = event => {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n\n    if (this.state.energy && this.state.potassium && this.state.foodGroupName) {\n      API.updateFoodByID(this.state.editFoodID, {\n        energy: this.state.energy,\n        potassium: this.state.potassium,\n        foodGroupName: this.state.foodGroupName\n      })\n        .then(\n          this.setState({\n            energy: 0,\n            potassium: 0,\n            foodGroupName: \"\",\n            customize: false\n          })\n        )\n        .catch(err => console.log(err));\n\n      this.loadFoodFavorite(\"JohnSmith\");\n    }\n  };\n\n  edit = (id, energy, potassium, foodGroupName) => {\n    this.setState({\n      customize: true,\n      editFoodID: id,\n      energy: energy,\n      potassium: potassium,\n      foodGroupName: foodGroupName\n    });\n  };\n\n  loadFoodGroupByMasterAndUser = userName => {\n    API.getFoodGroupByMasterAndUser(userName)\n      .then(res =>\n        this.setState({\n          foodGroupList: res.data\n        })\n      )\n      .catch(err => console.log(err));\n  };\n\n  render() {\n    var foodDisplay = {\n      color: '#1e90ff',\n      fontWeight: 'bold'\n    };\n    return (\n      <Container fluid>\n        <Row>\n          <Col size=\"md-12\">\n            {/* <Jumbotron>\n              <h1>View Food</h1>\n            </Jumbotron> */}\n          </Col>\n        </Row>\n\n\n        {this.state.foodFavoriteList.length ? (\n          this.state.foodFavoriteList.map(foodFavoriteList => (\n            <Row>\n              <Col size=\"md-6\" className=\"offset-2\" >\n                <div className=\"m-5\">\n                  <CustomCard\n                    key={foodFavoriteList._id}\n                    title={foodFavoriteList.foodName}\n                    foodGroup={foodFavoriteList.foodGroupName}\n                    energy={foodFavoriteList.energy}\n                    potassium={foodFavoriteList.potassium}\n                    efficiency={foodFavoriteList.efficiency}\n                    username={foodFavoriteList.userName}\n                  >\n                  </CustomCard>\n                </div>\n              </Col>\n\n              {this.state.customize &&\n                this.state.editFoodID === foodFavoriteList._id ? (\n                  <Col size=\"md-4\">\n                    <div className=\"mt-5\">\n                      <Dropdown\n                        name=\"foodGroupName\"\n                        onChange={this.handleInputChange}\n                        label=\"Food Group\"\n                        defaultValue={this.state.foodGroupName}\n                      >\n                        {this.state.foodGroupList.map(foodGroupList => (\n                          <option value={foodGroupList.foodGroupName}>\n                            {foodGroupList.foodGroupName}\n                          </option>\n                        ))}\n                      </Dropdown>\n                    </div>\n                    <Input\n                      defaultValue={foodFavoriteList.energy}\n                      onChange={this.handleInputChange}\n                      name=\"energy\"\n                      placeholder=\"Energy (required)\"\n                      type=\"text\"\n                    />\n\n                    <Input\n                      defaultValue={foodFavoriteList.potassium}\n                      onChange={this.handleInputChange}\n                      name=\"potassium\"\n                      placeholder=\"Potassium (required)\"\n                      type=\"text\"\n                    />\n\n                    <FormBtn\n                      className=\"btn peach-gradient\"\n                      // disabled={!(this.state.energy && this.state.potassium)}\n                      onClick={this.edit}\n                    >\n                      <a style={{ fontWeight: 'bolder' }}> CANCEL <i class=\"fa fa-remove\"></i></a>\n                    </FormBtn>\n\n                    <FormBtn\n                      className=\"btn blue-gradient\"\n                      // disabled={!(this.state.energy && this.state.potassium)}\n                      onClick={this.handleFormSubmit}\n                    >\n                      <a style={{ fontWeight: 'bolder' }}> SUBMIT <i class=\"fa fa-paper-plane\"></i></a>\n\n                    </FormBtn>\n                  </Col>\n                ) : (\n                  <div className=\"conatiner button-container\">\n                    <Col size=\"md-4\">\n                      <div className=\"mt-5\">\n                        <button\n                          key={foodFavoriteList._id}\n                          onClick={() =>\n                            this.edit(\n                              foodFavoriteList._id,\n                              foodFavoriteList.energy,\n                              foodFavoriteList.potassium,\n                              foodFavoriteList.foodGroupName\n                            )\n                          }\n                          className=\"btn btn-outline-mdb-color waves-effect edit-button\"\n                        >\n\n                          <a style={{ fontWeight: 'bolder', fontSize: 15 }}>EDIT<i class=\"fa fa-pencil-square-o\"></i></a>\n                        </button>\n                      </div>\n                    </Col>\n                    <Col size=\"md-4\">\n                      <button\n                        key={foodFavoriteList._id}\n                        onClick={() =>\n                          this.deleteFood(\n                            foodFavoriteList._id,\n                            foodFavoriteList.foodName\n                          )\n                        }\n                        className=\" btn btn-outline-mdb-color waves-effect remove-button\"\n                      >\n                        <a style={{ fontWeight: 'bolder', fontSize: 15 }}>REMOVE<i class=\"fa fa-remove\"></i></a>\n                      </button>\n                    </Col>\n                  </div>\n                )}\n            </Row>\n          ))\n        ) : (\n            <h3>No Results to Display</h3>\n          )}\n      </Container>\n    );\n  }\n}\n\nexport default FoodFavorite;\n","import React, { Component } from \"react\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport API from \"../utils/API\";\n// import { Link } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../components/Grid\";\n// import { List, ListItem } from \"../components/List\";\nimport { Input, TextArea, FormBtn, Dropdown } from \"../components/Form\";\nimport Button from \"../components/Button\";\n\nclass FoodGroup extends Component {\n  state = {\n    foodGroupName: \"\",\n    foodGroupList: \"\",\n    pic: null\n  };\n\n  componentDidMount() {\n    this.loadFoodGroupByMasterAndUser(\"JohnSmith\");\n  }\n\n  loadFoodGroupByMasterAndUser = userName => {\n    API.getFoodGroupByMasterAndUser(userName)\n      .then(res =>\n        this.setState({\n          foodGroupName: \"\",\n          foodGroupList: res.data\n        })\n      )\n      .catch(err => console.log(err));\n  };\n\n  // deleteFood = id => {\n  //   API.deleteFood(id)\n  //     .then(res => this.loadFood())\n  //     .catch(err => console.log(err));\n  // };\n\n  handleInputChange = event => {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n    if (this.state.foodGroupName) {\n      this.findPic(this.state.foodGroupName);\n      API.saveFoodGroup({\n        foodGroupName: this.state.foodGroupName,\n        userName: \"JohnSmith\"\n      })\n\n        .then(res => this.loadFoodGroupByMasterAndUser(\"JohnSmith\"))\n        .catch(err => console.log(err));\n    }\n  };\n\n  findPic = name => {\n    API.getRecipes(name)\n      .then(res => {\n        const ImgRec = res.data.results.filter(recipe =>\n          Boolean(recipe.thumbnail)\n        );\n        this.setState({ pics: ImgRec.length > 0 ? ImgRec[0].thumbnail : null });\n      })\n      .catch(err => console.log(err));\n  };\n\n  render() {\n    return (\n      <Container fluid>\n        <Row>\n          {this.state.foodGroupList.length ? (\n            <div>\n              {/* <ul class=\"list-group list-group-flush\">\n                <ul className=\"list-group list-group-horizontal\"> */}\n              {this.state.foodGroupList.map(foodGroupList => (\n                <div\n                  style={{ border: 2 }}\n                  key={foodGroupList.foodGroupName}\n                  className=\"flex-item\"\n                >\n                  {/* <Link to={\"/food/\" + food._id}></Link> */}\n                  <div>\n                    {foodGroupList.image ? (\n                      <img className=\"card-img-left\" style={{ width: 95, height: 95 }} alt='groupImg'\n                        src={foodGroupList.image} />) : (\n                        <img className=\"card-img-left\" style={{ width: 95, height: 95 }} alt='groupImg'\n                          src={this.state.pics} />)}\n                    <h4> {foodGroupList.foodGroupName}</h4><br />\n                  </div>\n\n                  {/* <DeleteBtn  /> */}\n                </div>\n              ))}\n              {/* </ul>\n              </ul> */}\n            </div>\n          ) : (\n              <h3>No Results to Display</h3>\n            )}\n        </Row>\n\n        <Row>\n          <Col size=\"md-12\">\n            <form>\n              <Input\n                value={this.state.foodGroupName}\n                onChange={this.handleInputChange}\n                name=\"foodGroupName\"\n                placeholder=\"Food Group Name (required)\"\n              />\n\n              <FormBtn\n                disabled={!this.state.foodGroupName}\n                onClick={this.handleFormSubmit}\n              >\n                Submit Food Group\n              </FormBtn>\n            </form>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default FoodGroup;\n","import React, { Component } from \"react\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport API from \"../utils/API\";\n// import { Link } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../components/Grid\";\n// import { List, ListItem } from \"../components/List\";\nimport { Input, TextArea, FormBtn, Dropdown } from \"../components/Form\";\nimport axios from 'axios';\nimport {\n  setInStorage,\n  getFromStorage,\n} from '../utils/storage';\n\nclass Register extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isLoading: true,\n            token: '',\n            signUpError: '',\n            signUpName: '',\n            signUpEmail: '',\n            signUpPassword: '',\n        };\n\n        this.onTextboxChangeSignUpName = this.onTextboxChangeSignUpName.bind(this);\n        this.onTextboxChangeSignUpEmail = this.onTextboxChangeSignUpEmail.bind(this);\n        this.onTextboxChangeSignUpPassword = this.onTextboxChangeSignUpPassword.bind(this);\n        this.onSignUp = this.onSignUp.bind(this);\n    }\n\n    componentDidMount() {\n        const obj = getFromStorage('the_main_app');\n        if (obj && obj.token) {\n            const { token } = obj;\n            // Verify the token\n            axios.get('/api/account/verify?token=' + token)\n            .then(res => {\n                if (res.success) {\n                    this.setState({\n                        token,\n                        isLoading: false\n                    });\n                } else {\n                    this.setState({\n                        isLoading: false,\n                    });\n                }\n            });\n        } else {\n            this.setState({\n                isLoading: false,\n            });\n        }\n    }\n\n    onTextboxChangeSignUpName(event) {\n        this.setState({\n            signUpName: event.target.value,\n        });\n    }\n    onTextboxChangeSignUpEmail(event) {\n        this.setState({\n            signUpEmail: event.target.value,\n        });\n    }\n    onTextboxChangeSignUpPassword(event) {\n        this.setState({\n            signUpPassword: event.target.value,\n        });\n    }\n\n     onSignUp = (e)=> {\n        e.preventDefault();\n            //Grab state\n    const {\n        signUpName,\n        signUpEmail,\n        signUpPassword,\n      } = this.state;\n  \n      this.setState({\n        isLoading: true,\n      });\n      \n      //Post request to backend\n      axios.post('/api/account/signup', {\n          name: signUpName,\n          email: signUpEmail,\n          password: signUpPassword,\n      }).then(res => {\n          console.log(res);\n          if (res.data.success) {\n            this.setState({\n              signUpError: res.message,\n              isLoading: false,\n              signUpEmail: '',\n              signUpName: '',\n              signUpPassword: '',\n            });\n            //REDIRCT THEM TO LOGIN \n            window.location.href = './'\n          }\n        }).catch(err =>{\n            //TELL THE USER THAT THE EMAIL ALREADY EXISTS \n        });\n    }\n\n    render() {\n        const {\n            isLoading,\n            token,\n            signUpError,\n            signUpName,\n            signUpEmail,\n            signUpPassword,\n        } = this.state;\n\n        return (\n            <Container fluid>\n                <Row>\n                    <Col size=\"md-12\">\n                        <Jumbotron>\n                            <h1>New User Registration</h1>\n                        </Jumbotron>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col size=\"md-4\" />\n                    <Col size=\"md-4\">\n                        <form>\n                            Name \n                            <Input\n                                type=\"text\"\n                                placeholder=\"Name\"\n                                value={signUpName}\n                                onChange={this.onTextboxChangeSignUpName}\n                            />\n                            Email \n                            <Input \n                                type=\"email\"\n                                placeholder=\"Email\"\n                                value={signUpEmail}\n                                onChange={this.onTextboxChangeSignUpEmail}\n                            />\n                            Password \n                            <Input \n                                type=\"password\"\n                                placeholder=\"Password\"\n                                value={signUpPassword}\n                                onChange={this.onTextboxChangeSignUpPassword}\n                            />\n                            <FormBtn\n                                disabled={!(this.state.signUpName && this.state.signUpEmail && this.state.signUpPassword)}\n                                onClick={this.onSignUp}\n                            >\n                                Register\n                            </FormBtn>\n                        </form>\n                    </Col>\n                    <Col size=\"md-4\" />\n                </Row>\n            </Container>\n        );\n    }\n}\n\nexport default Register;","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport NoMatch from \"./pages/NoMatch\";\nimport Nav from \"./components/Nav\";\nimport Login from \"./pages/Login\";\nimport Logout from \"./pages/Logout\";\nimport AddFood from \"./pages/AddFood\";\nimport ViewFood from \"./pages/ViewFood\";\nimport ViewSchedule from \"./pages/ViewSchedule\";\nimport AddMeal from \"./pages/AddMeal\";\nimport ViewMeal from \"./pages/ViewMeal\";\nimport ViewDailyPlan from \"./pages/ViewDailyPlan\";\nimport HomeContainer from \"./pages/HomeContainer\";\nimport ViewFoodFavorite from \"./pages/ViewFoodFavorite\";\nimport AddFoodGroup from \"./pages/AddFoodGroup\";\nimport Register from \"./pages/Register\";\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n        <Nav />\n        <Switch>\n          <Route exact path=\"/\" component={Login} />\n          <Route exact path=\"/home\" component={HomeContainer} />\n          <Route exact path=\"/AddFood\" component={AddFood} />\n          <Route exact path=\"/ViewFood\" component={ViewFood} />\n          <Route exact path=\"/AddFoodGroup\" component={AddFoodGroup} />\n          <Route exact path=\"/AddMeal\" component={AddMeal} />\n          <Route exact path=\"/ViewMeal\" component={ViewMeal} />\n          <Route exact path=\"/ViewDailyPlan\" component={ViewDailyPlan} />\n          <Route exact path=\"/ViewSchedule\" component={ViewSchedule} />\n          <Route exact path=\"/ViewFoodFavorite\" component={ViewFoodFavorite} />\n          <Route exact path=\"/Register\" component={Register} />\n          <Route exact path=\"/Logout\" component={Logout} />\n          {/* <Route exact path=\"/foods/:id\" component={Detail} /> */}\n          <Route component={NoMatch} />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}