{"version":3,"sources":["utils/VerifyLogin.js","components/Grid/index.js","components/Jumbotron/index.js","pages/NoMatch.js","components/Form/index.js","utils/storage.js","components/Nav/index.js","utils/API.js","pages/Login.js","pages/Logout.js","pages/AddFood.js","components/Button/index.js","components/List/index.js","components/Card/index.js","pages/FoodPic.js","pages/SearchResults.js","pages/ViewFood.js","components/DeleteBtn/index.js","components/Date/index.js","pages/ViewSchedule.js","pages/AddMeal.js","pages/ViewMeal.js","pages/ViewDailyPlan.js","pages/Books.js","pages/HomeContainer.js","components/CustomCard/index.js","pages/ViewFoodFavorite.js","pages/AddFoodGroup.js","pages/Register.js","ProtectedRoute.js","App.js","index.js"],"names":["module","exports","verifyUserObj","userObj","JSON","parse","localStorage","getItem","_id","Container","_ref","fluid","children","react_default","a","createElement","className","concat","Row","_ref2","Col","_ref3","size","split","map","join","Jumbotron","NoMatch","components_Jumbotron","role","aria-label","Input","props","Object","assign","Dropdown","label","FormBtn","style","float","marginBottom","getFromStorage","key","valueStr","err","Nav","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","componentDidMount","setState","user","onLogout","e","preventDefault","obj","token","axios","get","then","res","data","success","removeItem","window","location","href","alert","state","align","name","email","Link","to","pathname","onClick","userInfoButton","Component","API","getRecipes","query","params","q","getFood","getMeal","removeFoodFromMealByID","mealId","foodId","console","log","delete","removeMealFromDailyPlanByID","dailyPlanId","removeDailyPlanFromScheduleByID","scheduleId","updateEnergyPotassiumTotalsForMealByID","totalEnergy","totalPotassium","put","updateEnergyPotassiumTotalsForDailyPlanByID","updateEnergyPotassiumTotalsForScheduleByID","addFoodToMealByID","servingSize","post","addMealToDailyPlanByID","getMealByUser","userID","getDailyPlanByUser","getMealByID","id","getDailyPlanByID","getScheduleByScheduleDate","scheduleDate","getScheduleByUser","deleteMeal","deleteDailyPlan","getFoodByFoodGroupName","foodGroupName","getFoodByFoodGroupNameAndUser","getFoodByUser","getFoodGroupByMasterAndUser","getFoodGroupByMaster","getFoodByID","getFoodByFoodName","foodName","deleteFoodByID","updateFoodByID","updatedFood","saveFood","foodData","saveSchedule","scheduleData","updateSchedule","saveFoodGroup","foodGroupData","saveMeal","mealData","saveDailyPlan","dailyPlanData","getUser","getUserByID","getFoodGroup","getFoodGroupByID","Login","onSignIn","_this$state","signInEmail","signInPassword","isLoading","password","signInError","message","error","setItem","stringify","setInStorage","catch","signUpError","signUpName","signUpEmail","signUpPassword","onTextboxChangeSignInEmail","bind","assertThisInitialized","onTextboxChangeSignInPassword","_this2","event","target","value","_this$state2","type","placeholder","onChange","disabled","Logout","require","Food","energy","potassium","foodGroupList","loadFoodGroupByMasterAndUser","handleInputChange","_event$target","defineProperty","handleFormSubmit","Button","tabIndex","List","Card","width","FoodContainer","FoodPic","_ref$thumbnail","thumbnail","alt","src","SearchResults","display","foodList","pics","efficiency","results","foodSearch","loadFood","loadFoodGroupMasterAndUser","loadFoodByFoodGroupName","deleteFood","saveFoodByUser","loadFoodOnSearch","foodItem","FoodID","foodDisplay","color","fontWeight","iconClass","position","bottom","right","class","length","height","image","components_Button","DeleteBtn","Date","moment","Schedule","dailyPlanList","scheduleDailyPlanList","scheduleList","currentSchedule","currentDailyPlan","scheduleObject","dailyPlanObject","mealObject","foodObject","scheduleContent","loadSchedule","loadDailyPlan","loadDailyPlanByScheduleDate","scheduleFoodArray","scheduleElement","dailyPlanID","mealList","mealListID","food","push","removeFromSchedule","tempScheduleList","schedule","addToSchedule","dailyPlan_id","dailyPlanTotalEnergy","dailyPlanTotalPotassium","deleteSchedule","handleInputChangeScheduleDate","undefined","defaultData","format","defaultValue","Fragment","dailyPlan","components_Card","dailyPlanName","Meal","mealName","loadMeals","foods","meal","components_DeleteBtn","foodFavoriteList","currentMeal","loadFoodFavorites","selectMeal","foodListArray","removeFromMeal","foodID","tempFoodList","addToMeal","food_id","textAlign","DailyPlan","dailyPlanMealList","loadMealList","loadDailyPlans","selectDailyPlan","mealListArray","mealID","removeFromDailyPlan","tempMealList","addToDailyPlan","meal_id","FoodItem","findPic","ImgRec","filter","recipe","Boolean","item","pages_SearchResults","HomeContainer","Books","pages_Login","CustomCard","title","foodGroup","username","FoodFavorite","customize","editFoodID","loadFoodFavorite","confirm","edit","components_CustomCard","fontSize","FoodGroup","pic","verifyLogin","Token","border","Register","onSignUp","onTextboxChangeSignUpName","onTextboxChangeSignUpEmail","onTextboxChangeSignUpPassword","ProtectedRoute","_this$props","component","objectWithoutProperties","Route","render","Redirect","App","BrowserRouter","components_Nav","Switch","exact","path","src_ProtectedRoute","AddFood","ViewFood","AddFoodGroup","AddMeal","ViewMeal","ViewDailyPlan","ViewSchedule","ViewFoodFavorite","ReactDOM","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.24f4c851.chunk.js","sourcesContent":["module.exports = {\r\n  verifyUserObj: function() {\r\n    let userObj = JSON.parse(localStorage.getItem(\"userObj\"));\r\n\r\n    if (userObj === null || userObj._id === null || userObj._id === \"\") {\r\n      //REDIRCT THEM TO LOGIN\r\n\r\n      //window.location.href = \"/\";\r\n      return \"\";\r\n    }\r\n    {\r\n      return userObj._id;\r\n    }\r\n  }\r\n};\r\n","import React from \"react\";\nimport \"./style.css\"\n\n// Exporting the Container, Row, and Col components from this file\n\n// This Container component allows us to use a bootstrap container without worrying about class names\nexport function Container({ fluid, children }) {\n  return <div className={`container${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\n}\n\n// This Row component lets us use a bootstrap row without having to think about class names\nexport function Row({ fluid, children }) {\n  return <div className={`row${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\n}\n\n// This Col component lets us size bootstrap columns with less syntax\n// e.g. <Col size=\"md-12\"> instead of <div className=\"col-md-12\">\nexport function Col({ size, children }) {\n  return (\n    <div\n      className={size\n        .split(\" \")\n        .map(size => \"col-\" + size)\n        .join(\" \")}\n    >\n      {children}\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Jumbotron({ children }) {\n  return <div className=\"jumbotron\">{children}</div>;\n}\n\nexport default Jumbotron;\n","import React from \"react\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport Jumbotron from \"../components/Jumbotron\";\n\nfunction NoMatch() {\n  return (\n    <Container fluid>\n      <Row>\n        <Col size=\"md-12\">\n          <Jumbotron>\n            <h1>404 Page Not Found</h1>\n            <h1>\n              <span role=\"img\" aria-label=\"Face With Rolling Eyes Emoji\">\n                🙄\n              </span>\n            </h1>\n          </Jumbotron>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default NoMatch;\n","import React from \"react\";\n\n// This file exports the Input, TextArea, and FormBtn components\n\nexport function Input(props) {\n  return (\n    <div className=\"form-group\">\n      <input className=\"form-control\" {...props} />\n    </div>\n  );\n}\n\nexport function Dropdown(props) {\n  return (\n    <div className=\"form-group\">\n      <label>\n        {props.label}\n        <select {...props} className=\"form-control\">\n          {props.children}\n          {/* <option value=\"grapefruit\">Grapefruit</option>\n          <option value=\"lime\">Lime</option>\n          <option value=\"coconut\">Coconut</option>\n          <option value=\"mango\">Mango</option> */}\n        </select>\n      </label>\n    </div>\n  );\n}\n\nexport function TextArea(props) {\n  return (\n    <div className=\"form-group\">\n      <textarea className=\"form-control\" rows=\"20\" {...props} />\n    </div>\n  );\n}\n\nexport function FormBtn(props) {\n  return (\n    <button\n      {...props}\n      style={{ float: \"right\", marginBottom: 10 }}\n\n    >\n      {props.children}\n    </button>\n  );\n}\n","export function getFromStorage(key) {\n    if(!key) {\n        return null;\n    }\n    \n    try {\n        const valueStr = localStorage.getItem(key);\n        if (valueStr) {\n            return JSON.parse(valueStr);\n        }\n        return null;\n    } catch (err) {\n        return null;\n    }\n}\n\nexport function setInStorage(key, obj) {\n    if (!key) {\n        console.error('Error: Key is missing!');\n    }\n\n    try {\n        localStorage.setItem(key, JSON.stringify(obj));\n    } catch (err) {\n        console.error(err);\n    }\n}\n\nexport function deleteFromStorage(key) {\n    localStorage.removeItem(key);\n}","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { FormBtn } from \"../Form\";\nimport { getFromStorage, deleteFromStorage } from \"../../utils/storage\";\nimport axios from \"axios\";\n\nclass Nav extends Component {\n  constructor() {\n    super();\n    this.state = {\n      user: {}\n    };\n  }\n\n  componentDidMount = () => {\n    this.setState({ user: JSON.parse(localStorage.getItem(\"userObj\")) });\n  };\n\n  userInfoButton() {\n    return (\n      <span className=\"navbar-text\" align=\"right\">\n        Welcome:{\" \"}\n        <a href=\"/\">{this.state.user.name + \": \" + this.state.user.email}</a>\n      </span>\n    );\n  }\n\n  onLogout = e => {\n    e.preventDefault();\n    const obj = getFromStorage(\"userObj\");\n    if (obj && obj.token) {\n      const { token } = obj;\n      // Verify the token\n      axios.get(\"/api/account/logout?token=\" + token).then(res => {\n        if (res.data.success) {\n          this.setState({\n            user: \"\"\n          });\n          deleteFromStorage(\"userObj\");\n          window.location.href = \"/\";\n        } else {\n          alert(\"Logout Error.\");\n        }\n      });\n    } else {\n      alert(\"No user logged in.\");\n    }\n  };\n\n  render() {\n    //console.log(this.state.user);\n\n    return (\n      <nav className=\"navbar navbar-expand-lg navbar-dark #ef5350 red lighten-1\">\n        <a className=\"navbar-brand\" href=\"#\">\n          Hearty Diet\n        </a>\n        {/* <button\n          className=\"navbar-toggler\"\n          type=\"button\"\n          data-toggle=\"collapse\"\n          data-target=\"#navbarNav\"\n          aria-controls=\"navbarNav\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span className=\"navbar-toggler-icon\" />\n        </button> */}\n        {/* <div className=\"collapse navbar-collapse\" id=\"navbarNav\"> */}\n        <ul className=\"nav\">\n          <li className=\"nav-item m-2\">\n            <Link\n              to=\"/\"\n              className={\n                window.location.pathname === \"/\"\n                  ? \"text-white white-darker-hover font-weight-bold\"\n                  : \"text-dark\"\n              }\n            >\n              Home\n            </Link>\n          </li>\n          <li className=\"nav-item m-2\">\n            <Link\n              to=\"/AddFood\"\n              className={\n                window.location.pathname === \"/AddFood\"\n                  ? \"text-white white-darker-hover font-weight-bold\"\n                  : \"text-dark\"\n              }\n            >\n              Add Food\n            </Link>\n          </li>\n          <li className=\"nav-item m-2\">\n            <Link\n              to=\"/ViewFood\"\n              className={\n                window.location.pathname === \"/ViewFood\"\n                  ? \"text-white white-darker-hover font-weight-bold\"\n                  : \"text-dark grey-lighter-hover\"\n              }\n            >\n              View Food\n            </Link>\n          </li>\n          <li className=\"nav-item m-2\">\n            <Link\n              to=\"/AddFoodGroup\"\n              className={\n                window.location.pathname === \"/AddFoodGroup\"\n                  ? \"text-white white-darker-hover font-weight-bold\"\n                  : \"text-dark\"\n              }\n            >\n              Add Food Group\n            </Link>\n          </li>\n\n          <li className=\"nav-item m-2\">\n            <Link\n              to=\"/ViewMeal\"\n              className={\n                window.location.pathname === \"/ViewMeal\"\n                  ? \"text-white white-darker-hover font-weight-bold\"\n                  : \"text-dark\"\n              }\n            >\n              View Meal\n            </Link>\n          </li>\n\n          <li className=\"nav-item m-2\">\n            <Link\n              to=\"/ViewDailyPlan\"\n              className={\n                window.location.pathname === \"/ViewDailyPlan\"\n                  ? \"text-white white-darker-hover font-weight-bold\"\n                  : \"text-dark\"\n              }\n            >\n              View Daily Plan\n            </Link>\n          </li>\n\n          <li className=\"nav-item m-2\">\n            <Link\n              to=\"/ViewSchedule\"\n              className={\n                window.location.pathname === \"/ViewSchedule\"\n                  ? \"text-white white-darker-hover font-weight-bold\"\n                  : \"text-dark\"\n              }\n            >\n              View Schedule\n            </Link>\n          </li>\n          <li className=\"nav-item m-2\">\n            <Link\n              to=\"/ViewFoodFavorite\"\n              className={\n                window.location.pathname === \"/ViewFoodFavorite\"\n                  ? \"text-white white-darker-hover font-weight-bold\"\n                  : \"text-dark\"\n              }\n            >\n              View Favorite Foods\n            </Link>\n          </li>\n          <li className=\"nav-item m-2\">\n            <a href=\"#\" onClick={this.onLogout}>\n              Logout\n            </a>\n          </li>\n          {/* <li className=\"nav-item m-2\">\n              <a className=\"text-dark disabled\" href=\"#\">\n                Disabled\n              </Link>\n            </li> */}\n        </ul>\n        {/* </div> */}\n\n        {this.state.user ? this.userInfoButton() : \"\"}\n      </nav>\n    );\n  }\n}\n\nexport default Nav;\n","import axios from \"axios\";\n\nexport default {\n  //To get the picture from recipes API\n\n  getRecipes: function(query) {\n    return axios.get(\n      \"https://cors.io/?http://www.recipepuppy.com/api/?q=\" +\n        { params: { q: query } }\n    );\n  },\n  // Gets all foods\n  getFood: function() {\n    return axios.get(\"/api/food\");\n  },\n  getMeal: function() {\n    return axios.get(\"/api/meal\");\n  },\n\n  //! this is the new one ignored this in merge conflict\n  //   updateMealByID: function (id, updatedMeal) {\n  //     return axios.put(\"/api/meal/\" + id, updatedMeal);\n  //   },\n  //   getMealByUser: function (userID) {\n  removeFoodFromMealByID: function(mealId, foodId) {\n    console.log(\"inside client api removeFoodFromMealById\");\n    console.log(\"mealId is:\", mealId); //this is right\n    console.log(\"foodId is:\", foodId); // this is correct\n    return axios.delete(\"/api/meal/food/\" + mealId + \"/\" + foodId);\n  },\n\n  removeMealFromDailyPlanByID: function(dailyPlanId, mealId) {\n    console.log(\"inside client api removeMealFromDailyPlanByID\");\n    console.log(\"dailPlanId is:\", dailyPlanId);\n    console.log(\"mealId is:\", mealId);\n    return axios.delete(\"/api/dailyPlan/meal/\" + dailyPlanId + \"/\" + mealId);\n  },\n\n  removeDailyPlanFromScheduleByID: function(scheduleId, dailyPlanId) {\n    return axios.delete(\n      \"/api/schedule/dailyPlan/\" + scheduleId + \"/\" + dailyPlanId\n    );\n  },\n\n  //! new stuff\n  updateEnergyPotassiumTotalsForMealByID: function(\n    mealId,\n    totalEnergy,\n    totalPotassium\n  ) {\n    console.log(\"mealId is:\", mealId);\n    console.log(\"totalEnergy is:\", totalEnergy);\n    console.log(\"totalPotassium is:\", totalPotassium);\n    return axios.put(\"/api/meal/KCalTotals/\" + mealId, {\n      totalEnergy: totalEnergy,\n      totalPotassium: totalPotassium\n    });\n  },\n\n  updateEnergyPotassiumTotalsForDailyPlanByID: function(\n    dailyPlanId,\n    totalEnergy,\n    totalPotassium\n  ) {\n    console.log(\"dailyPlanId is:\", dailyPlanId);\n    console.log(\"totalEnergy is:\", totalEnergy);\n    console.log(\"totalPotassium is:\", totalPotassium);\n    return axios.put(\"/api/dailyPlan/KCalTotals/\" + dailyPlanId, {\n      totalEnergy: totalEnergy,\n      totalPotassium: totalPotassium\n    });\n  },\n\n  updateEnergyPotassiumTotalsForScheduleByID: function(\n    scheduleId,\n    totalEnergy,\n    totalPotassium\n  ) {\n    console.log(\"scheduleId is:\", scheduleId);\n    console.log(\"totalEnergy is:\", totalEnergy);\n    console.log(\"totalPotassium is:\", totalPotassium);\n    return axios.put(\"/api/schedule/KCalTotals/\" + scheduleId, {\n      totalEnergy: totalEnergy,\n      totalPotassium: totalPotassium\n    });\n  },\n\n  addFoodToMealByID: function(mealId, foodId, servingSize) {\n    console.log(\"in addFoodToMealByID\");\n    console.log(\"mealId is:\", mealId);\n    console.log(\"foodId is:\", foodId);\n    console.log(\"servingSize is:\", servingSize);\n    return axios.post(\"/api/meal/food/\" + mealId + \"/\" + foodId, {\n      servingSize: servingSize\n    });\n  },\n\n  addMealToDailyPlanByID: function(dailyPlanId, mealId) {\n    return axios.post(\"/api/dailyPlan/meal/\" + dailyPlanId + \"/\" + mealId);\n  },\n\n  // addDailyPlanToScheduleByDate: function(scheduleData) {\n  //   return axios.post(\"/api/schedule\" + scheduleData);\n  // },\n\n  getMealByUser: function(userID) {\n    console.log(\n      \"I'm inside getMealByUser in the API... looking for meals for:\",\n      userID\n    );\n    return axios.get(\"/api/meal/mealByUser/\" + userID);\n  },\n\n  getDailyPlanByUser: function(userID) {\n    return axios.get(\"/api/dailyPlan/dailyPlanByUser/\" + userID);\n  },\n\n  getMealByID: function(id) {\n    return axios.get(\"/api/meal/mealByID/\" + id);\n  },\n\n  getDailyPlanByID: function(id) {\n    return axios.get(\"/api/dailyPlan/\" + id);\n  },\n\n  getScheduleByScheduleDate: function(scheduleDate) {\n    return axios.get(\"/api/schedule/dailyPlanByScheduleDate/\" + scheduleDate);\n  },\n\n  getScheduleByUser: function(userID) {\n    return axios.get(\"/api/schedule/scheduleByUser/\" + userID);\n  },\n\n  deleteMeal: function(id) {\n    return axios.delete(\"/api/meal/\" + id);\n  },\n\n  deleteDailyPlan: function(id) {\n    return axios.delete(\"/api/dailyPlan/\" + id);\n  },\n  getFoodByFoodGroupName: function(foodGroupName) {\n    return axios.get(\"/api/food/foodByFoodGroupName/\" + foodGroupName);\n  },\n  getFoodByFoodGroupNameAndUser: function(foodGroupName, userID) {\n    return axios.get(\n      \"/api/food/foodByFoodGroupNameAndUser/\" + foodGroupName + \"/\" + userID\n    );\n  },\n  getFoodByUser: function(userID) {\n    return axios.get(\"/api/food/foodByUser/\" + userID);\n  },\n  getFoodGroupByMasterAndUser: function(userID) {\n    return axios.get(\n      \"/api/foodgroup/foodGroupByMasterAndUser/\" + \"123456/\" + userID\n    );\n  },\n  getFoodGroupByMaster: function(userID) {\n    return axios.get(\"/api/foodgroup/foodGroupByMaster/\" + \"123456\");\n  },\n  // Gets the food with the given id\n  getFoodByID: function(id) {\n    return axios.get(\"/api/food/foodByID/\" + id);\n  },\n  getFoodByFoodName: function(foodName) {\n    return axios.get(\"/api/food/foodByFoodName/\" + foodName);\n  },\n  // Deletes the food with the given id\n\n  deleteFoodByID: function(id) {\n    return axios.delete(\"/api/food/foodByID/\" + id);\n  },\n  // Update the food with the given id\n\n  updateFoodByID: function(id, updatedFood) {\n    return axios.put(\"/api/food/foodByID/\" + id, updatedFood);\n  },\n\n  // Saves a food to the database\n  saveFood: function(foodData) {\n    return axios.post(\"/api/food\", foodData);\n  },\n  saveSchedule: function(scheduleData) {\n    return axios.post(\"/api/schedule\", scheduleData);\n  },\n  updateSchedule: function(scheduleData) {\n    return axios.put(\"/api/schedule\", scheduleData);\n  },\n  saveFoodGroup: function(foodGroupData) {\n    return axios.post(\"/api/foodGroup\", foodGroupData);\n  },\n  saveMeal: function(mealData) {\n    return axios.post(\"/api/meal\", mealData);\n  },\n  saveDailyPlan: function(dailyPlanData) {\n    return axios.post(\"/api/dailyPlan\", dailyPlanData);\n  },\n  getUser: function() {\n    return axios.get(\"/api/user\");\n  },\n  getUserByID: function(id) {\n    return axios.get(\"/api/user/userByID/\" + id);\n  },\n  getFoodGroup: function() {\n    return axios.get(\"/api/foodgroup\");\n  },\n  // Gets the food with the given id\n  getFoodGroupByID: function(id) {\n    return axios.get(\"/api/foodgroup/foodGroupByID/\" + id);\n  }\n};\n","import React, { Component } from \"react\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport API from \"../utils/API\";\n// import { Link } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../components/Grid\";\n// import { List, ListItem } from \"../components/List\";\nimport { Input, TextArea, FormBtn, Dropdown } from \"../components/Form\";\nimport axios from \"axios\";\nimport { setInStorage, getFromStorage } from \"../utils/storage\";\nimport { BrowserRouter as Router, Route, Link, Switch } from \"react-router-dom\";\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isLoading: true,\n      token: \"\",\n      signUpError: \"\",\n      signInError: \"\",\n      signInEmail: \"\",\n      signInPassword: \"\",\n      signUpName: \"\",\n      signUpEmail: \"\",\n      signUpPassword: \"\",\n      user: \"\"\n    };\n\n    this.onTextboxChangeSignInEmail = this.onTextboxChangeSignInEmail.bind(\n      this\n    );\n    this.onTextboxChangeSignInPassword = this.onTextboxChangeSignInPassword.bind(\n      this\n    );\n    this.onSignIn = this.onSignIn.bind(this);\n  }\n\n  componentDidMount() {\n    const obj = getFromStorage(\"userObj\");\n    if (obj && obj.token) {\n      const { token } = obj;\n      // Verify the token\n      axios.get(\"/api/account/verify?token=\" + token).then(res => {\n        if (res.success) {\n          this.setState({\n            isLoading: false\n          });\n        } else {\n          this.setState({\n            isLoading: false\n          });\n        }\n      });\n    } else {\n      this.setState({\n        isLoading: false\n      });\n    }\n  }\n\n  onTextboxChangeSignInEmail(event) {\n    this.setState({\n      signInEmail: event.target.value\n    });\n  }\n  onTextboxChangeSignInPassword(event) {\n    this.setState({\n      signInPassword: event.target.value\n    });\n  }\n\n  onSignIn = e => {\n    e.preventDefault();\n    //Grab the state\n    const { signInEmail, signInPassword } = this.state;\n\n    this.setState({\n      isLoading: true\n    });\n\n    //Post request to backend\n    axios\n      .post(\"/api/account/signin\", {\n        email: signInEmail,\n        password: signInPassword\n      })\n      .then(res => {\n        console.log(res.data);\n        if (res.data.success) {\n          // setInStorage('userObj', { token: res.data.token });\n          this.setState({\n            signInError: res.message,\n            isLoading: false,\n            signInEmail: \"\",\n            signInPassword: \"\",\n            token: res.data.token,\n            user: res.data.user\n          });\n\n          res.data.user.token = res.data.token;\n\n          setInStorage(\"userObj\", res.data.user);\n          // REDIRECT TO FOOD HOMEPAGE\n          window.location.href = \"/AddFood\";\n        }\n      })\n      .catch(err => {});\n  };\n\n  render() {\n    const {\n      isLoading,\n      token,\n      signInError,\n      signInEmail,\n      signInPassword\n    } = this.state;\n\n    return (\n      <Container fluid>\n        <Row>\n          <Col size=\"md-12\">\n            <Jumbotron>\n              <h1>Please Login to plan your Hearty Diet.</h1>\n            </Jumbotron>\n          </Col>\n        </Row>\n        <Row>\n          <Col size=\"md-4\" />\n          <Col size=\"md-4\">\n            <form>\n              Email\n              <Input\n                type=\"email\"\n                placeholder=\"Email\"\n                value={signInEmail}\n                onChange={this.onTextboxChangeSignInEmail}\n              />\n              Password\n              <Input\n                type=\"password\"\n                placeholder=\"Password\"\n                value={signInPassword}\n                onChange={this.onTextboxChangeSignInPassword}\n              />\n              <FormBtn\n                disabled={\n                  !(this.state.signInEmail && this.state.signInPassword)\n                }\n                onClick={this.onSignIn}\n              >\n                Login\n              </FormBtn>\n              <br />\n              <Link to=\"/register\">Register New User</Link>\n            </form>\n          </Col>\n          <Col size=\"md-4\" />\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default Login;\n\n// state = {\n//   userName: \"\",\n//   password: \"\"\n// };\n\n// handleInputChange = event => {\n//   const { name, value } = event.target;\n//   this.setState({\n//     [name]: value\n//   });\n// };\n\n// handleFormSubmit = event => {\n//   event.preventDefault();\n//   if (this.state.userName && this.state.password) {\n//     // API.login({\n//     //   userName: this.state.userName,\n//     //  password: this.state.passowrd,\n//     // })\n//     //   .then(\n//     //     res => this.loadFood()\n//     //   )\n//     //   .catch(err => console.log(err));\n//   }\n// };\n\n// render() {\n//   return (\n//     <Container fluid>\n//       <Row>\n//         <Col size=\"md-12\">\n//           <Jumbotron>\n//             <h1>Login / Landing Page - Login is not actually working</h1>\n//           </Jumbotron>\n//         </Col>\n//       </Row>\n//       <Row>\n//         <Col size=\"md-4\" />\n//         <Col size=\"md-4\">\n//           <form>\n//             UserName\n//             <Input\n//               value={this.state.userName}\n//               onChange={this.handleInputChange}\n//               name=\"userName\"\n//               placeholder=\"\"\n//             />\n//             Password\n//             <Input\n//               value={this.state.password}\n//               onChange={this.handleInputChange}\n//               name=\"passoword\"\n//               placeholder=\"\"\n//             />\n//             <FormBtn\n//               disabled={!(this.state.userName && this.state.password)}\n//               onClick={this.handleFormSubmit}\n//             >\n//               Login\n//             </FormBtn>\n//           </form>\n//         </Col>\n//         <Col size=\"md-4\" />\n//       </Row>\n//     </Container>\n//   );\n// }\n","import React, { Component } from \"react\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport API from \"../utils/API\";\n// import { Link } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../components/Grid\";\n// import { List, ListItem } from \"../components/List\";\nimport { Input, TextArea, FormBtn, Dropdown } from \"../components/Form\";\nimport axios from 'axios';\nimport {\n  setInStorage,\n  getFromStorage,\n} from '../utils/storage';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Link,\n  Switch\n} from 'react-router-dom'\n\n\nclass Logout extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isLoading: true,\n            token: '',\n            signUpError: '',\n            signInError: '',\n            signInEmail: '',\n            signInPassword: '',\n            signUpName: '',\n            signUpEmail: '',\n            signUpPassword: '',\n            user: ''\n          };\n\n          this.onLogout = this.onLogout.bind(this);\n    }\n\n    componentDidMount() {\n        const obj = getFromStorage('the_main_app');\n        if (obj && obj.token) {\n          const { token } = obj;\n          // Verify the token\n          axios.get('/api/account/verify?token=' + token)\n          .then(res => {\n            if (res.data.success) {\n              this.setState({\n                token,\n                isLoading: false\n              });\n            } else {\n              this.setState({\n                isLoading: false,\n              });\n            }\n          });\n        } else {\n          this.setState({\n            isLoading: false,\n          });\n        }\n      }\n\n\n      onLogout = e => {\n        e.preventDefault();\n        this.setState({\n          isLoading: true,\n        });\n        const obj = getFromStorage('the_main_app');\n        if (obj && obj.token) {\n          const { token } = obj;\n          // Verify the token\n          axios.get('/api/account/logout?token=' + token)\n          .then(res => {\n            if (res.data.success) {\n              this.setState({\n                token: '',\n                isLoading: false\n              });\n            } else {\n              this.setState({\n                isLoading: false,\n              });\n            }\n          });\n        } else {\n          this.setState({\n            isLoading: false,\n          });\n          window.location.href= './'\n        }\n      }\n\n}\n\nexport default Logout;\n\n\n\n","import React, { Component } from \"react\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport API from \"../utils/API\";\n// import { Link } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../components/Grid\";\n// import { List, ListItem } from \"../components/List\";\nimport { Input, TextArea, FormBtn, Dropdown } from \"../components/Form\";\n\nconst VerifyLogin = require(\"../utils/VerifyLogin\");\nconst userID = VerifyLogin.verifyUserObj();\n\nclass Food extends Component {\n  state = {\n    foodName: \"\",\n    foodGroupName: \"\",\n    energy: \"\",\n    potassium: \"\",\n    foodGroupList: []\n  };\n\n  componentDidMount() {\n    this.loadFoodGroupByMasterAndUser(userID);\n  }\n\n  // verifyLogin = () => {\n  //   let userObj = JSON.parse(localStorage.getItem(\"userObj\"));\n  //   if (userObj === null || userObj.Token === null || userObj.Token === \"\") {\n  //     //REDIRCT THEM TO LOGIN\n  //     window.location.href = \"./\";\n  //   }\n  //   {\n  //     this.setState({\n  //       userID: userObj.Token\n  //     });\n  //   }\n  // };\n\n  loadFoodGroupByMasterAndUser = userID => {\n    API.getFoodGroupByMasterAndUser(userID)\n      .then(res =>\n        this.setState({\n          foodGroupList: res.data\n        })\n      )\n      .catch(err => console.log(err));\n  };\n\n  // deleteFood = id => {\n  //   API.deleteFood(id)\n  //     .then(res => this.loadFood())\n  //     .catch(err => console.log(err));\n  // };\n\n  handleInputChange = event => {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n    if (\n      this.state.foodName &&\n      this.state.foodGroupName &&\n      this.state.energy &&\n      this.state.potassium\n    ) {\n      API.saveFood({\n        foodName: this.state.foodName,\n        foodGroupName: this.state.foodGroupName,\n        energy: this.state.energy,\n        potassium: this.state.potassium,\n        userID: userID\n      })\n        .then(\n          this.setState({\n            foodName: \"\",\n            foodGroupName: \"\",\n            energy: \"\",\n            potassium: \"\"\n          })\n        )\n        .catch(err => console.log(err));\n    }\n  };\n\n  render() {\n    return (\n      <Container fluid>\n        <Row>\n          <Col size=\"md-12\">\n            <Jumbotron>\n              <h1>Add Custom Food</h1>\n            </Jumbotron>\n\n            <form>\n              <Input\n                value={this.state.foodName}\n                onChange={this.handleInputChange}\n                name=\"foodName\"\n                placeholder=\"Food Name (required)\"\n              />\n\n              <Dropdown\n                name=\"foodGroupName\"\n                onChange={this.handleInputChange}\n                label=\"Food Group\"\n                value={this.state.foodGroupName}\n              >\n                {this.state.foodGroupList.map(foodGroupList => (\n                  <option value={foodGroupList.foodGroupName}>\n                    {foodGroupList.foodGroupName}\n                  </option>\n                ))}\n              </Dropdown>\n              <Input\n                value={this.state.energy}\n                onChange={this.handleInputChange}\n                name=\"energy\"\n                placeholder=\"Energy (required)\"\n              />\n              <Input\n                value={this.state.potassium}\n                onChange={this.handleInputChange}\n                name=\"potassium\"\n                placeholder=\"Potassium (required)\"\n              />\n              {/* <TextArea\n                value={this.state.synopsis}\n                onChange={this.handleInputChange}\n                name=\"synopsis\"\n                placeholder=\"Synopsis (Optional)\"\n              /> */}\n              <FormBtn\n                disabled={\n                  !(\n                    this.state.foodName &&\n                    this.state.foodGroupName &&\n                    this.state.energy &&\n                    this.state.potassium\n                  )\n                }\n                onClick={this.handleFormSubmit}\n              >\n                Submit Food\n              </FormBtn>\n            </form>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default Food;\n","import React from \"react\";\nimport \"./style.css\";\n\n// The ...props means, spread all of the passed props onto this element\n// That way we don't have to define them all individually\nfunction Button(props) {\n  return (\n    <span {...props} type=\"button\" role=\"button\" tabIndex=\"0\">\n      {props.children}\n    </span>\n  );\n}\n\nexport default Button;","import React from \"react\";\nimport \"./style.css\";\n\n// This file exports both the List and ListItem components\n\nexport function List({ children }) {\n  return (\n    <div className=\"list-overflow-container\">\n      <ul className=\"list-group\">{children}</ul>\n    </div>\n  );\n}\n\nexport function ListItem({ children }) {\n  return <li className=\"list-group-item\">{children}</li>;\n}\n","import React from \"react\";\n\nfunction Card({ children }) {\n  return (\n    <div style={{ width: \"18rem\" }} className=\"card\">\n      <div className=\"card-body\">\n        <div className=\"card-title\">\n          <div className=\"card-subtitle mb-2 text-muted\">\n            <div className=\"card-text\">\n              {/* <a href=\"#\" class=\"card-link\">Card link</a> */}\n\n              {children}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Card;","import React from \"react\";\n\nexport function FoodContainer(props) {\n    return <div>{props.children}</div>;\n}\n\nexport function FoodPic({ thumbnail = \"https://placehold.it/300x300\" }) {\n    return (\n        <div>\n            <img alt=\"foodPic\" src={thumbnail} />\n        </div>\n    )\n}\n\n","import React from \"react\";\n// import \"./style.css\";\n\nfunction SearchResults(props) {\n    return (\n        <div style={{ display: 'inline-blocks' }}>\n            <p>{props.foodName}</p>\n            <p>Potassium Content:{props.potassium}gm</p>\n        </div>\n\n    );\n}\n\nexport default SearchResults;\n","import React, { Component } from \"react\";\nimport Button from \"../components/Button\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport API from \"../utils/API\";\nimport { Link } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { List, ListItem } from \"../components/List\";\nimport { Input, TextArea, FormBtn } from \"../components/Form\";\nimport Card from \"../components/Card\";\nimport { FoodPic, FoodContainer } from \"./FoodPic\";\nimport \"./viewFoodStyle.css\";\nimport SearchResults from \"./SearchResults\";\nimport \"font-awesome/css/font-awesome.min.css\";\n//import { MDBMask, MDBView, MDBContainer, MDBRow, MDBCol } from \"mdbreact\";\nconst VerifyLogin = require(\"../utils/VerifyLogin\");\nconst userID = VerifyLogin.verifyUserObj();\nclass Food extends Component {\n  state = {\n    foodList: [],\n    foodGroupList: [],\n    foodName: \"\",\n    foodGroupName: \"\",\n    energy: \"\",\n    potassium: \"\",\n    pics: null,\n    efficiency: \"\",\n    results: [],\n    foodSearch: \"\"\n  };\n\n  componentDidMount() {\n    this.loadFoodGroupMasterAndUser(userID);\n  }\n\n  loadFood = () => {\n    API.getFood()\n      .then(res =>\n        this.setState({\n          foodList: res.data,\n          foodName: \"\",\n          foodGroupName: \"\",\n          energy: \"\",\n          potassium: \"\",\n          efficiency: \"\"\n        })\n      )\n      .catch(err => console.log(err));\n  };\n\n  loadFoodGroupMasterAndUser = userID => {\n    API.getFoodGroupByMasterAndUser(userID)\n      .then(res =>\n        this.setState({\n          foodList: [],\n          foodGroupList: res.data,\n          foodName: \"\",\n          foodGroupName: \"\",\n          energy: \"\",\n          potassium: \"\",\n          efficiency: \"\"\n        })\n      )\n      .catch(err => console.log(err));\n  };\n\n  loadFoodByFoodGroupName = foodGroupName => {\n    // this.findPic(foodGroupName)\n    // this.setState((state, props) => {\n    //   return { thumbnail: state.pics }\n    // })\n    console.log(this.state.thumbnail);\n    API.getFoodByFoodGroupName(foodGroupName)\n      .then(res =>\n        this.setState({\n          foodList: res.data,\n          foodName: \"\",\n          foodGroupName: \"\",\n          energy: \"\",\n          potassium: \"\",\n          efficiency: \"\"\n        })\n      )\n      .catch(err => console.log(err));\n  };\n\n  deleteFood = id => {\n    API.deleteFood(id)\n      .then(res => this.loadFood())\n      .catch(err => console.log(err));\n  };\n\n  saveFoodByUser = id => {\n    API.getFoodByID(id)\n\n      .then(res => {\n        console.log(res);\n        API.saveFood({\n          foodName: res.data.foodName,\n          foodGroupName: res.data.foodGroupName,\n          energy: res.data.energy,\n          potassium: res.data.potassium,\n          userID: userID\n        })\n          .then(alert(res.data.foodName + \" saved as favorite food\"))\n          .catch(err => console.log(err));\n      })\n      .catch(err => console.log(err));\n  };\n\n  // loading foodList specific to food group on button click\n  // loadFoodCards = (GroupName) => {\n  //   this.state.foodGroupList.map(group => {\n  //     if (group.foodGroupName == GroupName) {\n  //       this.loadFoodByFoodGroupName(GroupName)\n  //       console.log(GroupName, this.state.foodList, this.state.pics)\n  //     }\n  //   })\n  // }\n  //for search bar\n  loadFoodOnSearch = id => {\n    console.log(this.state.foodList);\n    this.state.foodList.map(foodItem => {\n      if (foodItem.FoodID === id) {\n        console.log(foodItem);\n        this.setState({ results: foodItem });\n        console.log(this.state.results);\n      }\n    });\n  };\n\n  handleInputChange = event => {\n    this.setState({ foodSearch: event.target.value });\n  };\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n    console.log(\"something\");\n    console.log(this.state.foodSearch);\n    console.log(this.state.foodList);\n\n    API.getFoodByFoodName(this.state.foodSearch)\n      .then(res =>\n        this.setState({\n          // results: res\n          foodList: res.data\n        })\n      )\n      .catch(err => console.log(err));\n  };\n\n  render() {\n    var foodDisplay = {\n      color: \"#1e90ff\",\n      fontWeight: \"bold\"\n    };\n    var iconClass = {\n      position: \"absolute\",\n      bottom: 0,\n      right: 6\n    };\n\n    return (\n      <Container fluid>\n        <Row>\n          <div className=\"col-6 search-bar offset-6\">\n            <div class=\"input-group mt-3 form-sm form-2 pl-0\">\n              <input\n                class=\"form-control my-0 py-1 red-border\"\n                type=\"text\"\n                placeholder=\"Enter Food Name\"\n                aria-label=\"Search\"\n                value={this.state.foodSearch}\n                onChange={this.handleInputChange}\n                name=\"foodSearch\"\n              />\n              <div class=\"input-group-append\">\n                {/* <span class=\"input-group-text red lighten-3\" id=\"basic-text1\"><i class=\"fa fa-search\" aria-hidden=\"true\"></i></span> */}\n                <button\n                  className=\"input-group-text red lighten-3\"\n                  onClick={this.handleFormSubmit}\n                >\n                  <i className=\" fa fa-search\" />\n                </button>\n              </div>\n            </div>\n\n            {/* <form>\n              <Input\n                value={this.state.foodSearch}\n                onChange={this.handleInputChange}\n                name=\"foodSearch\"\n                placeholder=\"Enter Food Name\"\n              />\n              <button\n                onClick={this.handleFormSubmit}><i className=\"fa fa-search\"></i>\n              </button>\n            </form> */}\n          </div>\n          {/* <SearchResults\n            foodName={this.state.results.foodName}\n            potassium={this.state.results.potassium}\n          /> */}\n        </Row>\n        <div className=\"container\">\n          <h4>Browse Common Foods</h4>\n          <hr />\n          <Row>\n            {this.state.foodGroupList.length ? (\n              this.state.foodGroupList.map(foodGroupList => (\n                <Col size=\"lg-4\">\n                  <Container>\n                    <div\n                      className=\"holder container card\"\n                      onClick={() =>\n                        this.loadFoodByFoodGroupName(\n                          foodGroupList.foodGroupName\n                        )\n                      }\n                    >\n                      {/* {console.log(foodGroupList.image)} */}\n                      {/* <div className=\"card\" style={{ width: 35 }}> */}\n                      <div className=\"row p-2 pt-3\">\n                        <div className=\"col-4 view overlay zoom\">\n                          <img\n                            className=\"card-img-left\"\n                            style={{ width: 95, height: 95 }}\n                            alt=\"foodPic\"\n                            src={foodGroupList.image}\n                          />\n                          {/* <Col size=\"md-6\" className=\"card-body\"> */}\n                        </div>\n                        <div className=\"col-6 offset-1\">\n                          <button\n                            key={foodGroupList.foodGroupName}\n                            className=\"custom-btn text-center\"\n                          >\n                            {/* <Link to={\"/food/\" + food._id}></Link> */}\n                            <strong>\n                              <p className=\"card-title\">\n                                {\" \"}\n                                {foodGroupList.foodGroupName}{\" \"}\n                              </p>\n                            </strong>\n                          </button>\n                        </div>\n                      </div>\n                      <div style={iconClass} className=\"moreIcon\">\n                        <p style={{ color: \"blue\" }}>more</p>\n                      </div>\n                    </div>\n                  </Container>\n                </Col>\n              ))\n            ) : (\n              <h3>No Results to Display1</h3>\n            )}\n            {/* </Col> */}\n          </Row>\n        </div>\n        <Row>\n          {this.state.foodList.length ? (\n            this.state.foodList.map(foodList => (\n              <Col size=\"md-6\">\n                <Button\n                  key={foodList._id}\n                  onClick={() => this.saveFoodByUser(foodList._id, \"\")}\n                  className=\"btn btn-light btn-lg text-left designed p-5\"\n                >\n                  <div className=\"card-content\">\n                    <strong>\n                      <h5 style={foodDisplay}>{foodList.foodName}</h5>\n                      <br />\n                      Food Group: {foodList.foodGroupName} <br />\n                      Energy: {foodList.energy}kCal <br />\n                      Potassium: {foodList.potassium}gm <br />\n                      Efficiency: {foodList.efficiency} <br />\n                      Username: {foodList.userID} <br />\n                    </strong>\n                  </div>\n                  <div className=\"text-right\">\n                    <i className=\"fa fa-gratipay\" />\n                    <br />\n                    <p className=\"add-fav\">Add to favorites</p>\n                  </div>\n                </Button>\n              </Col>\n            ))\n          ) : (\n            <h3>No Results to Display</h3>\n          )}\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default Food;\n","import React from \"react\";\nimport \"./style.css\";\n\n// The ...props means, spread all of the passed props onto this element\n// That way we don't have to define them all individually\nfunction DeleteBtn(props) {\n  return (\n    <span className=\"delete-btn\" {...props} role=\"button\" tabIndex=\"0\">\n      ✗\n    </span>\n  );\n}\n\nexport default DeleteBtn;\n","import React from \"react\";\nimport \"./style.css\";\n\n// The ...props means, spread all of the passed props onto this element\n// That way we don't have to define them all individually\nfunction Date(props) {\n  return (\n    <div className=\"form-group\">\n      <input {...props} type=\"date\" />\n    </div>\n  );\n}\n\nexport default Date;\n","import React, { Component } from \"react\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport API from \"../utils/API\";\nimport { Link } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { List, ListItem } from \"../components/List\";\nimport { Input, TextArea, FormBtn } from \"../components/Form\";\nimport Card from \"../components/Card\";\nimport DeleteBtn from \"../components/DeleteBtn\";\nimport AddBtn from \"../components/AddBtn\";\nimport Button from \"../components/Button\";\n//import Calendar from \"../components/Calendar\";\nimport Date from \"../components/Date\";\nvar moment = require(\"moment\");\nconst VerifyLogin = require(\"../utils/VerifyLogin\");\nconst userID = VerifyLogin.verifyUserObj();\n\nclass Schedule extends Component {\n  state = {\n    scheduleDate: \"\",\n    dailyPlanList: [],\n    scheduleDailyPlanList: [],\n    scheduleList: null,\n    currentSchedule: [],\n    totalEnergy: null,\n    totalPotassium: null,\n    currentDailyPlan: [],\n    scheduleObject: [],\n    dailyPlanObject: [],\n    mealObject: [],\n    foodObject: [],\n    scheduleContent: []\n  };\n\n  componentDidMount() {\n    // this.loadSchedule(userID);\n    this.loadDailyPlan(userID);\n\n    this.setState({\n      scheduleDate: moment().format(\"YYYY-MM-DD\")\n    });\n  }\n  // loadFoodFavorites = userID => {\n  //   API.getFoodByUser(userID)\n  //     .then(res => {\n  //       console.log(\"foodFavoriteList is: \", res.data);\n  //       this.setState({\n  //         foodFavoriteList: res.data\n  //       });\n  //     })\n  //     .catch(err => console.log(err));\n  // };\n\n  loadSchedule = userID => {\n    API.getScheduleByUser(userID)\n      .then(res => {\n        this.setState({\n          scheduleList: res.data\n        });\n      })\n      .catch(err => console.log(err));\n  };\n\n  loadDailyPlan = userID => {\n    API.getDailyPlanByUser(userID)\n      .then(res => {\n        this.setState({\n          dailyPlanList: res.data\n        });\n      })\n      .catch(err => console.log(err));\n  };\n\n  loadDailyPlanByScheduleDate = scheduleDate => {\n    var scheduleFoodArray = [];\n\n    API.getScheduleByScheduleDate(scheduleDate)\n      .then(scheduleObject => {\n        console.log(\"scheduleObject is:\", scheduleObject);\n        this.setState({\n          currentSchedule: scheduleObject.data[0]\n        });\n\n        if (scheduleObject.data.length !== 0) {\n          console.log(\"scheduleObject.data.length is greater than zero\");\n          scheduleObject.data.map(scheduleElement =>\n            API.getDailyPlanByID(scheduleElement.dailyPlanID)\n              .then(dailyPlanObject => {\n                // this.setState({\n                //   dailyPlanObject: dailyPlanObject.data\n                // });\n                console.log(\"dailyPlanObject is:\", dailyPlanObject);\n                dailyPlanObject.data.mealList.map(mealListID =>\n                  API.getMealByID(mealListID)\n                    .then(mealObject => {\n                      console.log(\"mealObject is:\", mealObject);\n                      // this.setState({\n                      //   mealObject: mealObject.data\n                      // });\n\n                      // scheduleContent += mealObject.data.mealName;\n\n                      mealObject.data.foodList.map(foodList =>\n                        API.getFoodByID(foodList.food._id)\n                          .then(foodObject => {\n                            //  console.log(\"foodObject is:\", foodObject);\n                            // foodObject.data.map(food =>\n                            // let scheduleDailyPlanListObject = {\n                            //   scheduleObject: {\n                            //     dailyPlanObject: {\n                            //       mealObject: {\n                            //         foodObject\n                            //       }\n                            //     }\n                            //   }\n                            // };\n                            console.log(\"foodObject is:\", foodObject);\n                            scheduleFoodArray.push(foodObject);\n                            //);\n\n                            this.setState({\n                              scheduleContent: scheduleFoodArray\n                            });\n                          })\n                          .catch(err => console.log(err))\n                      );\n                    })\n                    .catch(err => console.log(err))\n                );\n              })\n              .catch(err => console.log(err))\n          );\n        } //if statement\n      })\n      .catch(err => console.log(err));\n  };\n\n  removeFromSchedule = dailyPlanID => {\n    API.removeDailyPlanFromScheduleByID(\n      this.state.currentSchedule._id,\n      dailyPlanID\n    )\n      .then(data => {\n        // console.log(\"in remove food... data.data is\", data.data);\n        // console.log(\"foodlist is:\", data.data.foodList);\n        // const totalEnergy = data.data.foodList.reduce((a, b) => ({\n        //   energy: a.energy + b.energy\n        // }));\n        // const totalPotassium = data.data.foodList.reduce((a, b) => ({\n        //   potassium: a.potassium + b.potassium\n        // }));\n        const tempScheduleList = data.data.scheduleList;\n        let totalPotassium = 0;\n        let totalEnergy = 0;\n        tempScheduleList.map(schedule => {\n          totalPotassium += schedule.potassium;\n          totalEnergy += schedule.energy;\n        });\n        console.log(\"total energy is:\", totalEnergy);\n        console.log(\"total potassium is:\", totalPotassium);\n        API.updateEnergyPotassiumTotalsForScheduleByID(\n          this.state.currentSchedule._id,\n          totalEnergy,\n          totalPotassium\n        ).then(data => {\n          console.log(\n            \"dailyPlan data after food REMOVE, with updated totals\",\n            data.data\n          );\n          this.setState({\n            currentSchedule: data.data\n          });\n        });\n      })\n      .catch(err => console.log(err));\n  };\n\n  //! new version\n  addToSchedule = (\n    dailyPlan_id,\n    dailyPlanTotalEnergy,\n    dailyPlanTotalPotassium\n  ) => {\n    // console.log(\"in addToDailyPlan\");\n    // console.log(\"food id is:\", food_id);\n    // console.log(\"servingSize is:\", servingSize);\n\n    let scheduleData = {\n      scheduleDate: this.state.scheduleDate,\n      userID: userID,\n      totalEnergy: dailyPlanTotalEnergy,\n      totalPotassium: dailyPlanTotalPotassium,\n      dailyPlanID: dailyPlan_id\n    };\n\n    API.updateSchedule(scheduleData)\n      .then(res => {\n        // const tempDailyPlanList = data.data.dailyPlanList;\n        // let totalPotassium = 0;\n        // let totalEnergy = 0;\n        // tempDailyPlanList.map(dailyPlan => {\n        //   totalPotassium += dailyPlan.potassium;\n        //   totalEnergy += dailyPlan.energy;\n        // });\n\n        // this.setState({\n        //   currentSchedule: res.data\n        // });\n        this.loadDailyPlanByScheduleDate(this.state.scheduleDate);\n      })\n      .catch(err => console.log(err));\n  };\n  //next 3 functions from addDailyPlan.js\n  deleteSchedule = id => {\n    API.deleteSchedule(id)\n      .then(res => {\n        console.log(\"res is: \", res.data);\n        window.location.href = \"/ViewSchedule\";\n\n        // window.location.href = \"/AddDailyPlan\";\n        // this.setState({\n        //   dailyPlanList: res.data\n        // });\n      })\n      .catch(err => console.log(err));\n  };\n\n  //  handleInputChange = event => {\n\n  //   };\n\n  handleInputChangeScheduleDate = event => {\n    event.preventDefault();\n\n    this.setState({\n      scheduleDate: event.target.value,\n      scheduleContent: []\n    });\n\n    this.loadDailyPlanByScheduleDate(event.target.value);\n\n    console.log(\n      \"this.state.scheduleObject.dailyPlanID\",\n      this.state.scheduleObject.dailyPlanID\n    );\n    if (\n      this.state.scheduleObject.dailyPlanID === null ||\n      this.state.scheduleObject.dailyPlanID === undefined\n    ) {\n      var defaultData = {\n        scheduleDate: event.target.value,\n        userID: userID,\n        dailyPlanID: null,\n        totalEnergy: 0,\n        totalPotassium: 0\n      };\n\n      if (event.target.value) {\n        API.saveSchedule(defaultData)\n          //todo this refreshes the screen... or should i update state?\n          .then(\n            //res => (window.location.href = \"/ViewSchedule\")\n            //res =>\n            this.setState({\n              currentSchedule: defaultData\n            })\n\n            //  console.log(res.data)\n          )\n          // .then(res => (window.location.href = \"/AddDailyPlan\"))\n          //.then(res => this.loadDailyPlans())\n          .catch(err => console.log(err));\n      }\n    }\n  };\n\n  render() {\n    return (\n      <Container fluid>\n        <Row>\n          <Col size=\"md-12 sm-12\">\n            <Jumbotron>\n              <h1>View Schedule</h1>\n            </Jumbotron>\n          </Col>\n        </Row>\n\n        <Row>\n          <Col size=\"md-12\">\n            <form>\n              <Input\n                value={this.state.scheduleDate}\n                onChange={this.handleInputChangeScheduleDate}\n                name=\"scheduleDate\"\n                type=\"date\"\n                defaultValue={this.state.scheduleDate}\n              />\n            </form>\n          </Col>\n        </Row>\n\n        {console.log(this.state.currentSchedule)}\n        {this.state.currentSchedule ? (\n          <Row>\n            <Col size=\"md-12 sm-12\">\n              {/* <strong>Selected DailyPlan: </strong>{\" \"}\n              {this.state.currentDailyPlan.dailyPlanName} */}\n              <strong>Schedule Date: </strong>\n              {moment(this.state.currentSchedule.scheduleDate).format(\n                \"YYYY-MM-DD\"\n              ) + \" \"}\n              <strong>Total Energy: </strong>\n              {this.state.currentSchedule.totalEnergy}{\" \"}\n              <strong>Total Potassium: </strong>\n              {this.state.currentSchedule.totalPotassium}\n            </Col>\n          </Row>\n        ) : (\n          \"\"\n        )}\n\n        <Row>\n          <Col size=\"md-4 sm-4\">\n            <h3>DailyPlan List</h3>\n\n            {/* <Row>\n              <Col> */}\n            {this.state.dailyPlanList.length ? (\n              <>\n                {this.state.dailyPlanList.map(dailyPlan => (\n                  <Card\n                    key={dailyPlan._id}\n                    //todo: clicking on card isn't working...need to fix\n                    // onClick={() => this.selectDailyPlan(dailyPlan)}\n                  >\n                    {/* <Link to={\"/food/\" + food._id}></Link> */}\n                    <strong>\n                      DailyPlan Name: {dailyPlan.dailyPlanName} <br />\n                      Energy: {dailyPlan.totalEnergy} <br />\n                      Potassium: {dailyPlan.totalPotassium} <br />\n                    </strong>\n\n                    <Button\n                      className=\"btn btn-primary\"\n                      onClick={() =>\n                        this.addToSchedule(\n                          dailyPlan._id,\n                          dailyPlan.totalEnergy,\n                          dailyPlan.totalPotassium\n                        )\n                      }\n                    >\n                      Add\n                    </Button>\n                  </Card>\n                ))}\n              </>\n            ) : (\n              <h6>No DailyPlans, Add a dailyPlan first</h6>\n            )}\n          </Col>\n\n          <Col size=\"md-4 sm-4\">\n            <h3>Foods in your Schedule</h3>\n            {console.log(\n              \"this.state.scheduleContent is\",\n              this.state.scheduleContent\n            )}\n\n            {/* {this.state.scheduleContent.map(food => (\n              <Card key={food.data._id}>\n                <strong>\n                  <br /> {food.data.foodName} <br />\n                  <br /> Energy:{food.data.energy} <br />\n                  <br /> Potassium:{food.data.potassium} <br />\n                  <br /> Efficiency:{food.data.efficiency}\n                  {food.efficiency} <br />\n                </strong>\n              </Card>\n            ))} */}\n\n            {this.state.currentSchedule &&\n            this.state.currentSchedule.dailyPlanID === null\n              ? \"Please add a Daily Plan to your schedule\"\n              : this.state.scheduleContent.map(food => (\n                  <Card key={food.data._id}>\n                    <strong>\n                      <br /> {food.data.foodName} <br />\n                      <br /> Energy:{food.data.energy} <br />\n                      <br /> Potassium:{food.data.potassium} <br />\n                      <br /> Efficiency:{food.data.efficiency}\n                      {food.efficiency} <br />\n                    </strong>\n                  </Card>\n                ))}\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default Schedule;\n","import React, { Component } from \"react\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport API from \"../utils/API\";\nimport { Link } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport Card from \"../components/Card\";\nimport { List, ListItem } from \"../components/List\";\nimport { Input, TextArea, FormBtn, Dropdown } from \"../components/Form\";\nimport DeleteBtn from \"../components/DeleteBtn\";\nconst VerifyLogin = require(\"../utils/VerifyLogin\");\nconst userID = VerifyLogin.verifyUserObj();\n\nclass Meal extends Component {\n  state = {\n    mealName: \"\",\n    mealList: []\n  };\n\n  componentDidMount() {\n    this.loadMeals();\n  }\n\n  loadMeals = () => {\n    API.getMealByUser(userID)\n      .then(res => {\n        this.setState({\n          mealList: res.data\n        });\n      })\n      .catch(err => console.log(err));\n  };\n\n  deleteMeal = id => {\n    API.deleteMeal(id)\n      .then(res => {\n        console.log(\"res is: \", res.data);\n        window.location.href = \"/AddMeal\";\n        // this.setState({\n        //   mealList: res.data\n        // });\n      })\n      .catch(err => console.log(err));\n  };\n\n  // loadFood = () => {\n  //   API.getFoodByFoodGroupNameAndUser(\"Sweets\", \"master\")\n  //     // API.getFoodByFoodGroupAndUser(\"Sweets\", userID)\n  //     .then(res =>\n  //       this.setState({\n  //         foodList: res.data,\n  //         mealName: \"\",\n  //         foods: 0\n  //       })\n  //     )\n  //     .catch(err => console.log(err));\n  // };\n\n  // deleteFood = id => {\n  //   API.deleteFood(id)\n  //     .then(res => this.loadFood())\n  //     .catch(err => console.log(err));\n  // };\n\n  handleInputChange = event => {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value\n    });\n    console.log([name], value);\n    // console.log(this.state.foods);\n  };\n\n  handleFormSubmit = event => {\n    alert(this.state.foods);\n    event.preventDefault();\n    if (this.state.mealName) {\n      API.saveMeal({\n        mealName: this.state.mealName,\n        userID: userID,\n        totalEnergy: 0,\n        totalPotassium: 0\n      })\n        //todo this refreshes the screen... or should i update state?\n        .then(res => (window.location.href = \"/AddMeal\"))\n        //.then(res => this.loadMeals())\n        .catch(err => console.log(err));\n    }\n  };\n\n  render() {\n    return (\n      <Container fluid>\n        <Row>\n          <Col size=\"md-12\">\n            <Jumbotron>\n              <h1>Add New Meal</h1>\n            </Jumbotron>\n          </Col>\n        </Row>\n        <Row>\n          <Col size=\"md-12\">\n            {/* <form> */}\n            <Input\n              value={this.state.mealName}\n              onChange={this.handleInputChange}\n              name=\"mealName\"\n              placeholder=\"Meal Name (required)\"\n            />\n            <FormBtn\n              disabled={\n                !this.state.mealName\n\n                // && this.state.foodGroup &&\n                // this.state.energy &&\n                // this.state.potassium\n              }\n              onClick={this.handleFormSubmit}\n            >\n              Add Meal\n            </FormBtn>\n          </Col>\n        </Row>\n        <Row>\n          <Col size=\"md-12\">\n            <>\n              {/* // name=\"foods\" // onChange={this.handleInputChange}\n              // label=\"Foods\" // // value={this.state.foods[0].foodId}> */}\n              {this.state.mealList.map(meal => (\n                // <ListItem value={meal._id}>\n                <Card value={meal._id}>\n                  {meal.mealName}\n                  <DeleteBtn onClick={() => this.deleteMeal(meal._id)} />\n                </Card>\n                // </ListItem>\n              ))}\n              {/* {console.log(this.state.mealList)} */}\n            </>\n            {/* <Input\n                value={this.state.foods[0].servingSize}\n                onChange={this.handleInputChange}\n                name=\"servingsize\"\n                placeholder=\"Serving Size (optional)\"\n              /> */}\n\n            {/* <TextArea\n                value={this.state.synopsis}\n                onChange={this.handleInputChange}\n                name=\"synopsis\"\n                placeholder=\"Synopsis (Optional)\"\n              /> */}\n            {/* </form> */}\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default Meal;\n","import React, { Component } from \"react\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport API from \"../utils/API\";\nimport { Link } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { List, ListItem } from \"../components/List\";\nimport { Input, TextArea, FormBtn } from \"../components/Form\";\nimport Card from \"../components/Card\";\nimport DeleteBtn from \"../components/DeleteBtn\";\nimport AddBtn from \"../components/AddBtn\";\nimport Button from \"../components/Button\";\nimport \"./viewFoodStyle.css\";\nimport \"font-awesome/css/font-awesome.min.css\";\n// import '../node_modules/react-vis/dist/style.css';\n//import 'C:\\Users\\gurne\\OneDrive\\Documents\\Project3\\project3\\client\\node_modules/'\n//import { XYPlot, XAxis, YAxis, HorizontalGridLines, LineSeries } from 'react-vis';\nconst VerifyLogin = require(\"../utils/VerifyLogin\");\nconst userID = VerifyLogin.verifyUserObj();\n\nclass Meal extends Component {\n  state = {\n    // first item from add meal\n    mealName: \"\",\n    mealList: [],\n    foodList: [],\n    foodFavoriteList: [],\n    currentMeal: null\n  };\n\n  componentDidMount() {\n    this.loadMeals(userID);\n    this.loadFoodFavorites(userID);\n  }\n\n  loadFoodFavorites = userID => {\n    API.getFoodByUser(userID)\n      .then(res => {\n        console.log(\"FOODFAVORITES LIST IS: \", res.data);\n        this.setState({\n          foodFavoriteList: res.data\n        });\n      })\n      .catch(err => console.log(err));\n  };\n\n  loadMeals = userID => {\n    API.getMealByUser(userID)\n      .then(res => {\n        console.log(\"GETMEALBYUSER RETURNED: \", res.data);\n        this.setState({\n          mealList: res.data,\n          currentMeal: res.data[0]\n        });\n      })\n      .catch(err => console.log(err));\n  };\n\n  selectMeal = meal => {\n    console.log(\"JUST GOT INTO SELECT MEAL AND MEAL IS:\", meal);\n    this.setState({ currentMeal: meal });\n    console.log(\n      \"selected meal... now current meal state is:\",\n      this.state.currentMeal\n    );\n\n    var foodListArray = [];\n    meal.foodList.map(food => {\n      console.log(\"MAPPING OVER FOOD AND FOOD IS:\", food);\n      API.getFoodByID(food.food)\n        .then(res => {\n          console.log(\"getFoodByMealID returned: \", res);\n\n          res.data.map(foodObject => {\n            console.log(\n              \"PUSHING THIS FOODOBJECT ONTO FOODLIST ARRAY: \",\n              foodObject\n            );\n            foodListArray.push(foodObject);\n            this.setState({\n              foodList: foodListArray\n            });\n          });\n        })\n        .catch(err => console.log(err));\n    });\n  };\n\n  removeFromMeal = foodID => {\n    console.log(\"remove food:\", foodID);\n    console.log(\"from meal:\", this.state.currentMeal._id);\n    API.removeFoodFromMealByID(this.state.currentMeal._id, foodID)\n      .then(data => {\n        console.log(\"food delete returned: \", data);\n        // }\n        // );\n        const tempFoodList = data.data.foodList;\n        let totalPotassium = 0;\n        let totalEnergy = 0;\n        tempFoodList.map(food => {\n          totalPotassium += food.food.potassium;\n          totalEnergy += food.food.energy;\n        });\n        console.log(\"total energy is:\", totalEnergy);\n        console.log(\"total potassium is:\", totalPotassium);\n        API.updateEnergyPotassiumTotalsForMealByID(\n          this.state.currentMeal._id,\n          totalEnergy,\n          totalPotassium\n        ).then(data => {\n          console.log(\n            \"meal data after food REMOVE, with updated totals\",\n            data.data\n          );\n          this.setState({\n            currentMeal: data.data\n          });\n        });\n      })\n      .catch(err => console.log(err));\n  };\n\n  //! new version\n  addToMeal = (food_id, servingSize) => {\n    // console.log(\"in addToMeal\");\n    // console.log(\"food id is:\", food_id);\n    // console.log(\"servingSize is:\", servingSize);\n    API.addFoodToMealByID(this.state.currentMeal._id, food_id, servingSize)\n      .then(data => {\n        // console.log(\"addFoodToMealByID data.data is\", data.data);\n        // console.log(\"foodlist is:\", data.data.foodList);\n        // const totalEnergy = data.data.foodList.reduce((a, b) => ({\n        //   energy: a.energy + b.energy\n        // }));\n        // const totalPotassium = data.data.foodList.reduce((a, b) => ({\n        //   potassium: a.potassium + b.potassium\n        // }));\n        console.log(\"data.data is:\", data.data);\n        const tempFoodList = data.data.foodList;\n        console.log(\"tempFoodList is:\", tempFoodList);\n        let totalPotassium = 0;\n        let totalEnergy = 0;\n        tempFoodList.map(food => {\n          totalPotassium += food.food.potassium;\n          totalEnergy += food.food.energy;\n        });\n        console.log(\"total energy before update totals is:\", totalEnergy);\n        console.log(\"total potassium before update totals is:\", totalPotassium);\n        API.updateEnergyPotassiumTotalsForMealByID(\n          this.state.currentMeal._id,\n          totalEnergy,\n          totalPotassium\n        ).then(data => {\n          console.log(\n            \"meal data after food ADD, with updated totals\",\n            data.data\n          );\n          this.setState({\n            currentMeal: data.data\n          });\n        });\n      })\n      .catch(err => console.log(err));\n  };\n\n  //next 3 functions from addMeal.js\n  deleteMeal = id => {\n    API.deleteMeal(id)\n      .then(res => {\n        console.log(\"res is: \", res.data);\n        window.location.href = \"/ViewMeal\";\n\n        // window.location.href = \"/AddMeal\";\n        // this.setState({\n        //   mealList: res.data\n        // });\n      })\n      .catch(err => console.log(err));\n  };\n\n  handleInputChange = event => {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value\n    });\n    console.log([name], value);\n    // console.log(this.state.foods);\n  };\n\n  handleFormSubmit = event => {\n    // alert(this.state.foods);\n    event.preventDefault();\n    if (this.state.mealName) {\n      API.saveMeal({\n        mealName: this.state.mealName,\n        userID: userID,\n        totalEnergy: 0,\n        totalPotassium: 0\n      })\n        //todo this refreshes the screen... or should i update state?\n        .then(res => (window.location.href = \"/ViewMeal\"))\n        // .then(res => (window.location.href = \"/AddMeal\"))\n        //.then(res => this.loadMeals())\n        .catch(err => console.log(err));\n    }\n  };\n\n  render() {\n    const thumbnail = {\n      width: 50,\n      height: 50\n    };\n    // console.log(this.state.currentMeal);\n    return (\n      <Container fluid>\n        <Row>\n          <Col size=\"sm-12\">\n            <Jumbotron>\n              <h1>View Meal</h1>\n            </Jumbotron>\n          </Col>\n        </Row>\n        {/* the charts and details should show here */}\n        {this.state.currentMeal ? (\n          <div>\n            <div className=\"d-flex flex-row justify-content-center mb-1\">\n              <h3>Current Meal</h3>\n            </div>\n            <div className=\"d-flex flex-row justify-content-center mb-5\">\n              <div className=\"p-3 pl-5 dotted-div\">\n                <img\n                  style={thumbnail}\n                  alt=\"icon\"\n                  src=\"https://i.imgur.com/ftEWZYQ.png\"\n                />\n                <span className=\"meal-selected\">\n                  {\" \"}\n                  {this.state.currentMeal.mealName}\n                </span>\n              </div>\n              <div className=\"p-3 dotted-div\">\n                <img\n                  style={thumbnail}\n                  alt=\"icon\"\n                  src=\"https://i.imgur.com/iCAG80W.png\"\n                />\n                {this.state.currentMeal.totalEnergy}kCal\n              </div>\n              <div className=\"p-3 dotted-div\">\n                <img\n                  style={thumbnail}\n                  alt=\"icon\"\n                  src=\"https://i.imgur.com/rK4wz3p.jpg\"\n                />{\" \"}\n                {this.state.currentMeal.totalPotassium}gm\n              </div>\n              <div className=\"p-3  pr-5 dotted-div\">\n                <img\n                  style={thumbnail}\n                  alt=\"icon\"\n                  src=\"https://i.imgur.com/rK4wz3p.jpg\"\n                />{\" \"}\n                {this.state.currentMeal.efficiency}\n              </div>\n            </div>\n          </div>\n        ) : (\n          <div className=\"row ml-5\">\n            <h6>\n              Select a Meal from the meal list to see what foods it contains and\n              to make changes\n            </h6>\n          </div>\n        )}\n        <div className=\"container row ml-3 mb-3\">\n          <div className=\"col-6 mt-2\">\n            <Input\n              value={this.state.mealName}\n              onChange={this.handleInputChange}\n              name=\"mealName\"\n              placeholder=\"Enter meal name to create new meal\"\n            />\n          </div>\n          <div className=\"col-2\">\n            <Button\n              className=\"btn btn-primary\"\n              disabled={\n                !this.state.mealName\n\n                // && this.state.foodGroup &&\n                // this.state.energy &&\n                // this.state.potassium\n              }\n              onClick={this.handleFormSubmit}\n            >\n              Add Meal\n            </Button>\n          </div>\n        </div>\n\n        {/* end of add meal section */}\n        {/* <Col size=\"md-4 sm-4\">\n          <Row>\n            <Col size=\"sm-12\">\n              <h6>Select a Meal</h6>\n            </Col>\n          </Row>\n          )}\n        </Col> */}\n        {/* starting the display */}\n        <div className=\"row\">\n          {/* select a meal div */}\n          <div className=\"col-3 ml-5\">\n            <div className=\" justify-content-center\">\n              <h3 className=\"text-center\">Select a Meal</h3>\n              <hr />\n            </div>\n            <Row>\n              {this.state.mealList.length ? (\n                <>\n                  <ul className=\"list-group list-group-flush\">\n                    <ul className=\"list-group\">\n                      {this.state.mealList.map(meal => (\n                        <li className=\"list-group-item\" key={meal._id}>\n                          {/* //todo: clicking on card isn't working...need to fix */}\n                          {/* // onClick={() => this.selectMeal(meal)} */}\n                          {/* <Link to={\"/food/\" + food._id}></Link> */}\n                          <div className=\"row\">\n                            <div className=\"col-8\">\n                              <strong>\n                                <h5 style={{ fontWeight: \"bolder\" }}>\n                                  {\" \"}\n                                  Meal Name:\n                                  <span className=\"meal-selected\">\n                                    {meal.mealName}\n                                  </span>{\" \"}\n                                </h5>\n                                <span className=\"spanIt\">Energy:</span>{\" \"}\n                                {meal.totalEnergy} kCal <br />\n                                <span className=\"spanIt\"> Potassium:</span>{\" \"}\n                                {meal.totalPotassium} gm\n                                <br />\n                                {/* {parseInt(meal.totalPotassium) === 0\n                                  ? 0\n                                  : parseFloat(\n                                    parseInt(meal.totalEnergy) /\n                                    parseInt(meal.totalPotassium)\n                                  ).toFixed(2)} */}\n                                <br />\n                              </strong>\n                            </div>\n                            <div className=\"col-2\">\n                              <div className=\"col-12\">\n                                <button\n                                  // style={{ border: 0 }}\n                                  role=\"button\"\n                                  className=\"btn px-3 text-center blue-gradient \"\n                                  onClick={() => this.selectMeal(meal)}\n                                >\n                                  <div style={{ textAlign: \"center\" }}>\n                                    <i className=\"fa fa-plus-circle fa-2x\" />\n                                  </div>\n                                </button>\n                              </div>\n                              <div className=\"col-12\">\n                                <button\n                                  // style={{ border: 0 }}\n                                  role=\"button\"\n                                  className=\"btn px-3 text-center peach-gradient \"\n                                  onClick={() => this.deleteMeal(meal._id)}\n                                >\n                                  <div style={{ textAlign: \"center\" }}>\n                                    <i className=\"fa fa-minus-circle fa-2x\" />\n                                  </div>\n                                </button>\n                              </div>\n                            </div>\n                          </div>\n                        </li>\n                      ))}\n                    </ul>\n                  </ul>\n                </>\n              ) : (\n                <div className=\"justify-content-center\">\n                  <h6 className=\"text-center\">No Meals, Add a meal first</h6>\n                </div>\n              )}\n            </Row>\n          </div>\n\n          {/* you custom food div */}\n          <div className=\"col-3 offset-1\">\n            <div className=\"justify-content-center ml-3\">\n              <h3>Customize your Meal</h3>\n              <hr />\n            </div>\n\n            <Row>\n              {this.state.currentMeal &&\n              this.state.currentMeal.foodList.length > 0 ? (\n                <ul className=\"list-group list-group-flush\">\n                  <ul className=\"list-group\">\n                    {this.state.currentMeal.foodList.map(food => (\n                      <li\n                        className=\"list-group-item text-center\"\n                        key={food._id}\n                      >\n                        <div>\n                          <strong>\n                            <h5 style={{ fontWeight: \"bolder\" }}>\n                              {food.food.foodName}\n                            </h5>\n                            <span className=\"spanIt\">Energy:</span>\n                            {food.food.energy} <br />\n                            <span className=\"spanIt\">Potassium:</span>\n                            {food.food.potassium} <br />\n                            <span className=\"spanIt\"> ServingSize:</span>\n                            {food.servingSize}\n                            <br />\n                            <span className=\"spanIt\"> Efficiency:</span>\n                            {food.food.efficiency}{\" \"}\n                            {/* {food.food.energy / food.food.potassium} */}\n                            {/* {parseFloat(\n                              parseInt(food.food.energy) /\n                                parseInt(food.food.potassium)\n                            ).toFixed(2)} */}\n                            <br />\n                          </strong>\n                        </div>\n                        <button\n                          className=\"btn px-3 text-center peach-gradient \"\n                          onClick={() => this.removeFromMeal(food._id)}\n                        >\n                          <div style={{ textAlign: \"center\" }}>\n                            <i className=\"fa fa-minus-circle fa-2x\" />\n                          </div>\n                        </button>\n                      </li>\n                    ))}\n                  </ul>\n                </ul>\n              ) : (\n                <h6>Click Add on a food item to add it to your meal</h6>\n              )}\n            </Row>\n          </div>\n\n          {/* add fav food div */}\n          <div className=\"col-3 offset-1\">\n            <div className=\"justify-content-center ml-5\">\n              <h3>Add Favorite Foods</h3>\n              <hr />\n            </div>\n\n            <Row>\n              {this.state.foodFavoriteList.length ? (\n                <ul className=\"list-group list-group-flush\">\n                  <ul className=\"list-group\">\n                    {this.state.foodFavoriteList.map(food => (\n                      <li className=\"list-group-item\" key={food._id}>\n                        <div className=\"row\">\n                          <div className=\"col-2 mt-5\">\n                            <button\n                              // style={{ border: 0 }}\n                              role=\"button\"\n                              type=\"button\"\n                              className=\"btn px-3 text-center blue-gradient \"\n                              onClick={() => this.addToMeal(food._id, 100)}\n                            >\n                              <div style={{ textAlign: \"center\" }}>\n                                <i className=\"fa fa-plus-circle fa-2x\" />\n                              </div>\n                            </button>\n                          </div>\n                          <div className=\"col-8 offset-2\">\n                            <strong>\n                              <h5 style={{ fontWeight: \"bolder\" }}>\n                                {food.foodName}{\" \"}\n                              </h5>\n                              <span className=\"spanIt\">Energy:</span>\n                              {food.energy} <br />\n                              <span className=\"spanIt\">Potassium:</span>{\" \"}\n                              {food.potassium} <br />\n                              <span className=\"spanIt\">Efficiency:</span>\n                              {food.efficiency} <br />\n                            </strong>\n                          </div>\n                        </div>\n                      </li>\n                    ))}\n                  </ul>\n                </ul>\n              ) : (\n                <div className=\"justify-content-center ml-5\">\n                  <h6>Click Add to add a food to the meal</h6>\n                </div>\n              )}\n            </Row>\n          </div>\n        </div>\n      </Container>\n    );\n  }\n}\n\nexport default Meal;\n","import React, { Component } from \"react\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport API from \"../utils/API\";\nimport { Link } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { List, ListItem } from \"../components/List\";\nimport { Input, TextArea, FormBtn } from \"../components/Form\";\nimport Card from \"../components/Card\";\nimport DeleteBtn from \"../components/DeleteBtn\";\nimport AddBtn from \"../components/AddBtn\";\nimport Button from \"../components/Button\";\nconst VerifyLogin = require(\"../utils/VerifyLogin\");\nconst userID = VerifyLogin.verifyUserObj();\n\nclass DailyPlan extends Component {\n  state = {\n    dailyPlanName: \"\",\n    dailyPlanList: [],\n    mealList: [],\n    dailyPlanMealList: [],\n    currentDailyPlan: null\n  };\n\n  componentDidMount() {\n    this.loadDailyPlans(userID);\n    this.loadMealList(userID);\n  }\n  loadMealList = userID => {\n    API.getMealByUser(userID)\n      .then(res => {\n        console.log(\"mealList is: \", res.data);\n        this.setState({\n          mealList: res.data\n        });\n      })\n      .catch(err => console.log(err));\n  };\n\n  loadDailyPlans = userID => {\n    API.getDailyPlanByUser(userID)\n      .then(res => {\n        console.log(\"getDailyPlanByUser returned: \", res.data);\n        this.setState({\n          dailyPlanList: res.data\n        });\n      })\n      .catch(err => console.log(err));\n  };\n\n  selectDailyPlan = dailyPlan => {\n    console.log(\"selectDailyPlan dailyplan is : \" + dailyPlan);\n    console.log(dailyPlan);\n\n    this.setState({ currentDailyPlan: dailyPlan });\n    console.log(\n      \"selected dailyPlan... now current dailyPlan state is:\",\n      this.state.currentDailyPlan\n    );\n\n    var mealListArray = [];\n    dailyPlan.mealList.map(mealID =>\n      API.getMealByID(mealID)\n        .then(res => {\n          console.log(\"mealListArray element is: \", res.data);\n\n          mealListArray.push(res.data);\n\n          this.setState({\n            dailyPlanMealList: mealListArray\n          });\n        })\n        .catch(err => console.log(err))\n    );\n  };\n\n  removeFromDailyPlan = mealID => {\n    console.log(\"remove meal:\", mealID);\n    console.log(\"from dailyPlan:\", this.state.currentDailyPlan._id);\n    API.removeMealFromDailyPlanByID(this.state.currentDailyPlan._id, mealID)\n      .then(data => {\n        console.log(\"meal delete returned: \", data);\n        // }\n        // );\n        const tempMealList = data.data.mealList;\n        let totalPotassium = 0;\n        let totalEnergy = 0;\n\n        console.log(\"tempMealList\", tempMealList);\n        tempMealList.map(meal => {\n          totalPotassium += meal.totalPotassium;\n          totalEnergy += meal.totalEnergy;\n        });\n        console.log(\"total energy is:\", totalEnergy);\n        console.log(\"total potassium is:\", totalPotassium);\n        API.updateEnergyPotassiumTotalsForDailyPlanByID(\n          this.state.currentDailyPlan._id,\n          totalEnergy,\n          totalPotassium\n        ).then(data => {\n          console.log(\n            \"dailyPlan data after meal REMOVE, with updated totals\",\n            data.data\n          );\n          this.setState({\n            currentDailyPlan: data.data,\n            dailyPlanMealList: data.data.mealList\n          });\n\n          console.log(this.state.dailyPlanMealList);\n        });\n      })\n      .catch(err => console.log(err));\n  };\n\n  //! new version\n  addToDailyPlan = meal_id => {\n    // console.log(\"in addToDailyPlan\");\n    // console.log(\"meal id is:\", meal_id);\n    // console.log(\"servingSize is:\", servingSize);\n    API.addMealToDailyPlanByID(this.state.currentDailyPlan._id, meal_id)\n      .then(data => {\n        // console.log(\"addMealToDailyPlanByID data.data is\", data.data);\n        // console.log(\"meallist is:\", data.data.mealList);\n        // const totalEnergy = data.data.mealList.reduce((a, b) => ({\n        //   energy: a.energy + b.energy\n        // }));\n        // const totalPotassium = data.data.mealList.reduce((a, b) => ({\n        //   potassium: a.potassium + b.potassium\n        // }));\n        console.log(\"data.data is:\", data.data);\n        let tempMealList = data.data.mealList;\n        console.log(\"tempMealList is:\", tempMealList);\n        let totalPotassium = 0;\n        let totalEnergy = 0;\n        tempMealList.map(meal => {\n          totalPotassium += meal.totalPotassium;\n          totalEnergy += meal.totalEnergy;\n        });\n        console.log(\"total energy before update totals is:\", totalEnergy);\n        console.log(\"total potassium before update totals is:\", totalPotassium);\n        API.updateEnergyPotassiumTotalsForDailyPlanByID(\n          this.state.currentDailyPlan._id,\n          totalEnergy,\n          totalPotassium\n        ).then(data => {\n          console.log(data);\n          console.log(\n            \"dailyPlan data after meal ADD, with updated totals\",\n            data.data\n          );\n\n          this.setState({\n            currentDailyPlan: data.data\n          });\n\n          var mealListArray = [];\n          data.data.mealList.map(mealID =>\n            API.getMealByID(mealID)\n              .then(res => {\n                console.log(\"mealListArray element is: \", res.data);\n\n                mealListArray.push(res.data);\n\n                this.setState({\n                  dailyPlanMealList: mealListArray\n                });\n              })\n              .catch(err => console.log(err))\n          );\n        });\n      })\n      .catch(err => console.log(err));\n  };\n  //next 3 functions from addDailyPlan.js\n  deleteDailyPlan = id => {\n    API.deleteDailyPlan(id)\n      .then(res => {\n        console.log(\"res is: \", res.data);\n        window.location.href = \"/ViewDailyPlan\";\n\n        // window.location.href = \"/AddDailyPlan\";\n        // this.setState({\n        //   dailyPlanList: res.data\n        // });\n      })\n      .catch(err => console.log(err));\n  };\n\n  handleInputChange = event => {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value\n    });\n    console.log([name], value);\n    // console.log(this.state.meals);\n  };\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n    if (this.state.dailyPlanName) {\n      API.saveDailyPlan({\n        dailyPlanName: this.state.dailyPlanName,\n        userID: userID,\n        totalEnergy: 0,\n        totalPotassium: 0\n      })\n        //todo this refreshes the screen... or should i update state?\n        .then(res => (window.location.href = \"/ViewDailyPlan\"))\n        // .then(res => (window.location.href = \"/AddDailyPlan\"))\n        //.then(res => this.loadDailyPlans())\n        .catch(err => console.log(err));\n    }\n  };\n\n  render() {\n    return (\n      <Container fluid>\n        <Row>\n          <Col size=\"md-9 sm-9\">\n            <Input\n              value={this.state.dailyPlanName}\n              onChange={this.handleInputChange}\n              name=\"dailyPlanName\"\n              placeholder=\"Enter a name for your daily plan\"\n            />\n          </Col>\n          <Col size=\"md-3 sm-3\">\n            <Button\n              className=\"btn btn-primary\"\n              disabled={\n                !this.state.dailyPlanName\n\n                // && this.state.mealGroup &&\n                // this.state.energy &&\n                // this.state.potassium\n              }\n              onClick={this.handleFormSubmit}\n            >\n              Add DailyPlan\n            </Button>\n          </Col>\n        </Row>\n        {/* end of add dailyPlan section */}\n\n        {this.state.currentDailyPlan ? (\n          <Row>\n            <Col size=\"md-12 sm-12\">\n              <strong>Selected DailyPlan: </strong>{\" \"}\n              {this.state.currentDailyPlan.dailyPlanName}\n              <strong>Total Energy: </strong>\n              {this.state.currentDailyPlan.totalEnergy}\n              <strong>Total Potassium: </strong>\n              {this.state.currentDailyPlan.totalPotassium}\n            </Col>\n          </Row>\n        ) : (\n          <Row>\n            <Col size=\"md-12 sm-12\">\n              <h6>\n                Select a DailyPlan from the dailyPlan list to see what meals it\n                contains and to make changes\n              </h6>\n            </Col>\n          </Row>\n        )}\n\n        <Row>\n          <Col size=\"md-4 sm-4\">\n            <Row>\n              <h3>DailyPlan List</h3>\n            </Row>\n            <Row>\n              {this.state.dailyPlanList.length ? (\n                <>\n                  {this.state.dailyPlanList.map(dailyPlan => (\n                    <Card key={dailyPlan._id}>\n                      {/* <Link to={\"/meal/\" + meal._id}></Link> */}\n                      <strong>\n                        DailyPlan Name: {dailyPlan.dailyPlanName} <br />\n                        Energy: {dailyPlan.totalEnergy} <br />\n                        Potassium: {dailyPlan.totalPotassium} <br />\n                        Efficiency: {dailyPlan.efficiency} <br />\n                      </strong>\n                      <Button\n                        className=\"btn btn-primary\"\n                        onClick={() => this.selectDailyPlan(dailyPlan)}\n                      >\n                        Select\n                      </Button>\n                      <Button\n                        className=\"btn btn-danger\"\n                        onClick={() => this.deleteDailyPlan(dailyPlan._id)}\n                      >\n                        Delete\n                      </Button>\n                    </Card>\n                  ))}\n                </>\n              ) : (\n                <h6>No DailyPlans, Add a dailyPlan first</h6>\n              )}\n            </Row>\n          </Col>\n          <Col size=\"md-4 sm-4\">\n            <Row>\n              <h3>Meals in your DailyPlan</h3>\n            </Row>\n            <Row>\n              <div>\n                {/* this.state.currentDailyPlan && */}\n                {this.state.dailyPlanMealList.length + \" meals\"}\n                {this.state.dailyPlanMealList.length > 0 ? (\n                  <List>\n                    {this.state.dailyPlanMealList.map(meal => (\n                      <Card key={meal._id}>\n                        <strong>\n                          <br /> {meal.mealName} <br />\n                          <br /> Energy:{meal.totalEnergy} <br />\n                          <br /> Potassium:{meal.totalPotassium} <br />\n                          {/* <br /> ServingSize:{meal.servingSize}\n                          <br /> */}\n                          <br /> Efficiency: {meal.efficiency} <br />\n                        </strong>\n                        <Button\n                          className=\"btn btn-danger\"\n                          onClick={() => this.removeFromDailyPlan(meal._id)}\n                        >\n                          Remove\n                        </Button>\n                      </Card>\n                    ))}\n                  </List>\n                ) : (\n                  <h6>Click Add on a meal card to add it to your dailyPlan</h6>\n                )}\n              </div>\n            </Row>\n          </Col>\n          <Col size=\"md-4 sm-4\">\n            <Row>\n              <h3>Meals</h3>\n            </Row>\n            <Row>\n              {this.state.mealList.length ? (\n                this.state.mealList.map(meal => (\n                  <Card key={meal._id}>\n                    <strong>\n                      <br /> {meal.mealName} <br />\n                      <br /> Energy:{meal.totalEnergy} <br />\n                      <br /> Potassium:{meal.totalPotassium} <br />\n                      <br /> Efficiency:{meal.efficiency} <br />\n                    </strong>\n                    <Button\n                      className=\"btn btn-primary\"\n                      onClick={() => this.addToDailyPlan(meal._id)}\n                    >\n                      Add\n                    </Button>\n                  </Card>\n                ))\n              ) : (\n                <h6>Click Add to add a meal to the dailyPlan</h6>\n              )}\n            </Row>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default DailyPlan;\n","import React, { Component } from \"react\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport API from \"../utils/API\";\nimport { Link } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { List, ListItem } from \"../components/List\";\nimport { Input, TextArea, FormBtn } from \"../components/Form\";\nimport SearchResults from \"./SearchResults\";\nimport foods from \"./food.json\";\nimport { FoodPic, FoodContainer } from \"./FoodPic\";\nconst VerifyLogin = require(\"../utils/VerifyLogin\");\nconst userID = VerifyLogin.verifyUserObj();\nclass FoodItem extends Component {\n  state = {\n    results: \"\",\n    foodSearch: \"\",\n    pics: null\n  };\n\n  componentDidMount() {\n       \n   \n  }\n\n  handleInputChange = event => {\n    this.setState({ foodSearch: event.target.value });\n  };\n\n  findPic = name => {\n    API.getRecipes(name)\n      .then(res => {\n        const ImgRec = res.data.results.filter(recipe =>\n          Boolean(recipe.thumbnail)\n        );\n        this.setState({ pics: ImgRec.length > 0 ? ImgRec[0].thumbnail : null });\n      })\n      .catch(err => console.log(err));\n  };\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n    console.log(foods);\n    foods.map(item => {\n      let key = item.id;\n      if (item.foodID === this.state.foodSearch) {\n        console.log(item.foodName);\n        this.setState({ results: item });\n        this.findPic(item.foodName);\n      }\n    });\n  };\n\n  render() {\n    return (\n      <Container fluid>\n        <Row>\n          <Col size=\"md-12\">\n            <h1>What Food Can I Eat?</h1>\n            <form>\n              <Input\n                value={this.state.foodSearch}\n                onChange={this.handleInputChange}\n                name=\"foodSearch\"\n                placeholder=\"Enter Food Name\"\n              />\n              <FormBtn onClick={this.handleFormSubmit}>Search Food</FormBtn>\n            </form>\n          </Col>\n        </Row>\n\n        <SearchResults\n          foodName={this.state.results.foodName}\n          potassium={this.state.results.potassium}\n        />\n        <FoodContainer>\n          {console.log(this.state.pics)}\n\n          {this.state.pics && <FoodPic thumbnail={this.state.pics} />}\n        </FoodContainer>\n      </Container>\n    );\n  }\n}\n\nexport default FoodItem;\n","import React, { Component } from \"react\";\nimport FoodItem from \"./Books\";\nimport Login from \"./Login\";\n\nfunction HomeContainer() {\n    return (\n        <div>\n            <FoodItem />\n            <Login />\n        </div>\n    )\n}\n\nexport default HomeContainer;","import React from \"react\";\nimport \"./style.css\"\n\nfunction CustomCard(props) {\n    return (\n        <div className=\"card pl-10\">\n\n            <div class=\"view overlay\">\n                <img class=\"card-img-top\" src=\"https://mdbootstrap.com/img/Photos/Horizontal/Work/4-col/img%20%2821%29.jpg\" alt=\"Card image cap\" />\n                <a>\n                    <div class=\"mask rgba-white-slight\"></div>\n                </a>\n            </div>\n\n\n            <h4 className=\"card-title\">{props.title}</h4>\n            <hr class=\"hr-light\" />\n            <div className=\"card-text\">\n                <ul className=\"list-group\">\n                    <li className=\"list-group-item d-flex justify-content-between align-items-center\">\n                        Food Group\n                        <span >{props.foodGroup}</span>\n                    </li>\n                    <li className=\"list-group-item d-flex justify-content-between align-items-center\">\n                        Energy\n            <span className=\"badge blue-gradient  badge-pill\">{props.energy} kCal</span>\n                    </li>\n                    <li className=\"list-group-item d-flex justify-content-between align-items-center\">\n                        Potassium\n            <span className=\"badge blue-gradient badge-pill\">{props.potassium} mg</span>\n                    </li>\n                    <li className=\"list-group-item d-flex justify-content-between align-items-center\">\n                        Efficiency\n            <span className=\"badge blue-gradient badge-pill\">{props.efficiency}</span>\n                    </li>\n                    <li className=\"list-group-item d-flex justify-content-between align-items-center\">\n                        User Name\n            <span>{props.username}</span>\n                    </li>\n                </ul>\n                {/* <p className=\"text-small text-muted mb-0 pt-3\">* At vero eos et accusamus et iusto ducimus.</p> */}\n            </div>\n        </div>\n\n    )\n}\n\nexport default CustomCard;","import React, { Component } from \"react\";\nimport Button from \"../components/Button\";\nimport API from \"../utils/API\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport Card from \"../components/Card\";\nimport { Input, TextArea, FormBtn, Dropdown } from \"../components/Form\";\nimport CustomCard from \"../components/CustomCard\"\nconst VerifyLogin = require(\"../utils/VerifyLogin\");\nconst userID = VerifyLogin.verifyUserObj();\n\nclass FoodFavorite extends Component {\n  state = {\n    foodFavoriteList: [],\n    customize: false,\n    editFoodID: null,\n    energy: 0,\n    potassium: 0,\n    foodGroupName: \"\",\n    foodGroupList: []\n  };\n\n  componentDidMount() {\n       \n    this.loadFoodFavorite(userID);\n    this.loadFoodGroupByMasterAndUser(userID);\n  }\n\n  loadFoodFavorite = userID => {\n    API.getFoodByUser(userID)\n      .then(res => {\n        this.setState({\n          foodFavoriteList: res.data\n        });\n      })\n      .catch(err => console.log(err));\n  };\n\n  deleteFood = (id, foodName) => {\n    if (\n      window.confirm(\n        \"Are you sure you would like to delete \" +\n        foodName +\n        \" from your Favorite Foods?\"\n      )\n    ) {\n      API.deleteFoodByID(id)\n        .then(res => this.loadFoodFavorite(userID))\n        .catch(err => console.log(err));\n    }\n  };\n\n  handleInputChange = event => {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n\n    if (this.state.energy && this.state.potassium && this.state.foodGroupName) {\n      API.updateFoodByID(this.state.editFoodID, {\n        energy: this.state.energy,\n        potassium: this.state.potassium,\n        foodGroupName: this.state.foodGroupName\n      })\n        .then(\n          this.setState({\n            energy: 0,\n            potassium: 0,\n            foodGroupName: \"\",\n            customize: false\n          })\n        )\n        .catch(err => console.log(err));\n\n      this.loadFoodFavorite(userID);\n    }\n  };\n\n  edit = (id, energy, potassium, foodGroupName) => {\n    this.setState({\n      customize: true,\n      editFoodID: id,\n      energy: energy,\n      potassium: potassium,\n      foodGroupName: foodGroupName\n    });\n  };\n\n  loadFoodGroupByMasterAndUser = userID => {\n    API.getFoodGroupByMasterAndUser(userID)\n      .then(res =>\n        this.setState({\n          foodGroupList: res.data\n        })\n      )\n      .catch(err => console.log(err));\n  };\n\n  render() {\n    var foodDisplay = {\n      color: '#1e90ff',\n      fontWeight: 'bold'\n    };\n    return (\n      <Container fluid>\n        <Row>\n          <Col size=\"md-12\">\n            {/* <Jumbotron>\n              <h1>View Food</h1>\n            </Jumbotron> */}\n          </Col>\n        </Row>\n\n\n        {this.state.foodFavoriteList.length ? (\n          this.state.foodFavoriteList.map(foodFavoriteList => (\n            <Row>\n              <Col size=\"md-6\" className=\"offset-2\" >\n                <div className=\"m-5\">\n                  <CustomCard\n                    key={foodFavoriteList._id}\n                    title={foodFavoriteList.foodName}\n                    foodGroup={foodFavoriteList.foodGroupName}\n                    energy={foodFavoriteList.energy}\n                    potassium={foodFavoriteList.potassium}\n                    efficiency={foodFavoriteList.efficiency}\n                    username={foodFavoriteList.userID}\n                  >\n                  </CustomCard>\n                </div>\n              </Col>\n\n              {this.state.customize &&\n                this.state.editFoodID === foodFavoriteList._id ? (\n                  <Col size=\"md-4\">\n                    <div className=\"mt-5\">\n                      <Dropdown\n                        name=\"foodGroupName\"\n                        onChange={this.handleInputChange}\n                        label=\"Food Group\"\n                        defaultValue={this.state.foodGroupName}\n                      >\n                        {this.state.foodGroupList.map(foodGroupList => (\n                          <option value={foodGroupList.foodGroupName}>\n                            {foodGroupList.foodGroupName}\n                          </option>\n                        ))}\n                      </Dropdown>\n                    </div>\n                    <Input\n                      defaultValue={foodFavoriteList.energy}\n                      onChange={this.handleInputChange}\n                      name=\"energy\"\n                      placeholder=\"Energy (required)\"\n                      type=\"text\"\n                    />\n\n                    <Input\n                      defaultValue={foodFavoriteList.potassium}\n                      onChange={this.handleInputChange}\n                      name=\"potassium\"\n                      placeholder=\"Potassium (required)\"\n                      type=\"text\"\n                    />\n\n                    <FormBtn\n                      className=\"btn peach-gradient\"\n                      // disabled={!(this.state.energy && this.state.potassium)}\n                      onClick={this.edit}\n                    >\n                      <a style={{ fontWeight: 'bolder' }}> CANCEL <i class=\"fa fa-remove\"></i></a>\n                    </FormBtn>\n\n                    <FormBtn\n                      className=\"btn blue-gradient\"\n                      // disabled={!(this.state.energy && this.state.potassium)}\n                      onClick={this.handleFormSubmit}\n                    >\n                      <a style={{ fontWeight: 'bolder' }}> SUBMIT <i class=\"fa fa-paper-plane\"></i></a>\n\n                    </FormBtn>\n                  </Col>\n                ) : (\n                  <div className=\"conatiner button-container\">\n                    <Col size=\"md-4\">\n                      <div className=\"mt-5\">\n                        <button\n                          key={foodFavoriteList._id}\n                          onClick={() =>\n                            this.edit(\n                              foodFavoriteList._id,\n                              foodFavoriteList.energy,\n                              foodFavoriteList.potassium,\n                              foodFavoriteList.foodGroupName\n                            )\n                          }\n                          className=\"btn btn-outline-mdb-color waves-effect edit-button\"\n                        >\n\n                          <a style={{ fontWeight: 'bolder', fontSize: 15 }}>EDIT<i class=\"fa fa-pencil-square-o\"></i></a>\n                        </button>\n                      </div>\n                    </Col>\n                    <Col size=\"md-4\">\n                      <button\n                        key={foodFavoriteList._id}\n                        onClick={() =>\n                          this.deleteFood(\n                            foodFavoriteList._id,\n                            foodFavoriteList.foodName\n                          )\n                        }\n                        className=\" btn btn-outline-mdb-color waves-effect remove-button\"\n                      >\n                        <a style={{ fontWeight: 'bolder', fontSize: 15 }}>REMOVE<i class=\"fa fa-remove\"></i></a>\n                      </button>\n                    </Col>\n                  </div>\n                )}\n            </Row>\n          ))\n        ) : (\n            <h3>No Results to Display</h3>\n          )}\n      </Container>\n    );\n  }\n}\n\nexport default FoodFavorite;\n","import React, { Component } from \"react\";\n//import Jumbotron from \"../components/Jumbotron\";\nimport API from \"../utils/API\";\n// import { Link } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../components/Grid\";\n// import { List, ListItem } from \"../components/List\";\nimport { Input, TextArea, FormBtn, Dropdown } from \"../components/Form\";\n//import Button from \"../components/Button\";\nconst VerifyLogin = require(\"../utils/VerifyLogin\");\nconst userID = VerifyLogin.verifyUserObj();\n\nclass FoodGroup extends Component {\n  state = {\n    foodGroupName: \"\",\n    foodGroupList: \"\",\n    pic: null\n  };\n\n  componentDidMount() {\n    this.loadFoodGroupByMasterAndUser(userID);\n  }\n\n  verifyLogin = () => {\n    let userObj = JSON.parse(localStorage.getItem(\"userObj\"));\n    if (userObj === null || userObj.Token === null || userObj.Token === \"\") {\n      //REDIRCT THEM TO LOGIN\n      window.location.href = \"./\";\n    }\n    {\n      this.setState({\n        userID: userObj.Token\n      });\n    }\n  };\n\n  loadFoodGroupByMasterAndUser = userID => {\n    API.getFoodGroupByMasterAndUser(userID)\n      .then(res =>\n        this.setState({\n          foodGroupName: \"\",\n          foodGroupList: res.data\n        })\n      )\n      .catch(err => console.log(err));\n  };\n\n  // deleteFood = id => {\n  //   API.deleteFood(id)\n  //     .then(res => this.loadFood())\n  //     .catch(err => console.log(err));\n  // };\n\n  handleInputChange = event => {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n    if (this.state.foodGroupName) {\n      this.findPic(this.state.foodGroupName);\n      API.saveFoodGroup({\n        foodGroupName: this.state.foodGroupName,\n        userID: userID\n      })\n\n        .then(res => this.loadFoodGroupByMasterAndUser(userID))\n        .catch(err => console.log(err));\n    }\n  };\n\n  findPic = name => {\n    API.getRecipes(name)\n      .then(res => {\n        const ImgRec = res.data.results.filter(recipe =>\n          Boolean(recipe.thumbnail)\n        );\n        this.setState({ pics: ImgRec.length > 0 ? ImgRec[0].thumbnail : null });\n      })\n      .catch(err => console.log(err));\n  };\n\n  render() {\n    return (\n      <Container fluid>\n        <Row>\n          {this.state.foodGroupList.length ? (\n            <div>\n              {/* <ul class=\"list-group list-group-flush\">\n                <ul className=\"list-group list-group-horizontal\"> */}\n              {this.state.foodGroupList.map(foodGroupList => (\n                <div\n                  style={{ border: 2 }}\n                  key={foodGroupList.foodGroupName}\n                  className=\"flex-item\"\n                >\n                  {/* <Link to={\"/food/\" + food._id}></Link> */}\n                  <div>\n                    {foodGroupList.image ? (\n                      <img\n                        className=\"card-img-left\"\n                        style={{ width: 95, height: 95 }}\n                        alt=\"groupImg\"\n                        src={foodGroupList.image}\n                      />\n                    ) : (\n                      <img\n                        className=\"card-img-left\"\n                        style={{ width: 95, height: 95 }}\n                        alt=\"groupImg\"\n                        src={this.state.pics}\n                      />\n                    )}\n                    <h4> {foodGroupList.foodGroupName}</h4>\n                    <br />\n                  </div>\n\n                  {/* <DeleteBtn  /> */}\n                </div>\n              ))}\n              {/* </ul>\n              </ul> */}\n            </div>\n          ) : (\n            <h3>No Results to Display</h3>\n          )}\n        </Row>\n\n        <Row>\n          <Col size=\"md-12\">\n            <form>\n              <Input\n                value={this.state.foodGroupName}\n                onChange={this.handleInputChange}\n                name=\"foodGroupName\"\n                placeholder=\"Food Group Name (required)\"\n              />\n\n              <FormBtn\n                disabled={!this.state.foodGroupName}\n                onClick={this.handleFormSubmit}\n              >\n                Submit Food Group\n              </FormBtn>\n            </form>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default FoodGroup;\n","import React, { Component } from \"react\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport API from \"../utils/API\";\n// import { Link } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../components/Grid\";\n// import { List, ListItem } from \"../components/List\";\nimport { Input, TextArea, FormBtn, Dropdown } from \"../components/Form\";\nimport axios from 'axios';\nimport {\n  setInStorage,\n  getFromStorage,\n} from '../utils/storage';\n\nclass Register extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isLoading: true,\n            token: '',\n            signUpError: '',\n            signUpName: '',\n            signUpEmail: '',\n            signUpPassword: '',\n        };\n\n        this.onTextboxChangeSignUpName = this.onTextboxChangeSignUpName.bind(this);\n        this.onTextboxChangeSignUpEmail = this.onTextboxChangeSignUpEmail.bind(this);\n        this.onTextboxChangeSignUpPassword = this.onTextboxChangeSignUpPassword.bind(this);\n        this.onSignUp = this.onSignUp.bind(this);\n    }\n\n    componentDidMount() {\n        const obj = getFromStorage('the_main_app');\n        if (obj && obj.token) {\n            const { token } = obj;\n            // Verify the token\n            axios.get('/api/account/verify?token=' + token)\n            .then(res => {\n                if (res.success) {\n                    this.setState({\n                        token,\n                        isLoading: false\n                    });\n                } else {\n                    this.setState({\n                        isLoading: false,\n                    });\n                }\n            });\n        } else {\n            this.setState({\n                isLoading: false,\n            });\n        }\n    }\n\n    onTextboxChangeSignUpName(event) {\n        this.setState({\n            signUpName: event.target.value,\n        });\n    }\n    onTextboxChangeSignUpEmail(event) {\n        this.setState({\n            signUpEmail: event.target.value,\n        });\n    }\n    onTextboxChangeSignUpPassword(event) {\n        this.setState({\n            signUpPassword: event.target.value,\n        });\n    }\n\n     onSignUp = (e)=> {\n        e.preventDefault();\n            //Grab state\n    const {\n        signUpName,\n        signUpEmail,\n        signUpPassword,\n      } = this.state;\n  \n      this.setState({\n        isLoading: true,\n      });\n      \n      //Post request to backend\n      axios.post('/api/account/signup', {\n          name: signUpName,\n          email: signUpEmail,\n          password: signUpPassword,\n      }).then(res => {\n          console.log(res);\n          if (res.data.success) {\n            this.setState({\n              signUpError: res.message,\n              isLoading: false,\n              signUpEmail: '',\n              signUpName: '',\n              signUpPassword: '',\n            });\n            //REDIRCT THEM TO LOGIN \n            window.location.href = './'\n          }\n        }).catch(err =>{\n            //TELL THE USER THAT THE EMAIL ALREADY EXISTS \n        });\n    }\n\n    render() {\n        const {\n            isLoading,\n            token,\n            signUpError,\n            signUpName,\n            signUpEmail,\n            signUpPassword,\n        } = this.state;\n\n        return (\n            <Container fluid>\n                <Row>\n                    <Col size=\"md-12\">\n                        <Jumbotron>\n                            <h1>New User Registration</h1>\n                        </Jumbotron>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col size=\"md-4\" />\n                    <Col size=\"md-4\">\n                        <form>\n                            Name \n                            <Input\n                                type=\"text\"\n                                placeholder=\"Name\"\n                                value={signUpName}\n                                onChange={this.onTextboxChangeSignUpName}\n                            />\n                            Email \n                            <Input \n                                type=\"email\"\n                                placeholder=\"Email\"\n                                value={signUpEmail}\n                                onChange={this.onTextboxChangeSignUpEmail}\n                            />\n                            Password \n                            <Input \n                                type=\"password\"\n                                placeholder=\"Password\"\n                                value={signUpPassword}\n                                onChange={this.onTextboxChangeSignUpPassword}\n                            />\n                            <FormBtn\n                                disabled={!(this.state.signUpName && this.state.signUpEmail && this.state.signUpPassword)}\n                                onClick={this.onSignUp}\n                            >\n                                Register\n                            </FormBtn>\n                        </form>\n                    </Col>\n                    <Col size=\"md-4\" />\n                </Row>\n            </Container>\n        );\n    }\n}\n\nexport default Register;","import React, { Component } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Redirect\n} from \"react-router-dom\";\n\nconst VerifyLogin = require(\"./utils/VerifyLogin\");\nconst userID = VerifyLogin.verifyUserObj();\nconsole.log(userID);\n\nclass ProtectedRoute extends Component {\n  render() {\n    const { component: Component, ...props } = this.props;\n\n    return (\n      <Route\n        {...props}\n        render={props =>\n          userID ? <Component {...props} /> : <Redirect to=\"/\" />\n        }\n      />\n    );\n  }\n}\nexport default ProtectedRoute;\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport NoMatch from \"./pages/NoMatch\";\nimport Nav from \"./components/Nav\";\nimport Login from \"./pages/Login\";\nimport Logout from \"./pages/Logout\";\nimport AddFood from \"./pages/AddFood\";\nimport ViewFood from \"./pages/ViewFood\";\nimport ViewSchedule from \"./pages/ViewSchedule\";\nimport AddMeal from \"./pages/AddMeal\";\nimport ViewMeal from \"./pages/ViewMeal\";\nimport ViewDailyPlan from \"./pages/ViewDailyPlan\";\nimport HomeContainer from \"./pages/HomeContainer\";\nimport ViewFoodFavorite from \"./pages/ViewFoodFavorite\";\nimport AddFoodGroup from \"./pages/AddFoodGroup\";\nimport Register from \"./pages/Register\";\nimport ProtectedRoute from \"./ProtectedRoute\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div>\n          <Nav />\n          <Switch>\n            <Route exact path=\"/\" component={Login} />\n\n            <Route exact path=\"/home\" component={HomeContainer} />\n            <Route exact path=\"/Register\" component={Register} />\n            <Route exact path=\"/Logout\" component={Logout} />\n\n            <ProtectedRoute exact path=\"/AddFood\" component={AddFood} />\n            <ProtectedRoute exact path=\"/ViewFood\" component={ViewFood} />\n            <ProtectedRoute\n              exact\n              path=\"/AddFoodGroup\"\n              component={AddFoodGroup}\n            />\n            <ProtectedRoute exact path=\"/AddMeal\" component={AddMeal} />\n            <ProtectedRoute exact path=\"/ViewMeal\" component={ViewMeal} />\n            <ProtectedRoute\n              exact\n              path=\"/ViewDailyPlan\"\n              component={ViewDailyPlan}\n            />\n            <ProtectedRoute\n              exact\n              path=\"/ViewSchedule\"\n              component={ViewSchedule}\n            />\n            <ProtectedRoute\n              exact\n              path=\"/ViewFoodFavorite\"\n              component={ViewFoodFavorite}\n            />\n\n            {/* <Route exact path=\"/foods/:id\" component={Detail} /> */}\n            <Route component={NoMatch} />\n          </Switch>\n        </div>\n      </Router>\n      //   );\n      // }\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\n\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}