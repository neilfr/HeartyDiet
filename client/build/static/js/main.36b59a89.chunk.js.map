{"version":3,"sources":["components/Grid/index.js","components/Jumbotron/index.js","pages/NoMatch.js","components/Form/index.js","utils/storage.js","components/Nav/index.js","utils/API.js","pages/Login.js","pages/Logout.js","pages/AddFood.js","components/Button/index.js","components/List/index.js","components/Card/index.js","pages/FoodPic.js","pages/SearchResults.js","pages/ViewFood.js","components/DeleteBtn/index.js","components/Date/index.js","pages/ViewSchedule.js","pages/AddMeal.js","pages/ViewMeal.js","pages/ViewDailyPlan.js","pages/Books.js","pages/HomeContainer.js","components/CustomCard/index.js","pages/ViewFoodFavorite.js","pages/AddFoodGroup.js","pages/Register.js","App.js","index.js"],"names":["Container","_ref","fluid","children","react_default","a","createElement","className","concat","Row","_ref2","Col","_ref3","size","split","map","join","Jumbotron","NoMatch","components_Jumbotron","role","aria-label","Input","props","Object","assign","Dropdown","label","FormBtn","style","float","marginBottom","getFromStorage","key","valueStr","localStorage","getItem","JSON","parse","err","Nav","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","componentDidMount","setState","user","onLogout","e","preventDefault","obj","token","axios","get","then","res","data","success","removeItem","window","location","href","alert","state","align","name","email","console","log","Link","to","pathname","onClick","userInfoButton","Component","API","getRecipes","query","params","q","getFood","getMeal","removeFoodFromMealByID","mealId","foodId","delete","removeDailyPlanFromScheduleByID","scheduleId","dailyPlanId","updateEnergyPotassiumTotalsForMealByID","totalEnergy","totalPotassium","put","updateEnergyPotassiumTotalsForDailyPlanByID","updateEnergyPotassiumTotalsForScheduleByID","addFoodToMealByID","servingSize","post","addMealToDailyPlanByID","getMealByUser","userID","getDailyPlanByUser","getMealByID","id","getDailyPlanByID","getScheduleByScheduleDate","scheduleDate","getScheduleByUser","deleteMeal","getFoodByFoodGroupName","foodGroupName","getFoodByFoodGroupNameAndUser","getFoodByUser","getFoodGroupByMasterAndUser","getFoodByID","getFoodByFoodName","foodName","deleteFoodByID","updateFoodByID","updatedFood","saveFood","foodData","saveSchedule","scheduleData","updateSchedule","saveFoodGroup","foodGroupData","saveMeal","mealData","saveDailyPlan","dailyPlanData","getUser","getUserByID","getFoodGroup","getFoodGroupByID","Login","onSignIn","_this$state","signInEmail","signInPassword","isLoading","password","signInError","message","error","setItem","stringify","setInStorage","catch","signUpError","signUpName","signUpEmail","signUpPassword","onTextboxChangeSignInEmail","bind","assertThisInitialized","onTextboxChangeSignInPassword","_this2","event","target","value","_this$state2","type","placeholder","onChange","disabled","Logout","Food","energy","potassium","foodGroupList","loadFoodGroupByMasterAndUser","handleInputChange","_event$target","defineProperty","handleFormSubmit","Button","tabIndex","List","Card","width","FoodContainer","FoodPic","_ref$thumbnail","thumbnail","alt","src","SearchResults","display","foodList","pics","efficiency","results","foodSearch","loadFood","loadFoodGroupMasterAndUser","loadFoodByFoodGroupName","deleteFood","saveFoodByUser","food","forEach","element","loadFoodOnSearch","foodItem","FoodID","foodDisplay","color","fontWeight","iconClass","position","bottom","right","class","length","height","image","components_Button","_id","DeleteBtn","Date","moment","require","Schedule","dailyPlanList","scheduleDailyPlanList","scheduleList","currentSchedule","currentDailyPlan","scheduleObject","dailyPlanObject","mealObject","foodObject","scheduleContent","loadSchedule","loadDailyPlan","loadDailyPlanByScheduleDate","scheduleFoodArray","scheduleElement","dailyPlanID","mealList","mealListID","foodListID","push","selectSchedule","schedule","removeFromSchedule","tempScheduleList","addToSchedule","dailyPlan_id","dailyPlanTotalEnergy","dailyPlanTotalPotassium","deleteSchedule","handleInputChangeScheduleDate","format","defaultValue","Fragment","dailyPlan","components_Card","dailyPlanName","Meal","mealName","loadMeals","foods","meal","components_DeleteBtn","foodFavoriteList","currentMeal","loadFoodFavorites","selectMeal","foodListArray","removeFromMeal","foodID","tempFoodList","addToMeal","food_id","textAlign","DailyPlan","dailyPlanMealList","loadMealList","loadDailyPlans","selectDailyPlan","mealListArray","mealID","removeFromDailyPlan","removeMealFromDailyPlanByID","tempMealList","addToDailyPlan","meal_id","deleteDailyPlan","FoodItem","findPic","ImgRec","filter","recipe","Boolean","item","pages_SearchResults","HomeContainer","Books","pages_Login","CustomCard","title","foodGroup","username","FoodFavorite","customize","editFoodID","loadFoodFavorite","confirm","edit","components_CustomCard","fontSize","FoodGroup","pic","border","Register","onSignUp","onTextboxChangeSignUpName","onTextboxChangeSignUpEmail","onTextboxChangeSignUpPassword","App","BrowserRouter","components_Nav","Switch","Route","exact","path","component","AddFood","ViewFood","AddFoodGroup","AddMeal","ViewMeal","ViewDailyPlan","ViewSchedule","ViewFoodFavorite","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.36b59a89.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\"\n\n// Exporting the Container, Row, and Col components from this file\n\n// This Container component allows us to use a bootstrap container without worrying about class names\nexport function Container({ fluid, children }) {\n  return <div className={`container${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\n}\n\n// This Row component lets us use a bootstrap row without having to think about class names\nexport function Row({ fluid, children }) {\n  return <div className={`row${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\n}\n\n// This Col component lets us size bootstrap columns with less syntax\n// e.g. <Col size=\"md-12\"> instead of <div className=\"col-md-12\">\nexport function Col({ size, children }) {\n  return (\n    <div\n      className={size\n        .split(\" \")\n        .map(size => \"col-\" + size)\n        .join(\" \")}\n    >\n      {children}\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Jumbotron({ children }) {\n  return <div className=\"jumbotron\">{children}</div>;\n}\n\nexport default Jumbotron;\n","import React from \"react\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport Jumbotron from \"../components/Jumbotron\";\n\nfunction NoMatch() {\n  return (\n    <Container fluid>\n      <Row>\n        <Col size=\"md-12\">\n          <Jumbotron>\n            <h1>404 Page Not Found</h1>\n            <h1>\n              <span role=\"img\" aria-label=\"Face With Rolling Eyes Emoji\">\n                🙄\n              </span>\n            </h1>\n          </Jumbotron>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default NoMatch;\n","import React from \"react\";\n\n// This file exports the Input, TextArea, and FormBtn components\n\nexport function Input(props) {\n  return (\n    <div className=\"form-group\">\n      <input className=\"form-control\" {...props} />\n    </div>\n  );\n}\n\nexport function Dropdown(props) {\n  return (\n    <div className=\"form-group\">\n      <label>\n        {props.label}\n        <select {...props} className=\"form-control\">\n          {props.children}\n          {/* <option value=\"grapefruit\">Grapefruit</option>\n          <option value=\"lime\">Lime</option>\n          <option value=\"coconut\">Coconut</option>\n          <option value=\"mango\">Mango</option> */}\n        </select>\n      </label>\n    </div>\n  );\n}\n\nexport function TextArea(props) {\n  return (\n    <div className=\"form-group\">\n      <textarea className=\"form-control\" rows=\"20\" {...props} />\n    </div>\n  );\n}\n\nexport function FormBtn(props) {\n  return (\n    <button\n      {...props}\n      style={{ float: \"right\", marginBottom: 10 }}\n\n    >\n      {props.children}\n    </button>\n  );\n}\n","export function getFromStorage(key) {\n    if(!key) {\n        return null;\n    }\n    \n    try {\n        const valueStr = localStorage.getItem(key);\n        if (valueStr) {\n            return JSON.parse(valueStr);\n        }\n        return null;\n    } catch (err) {\n        return null;\n    }\n}\n\nexport function setInStorage(key, obj) {\n    if (!key) {\n        console.error('Error: Key is missing!');\n    }\n\n    try {\n        localStorage.setItem(key, JSON.stringify(obj));\n    } catch (err) {\n        console.error(err);\n    }\n}\n\nexport function deleteFromStorage(key) {\n    localStorage.removeItem(key);\n}","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { FormBtn } from \"../Form\";\nimport { getFromStorage, deleteFromStorage } from \"../../utils/storage\";\nimport axios from \"axios\";\n\nclass Nav extends Component {\n  constructor() {\n    super();\n    this.state = {\n      user: {}\n    };\n  }\n\n  componentDidMount = () => {\n    this.setState({ user: JSON.parse(localStorage.getItem(\"userObj\")) });\n  };\n\n  userInfoButton() {\n    return (\n      <span className=\"navbar-text\" align=\"right\">\n        Welcome:{\" \"}\n        <a href=\"/\">{this.state.user.name + \": \" + this.state.user.email}</a>\n      </span>\n    );\n  }\n\n  onLogout = e => {\n    e.preventDefault();\n    const obj = getFromStorage(\"userObj\");\n    if (obj && obj.token) {\n      const { token } = obj;\n      // Verify the token\n      axios.get(\"/api/account/logout?token=\" + token).then(res => {\n        if (res.data.success) {\n          this.setState({\n            user: \"\"\n          });\n          deleteFromStorage(\"userObj\");\n          window.location.href = \"/\";\n        } else {\n          alert(\"Logout Error.\");\n        }\n      });\n    } else {\n      alert(\"No user logged in.\");\n    }\n  };\n\n  render() {\n    console.log(this.state.user);\n\n    return (\n      <nav className=\"navbar navbar-expand-lg navbar-dark #ef5350 red lighten-1\">\n        <a className=\"navbar-brand\" href=\"#\">\n          Hearty Diet\n        </a>\n        {/* <button\n          className=\"navbar-toggler\"\n          type=\"button\"\n          data-toggle=\"collapse\"\n          data-target=\"#navbarNav\"\n          aria-controls=\"navbarNav\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span className=\"navbar-toggler-icon\" />\n        </button> */}\n        {/* <div className=\"collapse navbar-collapse\" id=\"navbarNav\"> */}\n        <ul className=\"nav\">\n          <li className=\"nav-item m-2\">\n            <Link\n              to=\"/\"\n              className={\n                window.location.pathname === \"/\"\n                  ? \"text-white white-darker-hover font-weight-bold\"\n                  : \"text-dark\"\n              }\n            >\n              Home\n            </Link>\n          </li>\n          <li className=\"nav-item m-2\">\n            <Link\n              to=\"/AddFood\"\n              className={\n                window.location.pathname === \"/AddFood\"\n                  ? \"text-white white-darker-hover font-weight-bold\"\n                  : \"text-dark\"\n              }\n            >\n              Add Food\n            </Link>\n          </li>\n          <li className=\"nav-item m-2\">\n            <Link\n              to=\"/ViewFood\"\n              className={\n                window.location.pathname === \"/ViewFood\"\n                  ? \"text-white white-darker-hover font-weight-bold\"\n                  : \"text-dark grey-lighter-hover\"\n              }\n            >\n              View Food\n            </Link>\n          </li>\n          <li className=\"nav-item m-2\">\n            <Link\n              to=\"/AddFoodGroup\"\n              className={\n                window.location.pathname === \"/AddFoodGroup\"\n                  ? \"text-white white-darker-hover font-weight-bold\"\n                  : \"text-dark\"\n              }\n            >\n              Add Food Group\n            </Link>\n          </li>\n\n          <li className=\"nav-item m-2\">\n            <Link\n              to=\"/ViewMeal\"\n              className={\n                window.location.pathname === \"/ViewMeal\"\n                  ? \"text-white white-darker-hover font-weight-bold\"\n                  : \"text-dark\"\n              }\n            >\n              View Meal\n            </Link>\n          </li>\n\n          <li className=\"nav-item m-2\">\n            <Link\n              to=\"/ViewDailyPlan\"\n              className={\n                window.location.pathname === \"/ViewDailyPlan\"\n                  ? \"text-white white-darker-hover font-weight-bold\"\n                  : \"text-dark\"\n              }\n            >\n              View Daily Plan\n            </Link>\n          </li>\n\n          <li className=\"nav-item m-2\">\n            <Link\n              to=\"/ViewSchedule\"\n              className={\n                window.location.pathname === \"/ViewSchedule\"\n                  ? \"text-white white-darker-hover font-weight-bold\"\n                  : \"text-dark\"\n              }\n            >\n              View Schedule\n            </Link>\n          </li>\n          <li className=\"nav-item m-2\">\n            <Link\n              to=\"/ViewFoodFavorite\"\n              className={\n                window.location.pathname === \"/ViewFoodFavorite\"\n                  ? \"text-white white-darker-hover font-weight-bold\"\n                  : \"text-dark\"\n              }\n            >\n              View Favorite Foods\n            </Link>\n          </li>\n          <li className=\"nav-item m-2\">\n            <a href=\"#\" onClick={this.onLogout}>\n              Logout\n            </a>\n          </li>\n          {/* <li className=\"nav-item m-2\">\n              <a className=\"text-dark disabled\" href=\"#\">\n                Disabled\n              </Link>\n            </li> */}\n        </ul>\n        {/* </div> */}\n\n        {this.state.user ? this.userInfoButton() : \"\"}\n      </nav>\n    );\n  }\n}\n\nexport default Nav;\n","import axios from \"axios\";\n\nexport default {\n  //To get the picture from recipes API\n\n  getRecipes: function(query) {\n    return axios.get(\n      \"https://cors.io/?http://www.recipepuppy.com/api/?q=\" +\n        { params: { q: query } }\n    );\n  },\n  // Gets all foods\n  getFood: function() {\n    return axios.get(\"/api/food\");\n  },\n  getMeal: function() {\n    return axios.get(\"/api/meal\");\n  },\n\n  //! this is the new one ignored this in merge conflict\n  //   updateMealByID: function (id, updatedMeal) {\n  //     return axios.put(\"/api/meal/\" + id, updatedMeal);\n  //   },\n  //   getMealByUser: function (userID) {\n  removeFoodFromMealByID: function(mealId, foodId) {\n    console.log(\"inside client api removeFoodFromMealById\");\n    console.log(\"mealId is:\", mealId); //this is right\n    console.log(\"foodId is:\", foodId); // this is correct\n    return axios.delete(\"/api/meal/food/\" + mealId + \"/\" + foodId);\n  },\n\n  removeDailyPlanFromScheduleByID: function(scheduleId, dailyPlanId) {\n    return axios.delete(\n      \"/api/schedule/dailyPlan/\" + scheduleId + \"/\" + dailyPlanId\n    );\n  },\n\n  //! new stuff\n  updateEnergyPotassiumTotalsForMealByID: function(\n    mealId,\n    totalEnergy,\n    totalPotassium\n  ) {\n    console.log(\"mealId is:\", mealId);\n    console.log(\"totalEnergy is:\", totalEnergy);\n    console.log(\"totalPotassium is:\", totalPotassium);\n    return axios.put(\"/api/meal/KCalTotals/\" + mealId, {\n      totalEnergy: totalEnergy,\n      totalPotassium: totalPotassium\n    });\n  },\n\n  updateEnergyPotassiumTotalsForDailyPlanByID: function(\n    dailyPlanId,\n    totalEnergy,\n    totalPotassium\n  ) {\n    console.log(\"dailyPlanId is:\", dailyPlanId);\n    console.log(\"totalEnergy is:\", totalEnergy);\n    console.log(\"totalPotassium is:\", totalPotassium);\n    return axios.put(\"/api/dailyPlan/KCalTotals/\" + dailyPlanId, {\n      totalEnergy: totalEnergy,\n      totalPotassium: totalPotassium\n    });\n  },\n\n  updateEnergyPotassiumTotalsForScheduleByID: function(\n    scheduleId,\n    totalEnergy,\n    totalPotassium\n  ) {\n    console.log(\"scheduleId is:\", scheduleId);\n    console.log(\"totalEnergy is:\", totalEnergy);\n    console.log(\"totalPotassium is:\", totalPotassium);\n    return axios.put(\"/api/schedule/KCalTotals/\" + scheduleId, {\n      totalEnergy: totalEnergy,\n      totalPotassium: totalPotassium\n    });\n  },\n\n  addFoodToMealByID: function(mealId, foodId, servingSize) {\n    console.log(\"in addFoodToMealByID\");\n    console.log(\"mealId is:\", mealId);\n    console.log(\"foodId is:\", foodId);\n    console.log(\"servingSize is:\", servingSize);\n    return axios.post(\"/api/meal/food/\" + mealId + \"/\" + foodId, {\n      servingSize: servingSize\n    });\n  },\n\n  addMealToDailyPlanByID: function(dailyPlanId, mealId) {\n    return axios.post(\"/api/dailyPlan/meal/\" + dailyPlanId + \"/\" + mealId);\n  },\n\n  // addDailyPlanToScheduleByDate: function(scheduleData) {\n  //   return axios.post(\"/api/schedule\" + scheduleData);\n  // },\n\n  getMealByUser: function(userID) {\n    console.log(\n      \"I'm inside getMealByUser in the API... looking for meals for:\",\n      userID\n    );\n    return axios.get(\"/api/meal/mealByUser/\" + userID);\n  },\n\n  getDailyPlanByUser: function(userID) {\n    return axios.get(\"/api/dailyPlan/dailyPlanByUser/\" + userID);\n  },\n\n  getMealByID: function(id) {\n    return axios.get(\"/api/meal/mealByID/\" + id);\n  },\n\n  getDailyPlanByID: function(id) {\n    return axios.get(\"/api/dailyPlan/\" + id);\n  },\n\n  getScheduleByScheduleDate: function(scheduleDate) {\n    return axios.get(\"/api/schedule/dailyPlanByScheduleDate/\" + scheduleDate);\n  },\n\n  getScheduleByUser: function(userID) {\n    return axios.get(\"/api/schedule/scheduleByUser/\" + userID);\n  },\n\n  deleteMeal: function(id) {\n    return axios.delete(\"/api/meal/\" + id);\n  },\n  getFoodByFoodGroupName: function(foodGroupName) {\n    return axios.get(\"/api/food/foodByFoodGroupName/\" + foodGroupName);\n  },\n  getFoodByFoodGroupNameAndUser: function(foodGroupName, userID) {\n    return axios.get(\n      \"/api/food/foodByFoodGroupNameAndUser/\" + foodGroupName + \"/\" + userID\n    );\n  },\n  getFoodByUser: function(userID) {\n    return axios.get(\"/api/food/foodByUser/\" + userID);\n  },\n  getFoodGroupByMasterAndUser: function(userID) {\n    return axios.get(\"/api/foodgroup/foodGroupByMasterAndUser/\" + userID);\n  },\n  // Gets the food with the given id\n  getFoodByID: function(id) {\n    return axios.get(\"/api/food/foodByID/\" + id);\n  },\n  getFoodByFoodName: function(foodName) {\n    return axios.get(\"/api/food/foodByFoodName/\" + foodName);\n  },\n  // Deletes the food with the given id\n\n  deleteFoodByID: function(id) {\n    return axios.delete(\"/api/food/foodByID/\" + id);\n  },\n  // Update the food with the given id\n\n  updateFoodByID: function(id, updatedFood) {\n    return axios.put(\"/api/food/foodByID/\" + id, updatedFood);\n  },\n\n  // Saves a food to the database\n  saveFood: function(foodData) {\n    return axios.post(\"/api/food\", foodData);\n  },\n  saveSchedule: function(scheduleData) {\n    return axios.post(\"/api/schedule\", scheduleData);\n  },\n  updateSchedule: function(scheduleData) {\n    return axios.put(\"/api/schedule\", scheduleData);\n  },\n  saveFoodGroup: function(foodGroupData) {\n    return axios.post(\"/api/foodGroup\", foodGroupData);\n  },\n  saveMeal: function(mealData) {\n    return axios.post(\"/api/meal\", mealData);\n  },\n  saveDailyPlan: function(dailyPlanData) {\n    return axios.post(\"/api/dailyPlan\", dailyPlanData);\n  },\n  getUser: function() {\n    return axios.get(\"/api/user\");\n  },\n  getUserByID: function(id) {\n    return axios.get(\"/api/user/userByID/\" + id);\n  },\n  getFoodGroup: function() {\n    return axios.get(\"/api/foodgroup\");\n  },\n  // Gets the food with the given id\n  getFoodGroupByID: function(id) {\n    return axios.get(\"/api/foodgroup/foodGroupByID/\" + id);\n  }\n};\n","import React, { Component } from \"react\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport API from \"../utils/API\";\n// import { Link } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../components/Grid\";\n// import { List, ListItem } from \"../components/List\";\nimport { Input, TextArea, FormBtn, Dropdown } from \"../components/Form\";\nimport axios from 'axios';\nimport {\n  setInStorage,\n  getFromStorage,\n} from '../utils/storage';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Link,\n  Switch\n} from 'react-router-dom'\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n\n      this.state = {\n        isLoading: true,\n        token: '',\n        signUpError: '',\n        signInError: '',\n        signInEmail: '',\n        signInPassword: '',\n        signUpName: '',\n        signUpEmail: '',\n        signUpPassword: '',\n        user: ''\n      };\n\n      this.onTextboxChangeSignInEmail = this.onTextboxChangeSignInEmail.bind(this);\n      this.onTextboxChangeSignInPassword = this.onTextboxChangeSignInPassword.bind(this);\n      this.onSignIn = this.onSignIn.bind(this);\n    }\n\n    componentDidMount() {\n      const obj = getFromStorage('userObj');\n      if (obj && obj.token) {\n        const { token } = obj;\n        // Verify the token\n        axios.get('/api/account/verify?token=' + token)\n        .then(res => {\n          if (res.success) {\n            this.setState({\n              isLoading: false\n            });\n          } else {\n            this.setState({\n              isLoading: false,\n            });\n          }\n        });\n      } else {\n        this.setState({\n          isLoading: false,\n        });\n      }\n    }\n\n    onTextboxChangeSignInEmail(event) {\n      this.setState({\n        signInEmail: event.target.value,\n      });\n    }\n    onTextboxChangeSignInPassword(event) {\n      this.setState({\n        signInPassword: event.target.value,\n      });\n    }\n  \n    onSignIn = e => {\n      e.preventDefault();\n      //Grab the state\n      const {\n        signInEmail,\n        signInPassword,\n      } = this.state;\n  \n\n      this.setState({\n        isLoading: true,\n      });\n  \n      //Post request to backend\n      axios.post('/api/account/signin', {\n          email: signInEmail,\n          password: signInPassword,\n      }).then(res => {\n        console.log(res.data);\n          if (res.data.success) {\n            // setInStorage('userObj', { token: res.data.token });\n            this.setState({\n              signInError: res.message,\n              isLoading: false,\n              signInEmail: '',\n              signInPassword: '',\n              token: res.data.token,\n              user: res.data.user,\n            });\n\n            res.data.user.token = res.data.token;\n\n            setInStorage(\"userObj\", (res.data.user));\n            // REDIRECT TO FOOD HOMEPAGE\n            window.location.href = '/AddFood'\n          }\n        }).catch(err => {\n\n        });\n    }\n\n\n\n    render() {\n      const {\n        isLoading,\n        token,\n        signInError,\n        signInEmail,\n        signInPassword,\n      } = this.state;\n\n\n    return (\n      <Container fluid>\n        <Row>\n          <Col size=\"md-12\">\n            <Jumbotron>\n              <h1>Please Login to plan your Hearty Diet.</h1>\n            </Jumbotron>\n          </Col>\n        </Row>\n        <Row>\n          <Col size=\"md-4\" />\n          <Col size=\"md-4\">\n            <form>\n              Email\n              <Input\n                type=\"email\"\n                placeholder=\"Email\"\n                value={signInEmail}\n                onChange={this.onTextboxChangeSignInEmail}\n              />\n              Password\n              <Input\n                type=\"password\"\n                placeholder=\"Password\"\n                value={signInPassword}\n                onChange={this.onTextboxChangeSignInPassword}\n              />\n              <FormBtn\n                disabled={!(this.state.signInEmail && this.state.signInPassword)}\n                onClick={this.onSignIn}\n              >\n                Login\n              </FormBtn>\n              <br />\n              <Link to=\"/register\">Register New User</Link>\n            </form>\n          </Col>\n          <Col size=\"md-4\" />\n        </Row>\n      </Container>\n    );\n  }\n}\n\n\nexport default Login;\n\n\n  // state = {\n  //   userID: \"\",\n  //   password: \"\"\n  // };\n\n  // handleInputChange = event => {\n  //   const { name, value } = event.target;\n  //   this.setState({\n  //     [name]: value\n  //   });\n  // };\n\n  // handleFormSubmit = event => {\n  //   event.preventDefault();\n  //   if (this.state.userID && this.state.password) {\n  //     // API.login({\n  //     //   userID: this.state.userID,\n  //     //  password: this.state.passowrd,\n  //     // })\n  //     //   .then(\n  //     //     res => this.loadFood()\n  //     //   )\n  //     //   .catch(err => console.log(err));\n  //   }\n  // };\n\n  // render() {\n  //   return (\n  //     <Container fluid>\n  //       <Row>\n  //         <Col size=\"md-12\">\n  //           <Jumbotron>\n  //             <h1>Login / Landing Page - Login is not actually working</h1>\n  //           </Jumbotron>\n  //         </Col>\n  //       </Row>\n  //       <Row>\n  //         <Col size=\"md-4\" />\n  //         <Col size=\"md-4\">\n  //           <form>\n  //             UserName\n  //             <Input\n  //               value={this.state.userID}\n  //               onChange={this.handleInputChange}\n  //               name=\"userID\"\n  //               placeholder=\"\"\n  //             />\n  //             Password\n  //             <Input\n  //               value={this.state.password}\n  //               onChange={this.handleInputChange}\n  //               name=\"passoword\"\n  //               placeholder=\"\"\n  //             />\n  //             <FormBtn\n  //               disabled={!(this.state.userID && this.state.password)}\n  //               onClick={this.handleFormSubmit}\n  //             >\n  //               Login\n  //             </FormBtn>\n  //           </form>\n  //         </Col>\n  //         <Col size=\"md-4\" />\n  //       </Row>\n  //     </Container>\n  //   );\n  // }","import React, { Component } from \"react\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport API from \"../utils/API\";\n// import { Link } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../components/Grid\";\n// import { List, ListItem } from \"../components/List\";\nimport { Input, TextArea, FormBtn, Dropdown } from \"../components/Form\";\nimport axios from 'axios';\nimport {\n  setInStorage,\n  getFromStorage,\n} from '../utils/storage';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Link,\n  Switch\n} from 'react-router-dom'\n\n\nclass Logout extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isLoading: true,\n            token: '',\n            signUpError: '',\n            signInError: '',\n            signInEmail: '',\n            signInPassword: '',\n            signUpName: '',\n            signUpEmail: '',\n            signUpPassword: '',\n            user: ''\n          };\n\n          this.onLogout = this.onLogout.bind(this);\n    }\n\n    componentDidMount() {\n        const obj = getFromStorage('the_main_app');\n        if (obj && obj.token) {\n          const { token } = obj;\n          // Verify the token\n          axios.get('/api/account/verify?token=' + token)\n          .then(res => {\n            if (res.data.success) {\n              this.setState({\n                token,\n                isLoading: false\n              });\n            } else {\n              this.setState({\n                isLoading: false,\n              });\n            }\n          });\n        } else {\n          this.setState({\n            isLoading: false,\n          });\n        }\n      }\n\n\n      onLogout = e => {\n        e.preventDefault();\n        this.setState({\n          isLoading: true,\n        });\n        const obj = getFromStorage('the_main_app');\n        if (obj && obj.token) {\n          const { token } = obj;\n          // Verify the token\n          axios.get('/api/account/logout?token=' + token)\n          .then(res => {\n            if (res.data.success) {\n              this.setState({\n                token: '',\n                isLoading: false\n              });\n            } else {\n              this.setState({\n                isLoading: false,\n              });\n            }\n          });\n        } else {\n          this.setState({\n            isLoading: false,\n          });\n          window.location.href= './'\n        }\n      }\n\n}\n\nexport default Logout;\n\n\n\n","import React, { Component } from \"react\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport API from \"../utils/API\";\n// import { Link } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../components/Grid\";\n// import { List, ListItem } from \"../components/List\";\nimport { Input, TextArea, FormBtn, Dropdown } from \"../components/Form\";\n\nclass Food extends Component {\n  state = {\n    foodName: \"\",\n    foodGroupName: \"\",\n    energy: \"\",\n    potassium: \"\",\n    foodGroupList: []\n  };\n\n  componentDidMount() {\n    this.loadFoodGroupByMasterAndUser(\"JohnSmith\");\n  }\n\n  loadFoodGroupByMasterAndUser = userID => {\n    API.getFoodGroupByMasterAndUser(userID)\n      .then(res =>\n        this.setState({\n          foodGroupList: res.data\n        })\n      )\n      .catch(err => console.log(err));\n  };\n\n  // deleteFood = id => {\n  //   API.deleteFood(id)\n  //     .then(res => this.loadFood())\n  //     .catch(err => console.log(err));\n  // };\n\n  handleInputChange = event => {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n    if (\n      this.state.foodName &&\n      this.state.foodGroupName &&\n      this.state.energy &&\n      this.state.potassium\n    ) {\n      API.saveFood({\n        foodName: this.state.foodName,\n        foodGroupName: this.state.foodGroupName,\n        energy: this.state.energy,\n        potassium: this.state.potassium,\n        userID: \"JohnSmith\"\n      })\n        .then(\n          this.setState({\n            foodName: \"\",\n            foodGroupName: \"\",\n            energy: \"\",\n            potassium: \"\"\n          })\n        )\n        .catch(err => console.log(err));\n    }\n  };\n\n  render() {\n    return (\n      <Container fluid>\n        <Row>\n          <Col size=\"md-12\">\n            <Jumbotron>\n              <h1>Add Custom Food</h1>\n            </Jumbotron>\n            <form>\n              <Input\n                value={this.state.foodName}\n                onChange={this.handleInputChange}\n                name=\"foodName\"\n                placeholder=\"Food Name (required)\"\n              />\n\n              <Dropdown\n                name=\"foodGroupName\"\n                onChange={this.handleInputChange}\n                label=\"Food Group\"\n                value={this.state.foodGroupName}\n              >\n                {this.state.foodGroupList.map(foodGroupList => (\n                  <option value={foodGroupList.foodGroupName}>\n                    {foodGroupList.foodGroupName}\n                  </option>\n                ))}\n              </Dropdown>\n              <Input\n                value={this.state.energy}\n                onChange={this.handleInputChange}\n                name=\"energy\"\n                placeholder=\"Energy (required)\"\n              />\n              <Input\n                value={this.state.potassium}\n                onChange={this.handleInputChange}\n                name=\"potassium\"\n                placeholder=\"Potassium (required)\"\n              />\n              {/* <TextArea\n                value={this.state.synopsis}\n                onChange={this.handleInputChange}\n                name=\"synopsis\"\n                placeholder=\"Synopsis (Optional)\"\n              /> */}\n              <FormBtn\n                disabled={\n                  !(\n                    this.state.foodName &&\n                    this.state.foodGroupName &&\n                    this.state.energy &&\n                    this.state.potassium\n                  )\n                }\n                onClick={this.handleFormSubmit}\n              >\n                Submit Food\n              </FormBtn>\n            </form>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default Food;\n","import React from \"react\";\nimport \"./style.css\";\n\n// The ...props means, spread all of the passed props onto this element\n// That way we don't have to define them all individually\nfunction Button(props) {\n  return (\n    <span {...props} type=\"button\" role=\"button\" tabIndex=\"0\">\n      {props.children}\n    </span>\n  );\n}\n\nexport default Button;","import React from \"react\";\nimport \"./style.css\";\n\n// This file exports both the List and ListItem components\n\nexport function List({ children }) {\n  return (\n    <div className=\"list-overflow-container\">\n      <ul className=\"list-group\">{children}</ul>\n    </div>\n  );\n}\n\nexport function ListItem({ children }) {\n  return <li className=\"list-group-item\">{children}</li>;\n}\n","import React from \"react\";\n\nfunction Card({ children }) {\n  return (\n    <div style={{ width: \"18rem\" }} className=\"card\">\n      <div className=\"card-body\">\n        <div className=\"card-title\">\n          <div className=\"card-subtitle mb-2 text-muted\">\n            <div className=\"card-text\">\n              {/* <a href=\"#\" class=\"card-link\">Card link</a> */}\n\n              {children}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Card;","import React from \"react\";\n\nexport function FoodContainer(props) {\n    return <div>{props.children}</div>;\n}\n\nexport function FoodPic({ thumbnail = \"https://placehold.it/300x300\" }) {\n    return (\n        <div>\n            <img alt=\"foodPic\" src={thumbnail} />\n        </div>\n    )\n}\n\n","import React from \"react\";\n// import \"./style.css\";\n\nfunction SearchResults(props) {\n    return (\n        <div style={{ display: 'inline-blocks' }}>\n            <p>{props.foodName}</p>\n            <p>Potassium Content:{props.potassium}gm</p>\n        </div>\n\n    );\n}\n\nexport default SearchResults;\n","import React, { Component } from \"react\";\nimport Button from \"../components/Button\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport API from \"../utils/API\";\nimport { Link } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { List, ListItem } from \"../components/List\";\nimport { Input, TextArea, FormBtn } from \"../components/Form\";\nimport Card from \"../components/Card\";\nimport { FoodPic, FoodContainer } from \"./FoodPic\";\nimport \"./viewFoodStyle.css\";\nimport SearchResults from \"./SearchResults\";\nimport 'font-awesome/css/font-awesome.min.css'\n//import { MDBMask, MDBView, MDBContainer, MDBRow, MDBCol } from \"mdbreact\";\n\n\n\nclass Food extends Component {\n  state = {\n    foodList: [],\n    foodGroupList: [],\n    foodName: \"\",\n    foodGroupName: \"\",\n    energy: \"\",\n    potassium: \"\",\n    pics: null,\n    efficiency: \"\",\n    results: [],\n    foodSearch: \"\",\n  };\n\n  componentDidMount() {\n    this.loadFoodGroupMasterAndUser(\"master\");\n  }\n\n  loadFood = () => {\n    API.getFood()\n      .then(res =>\n        this.setState({\n          foodList: res.data,\n          foodName: \"\",\n          foodGroupName: \"\",\n          energy: \"\",\n          potassium: \"\",\n          efficiency: \"\"\n        })\n      )\n      .catch(err => console.log(err));\n  };\n\n\n  loadFoodGroupMasterAndUser = userID => {\n    API.getFoodGroupByMasterAndUser(userID)\n      .then(res =>\n        this.setState({\n          foodList: [],\n          foodGroupList: res.data,\n          foodName: \"\",\n          foodGroupName: \"\",\n          energy: \"\",\n          potassium: \"\",\n          efficiency: \"\"\n        })\n      )\n      .catch(err => console.log(err));\n  };\n\n  loadFoodByFoodGroupName = foodGroupName => {\n    // this.findPic(foodGroupName)\n    // this.setState((state, props) => {\n    //   return { thumbnail: state.pics }\n    // })\n    console.log(this.state.thumbnail)\n    API.getFoodByFoodGroupName(foodGroupName)\n      .then(res =>\n        this.setState({\n          foodList: res.data,\n          foodName: \"\",\n          foodGroupName: \"\",\n          energy: \"\",\n          potassium: \"\",\n          efficiency: \"\"\n        })\n      )\n      .catch(err => console.log(err));\n  };\n\n  deleteFood = id => {\n    API.deleteFood(id)\n      .then(res => this.loadFood())\n      .catch(err => console.log(err));\n  };\n\n  saveFoodByUser = id => {\n    API.getFoodByID(id)\n\n      .then(res => {\n        console.log(res);\n        API.saveFood(\n          res.data.map(food => ({\n            foodName: food.foodName,\n            foodGroupName: food.foodGroupName,\n            energy: food.energy,\n            potassium: food.potassium,\n            userID: \"JohnSmith\"\n          }))\n        )\n          .then(\n            res.data.forEach(function (element) {\n              alert(element.foodName + \" saved as favorite food\");\n            })\n          )\n          .catch(err => console.log(err));\n      })\n      .catch(err => console.log(err));\n  };\n\n  // loading foodList specific to food group on button click\n  // loadFoodCards = (GroupName) => {\n  //   this.state.foodGroupList.map(group => {\n  //     if (group.foodGroupName == GroupName) {\n  //       this.loadFoodByFoodGroupName(GroupName)\n  //       console.log(GroupName, this.state.foodList, this.state.pics)\n  //     }\n  //   })\n  // }\n  //for search bar\n  loadFoodOnSearch = (id) => {\n    console.log(this.state.foodList)\n    this.state.foodList.map(foodItem => {\n      if (foodItem.FoodID === id) {\n        console.log(foodItem)\n        this.setState({ results: foodItem })\n        console.log(this.state.results)\n      }\n    })\n  }\n\n  handleInputChange = event => {\n    this.setState({ foodSearch: event.target.value });\n\n  };\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n    console.log(\"something\")\n    console.log(this.state.foodSearch)\n    console.log(this.state.foodList)\n\n    API.getFoodByFoodName(this.state.foodSearch)\n      .then(res =>\n        this.setState({\n          // results: res\n          foodList: res.data\n        })\n      )\n      .catch(err => console.log(err));\n  };\n\n  render() {\n    var foodDisplay = {\n      color: '#1e90ff',\n      fontWeight: 'bold'\n    };\n    var iconClass = {\n      position: 'absolute',\n      bottom: 0,\n      right: 6\n    };\n\n    return (\n      <Container fluid>\n        <Row>\n          <div className=\"col-6 search-bar offset-6\" >\n            <div class=\"input-group mt-3 form-sm form-2 pl-0\">\n              <input class=\"form-control my-0 py-1 red-border\" type=\"text\" placeholder=\"Enter Food Name\" aria-label=\"Search\"\n                value={this.state.foodSearch}\n                onChange={this.handleInputChange}\n                name=\"foodSearch\"\n              />\n              <div class=\"input-group-append\">\n                {/* <span class=\"input-group-text red lighten-3\" id=\"basic-text1\"><i class=\"fa fa-search\" aria-hidden=\"true\"></i></span> */}\n                <button\n                  className=\"input-group-text red lighten-3\"\n                  onClick={this.handleFormSubmit}><i className=\" fa fa-search\"></i>\n                </button>\n              </div>\n            </div>\n\n            {/* <form>\n              <Input\n                value={this.state.foodSearch}\n                onChange={this.handleInputChange}\n                name=\"foodSearch\"\n                placeholder=\"Enter Food Name\"\n              />\n              <button\n                onClick={this.handleFormSubmit}><i className=\"fa fa-search\"></i>\n              </button>\n            </form> */}\n          </div>\n          {/* <SearchResults\n            foodName={this.state.results.foodName}\n            potassium={this.state.results.potassium}\n          /> */}\n        </Row>\n        <div className=\"container\">\n          <h4>Browse Common Foods</h4>\n          <hr />\n          <Row>\n            {this.state.foodGroupList.length ? (\n              this.state.foodGroupList.map(foodGroupList => (\n                <Col size=\"lg-4\">\n                  <Container >\n                    <div className=\"holder container card\"\n                      onClick={() =>\n                        this.loadFoodByFoodGroupName(foodGroupList.foodGroupName)\n                      }>\n                      {/* {console.log(foodGroupList.image)} */}\n                      {/* <div className=\"card\" style={{ width: 35 }}> */}\n                      <div className=\"row p-2 pt-3\">\n                        <div className=\"col-4 view overlay zoom\">\n                          <img className=\"card-img-left\" style={{ width: 95, height: 95 }} alt=\"foodPic\" src={foodGroupList.image} />\n                          {/* <Col size=\"md-6\" className=\"card-body\"> */}\n                        </div>\n                        <div className=\"col-6 offset-1\">\n                          <button\n                            key={foodGroupList.foodGroupName}\n                            className=\"custom-btn text-center\">\n                            {/* <Link to={\"/food/\" + food._id}></Link> */}\n                            <strong>\n                              <p className=\"card-title\"> {foodGroupList.foodGroupName} </p>\n                            </strong>\n                          </button>\n                        </div>\n\n                      </div>\n                      <div style={iconClass} className=\"moreIcon\">\n                        <p style={{ color: 'blue' }}>more</p>\n                      </div>\n                    </div>\n                  </Container>\n                </Col>\n              ))\n            ) : (\n                <h3>No Results to Display1</h3>\n              )}\n            {/* </Col> */}\n          </Row>\n        </div>\n        <Row>\n          {this.state.foodList.length ? (\n            this.state.foodList.map(foodList => (\n              <Col size=\"md-6\">\n                <Button\n                  key={foodList._id}\n                  onClick={() => this.saveFoodByUser(foodList._id, \"\")}\n                  className=\"btn btn-light btn-lg text-left designed p-5\"\n                >\n                  <div className=\"card-content\">\n                    <strong>\n                      <h5 style={foodDisplay}>{foodList.foodName}</h5><br />\n                      Food Group: {foodList.foodGroupName} <br />\n                      Energy: {foodList.energy}kCal <br />\n                      Potassium: {foodList.potassium}gm <br />\n                      Efficiency: {foodList.efficiency} <br />\n                      Username: {foodList.userID} <br />\n                    </strong>\n                  </div>\n                  <div className=\"text-right\">\n                    <i className=\"fa fa-gratipay\"></i><br />\n                    <p className=\"add-fav\">Add to favorites</p>\n                  </div>\n                </Button>\n              </Col>\n\n            ))\n          ) : (\n              <h3>No Results to Display</h3>\n            )}\n        </Row>\n      </Container >\n    );\n  }\n}\n\nexport default Food;\n","import React from \"react\";\nimport \"./style.css\";\n\n// The ...props means, spread all of the passed props onto this element\n// That way we don't have to define them all individually\nfunction DeleteBtn(props) {\n  return (\n    <span className=\"delete-btn\" {...props} role=\"button\" tabIndex=\"0\">\n      ✗\n    </span>\n  );\n}\n\nexport default DeleteBtn;\n","import React from \"react\";\nimport \"./style.css\";\n\n// The ...props means, spread all of the passed props onto this element\n// That way we don't have to define them all individually\nfunction Date(props) {\n  return (\n    <div className=\"form-group\">\n      <input {...props} type=\"date\" />\n    </div>\n  );\n}\n\nexport default Date;\n","import React, { Component } from \"react\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport API from \"../utils/API\";\nimport { Link } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { List, ListItem } from \"../components/List\";\nimport { Input, TextArea, FormBtn } from \"../components/Form\";\nimport Card from \"../components/Card\";\nimport DeleteBtn from \"../components/DeleteBtn\";\nimport AddBtn from \"../components/AddBtn\";\nimport Button from \"../components/Button\";\n//import Calendar from \"../components/Calendar\";\nimport Date from \"../components/Date\";\nvar moment = require(\"moment\");\n\nclass Schedule extends Component {\n  state = {\n    scheduleDate: \"\",\n    dailyPlanList: [],\n    scheduleDailyPlanList: [],\n    scheduleList: null,\n    currentSchedule: [],\n    totalEnergy: null,\n    totalPotassium: null,\n    currentDailyPlan: [],\n    scheduleObject: [],\n    dailyPlanObject: [],\n    mealObject: [],\n    foodObject: [],\n    scheduleContent: []\n  };\n\n  componentDidMount() {\n    // this.loadSchedule(\"JohnSmith\");\n    this.loadDailyPlan(\"JohnSmith\");\n\n    this.setState({\n      scheduleDate: moment().format(\"YYYY-MM-DD\")\n    });\n  }\n  // loadFoodFavorites = userID => {\n  //   API.getFoodByUser(userID)\n  //     .then(res => {\n  //       console.log(\"foodFavoriteList is: \", res.data);\n  //       this.setState({\n  //         foodFavoriteList: res.data\n  //       });\n  //     })\n  //     .catch(err => console.log(err));\n  // };\n\n  loadSchedule = userID => {\n    API.getScheduleByUser(userID)\n      .then(res => {\n        this.setState({\n          scheduleList: res.data\n        });\n      })\n      .catch(err => console.log(err));\n  };\n\n  loadDailyPlan = userID => {\n    API.getDailyPlanByUser(userID)\n      .then(res => {\n        this.setState({\n          dailyPlanList: res.data\n        });\n      })\n      .catch(err => console.log(err));\n  };\n\n  loadDailyPlanByScheduleDate = scheduleDate => {\n    var scheduleFoodArray = [];\n\n    API.getScheduleByScheduleDate(scheduleDate)\n      .then(scheduleObject => {\n        // this.setState({\n        //   scheduleObject: scheduleObject.data\n        // });\n\n        scheduleObject.data.map(scheduleElement =>\n          API.getDailyPlanByID(scheduleElement.dailyPlanID)\n            .then(dailyPlanObject => {\n              // this.setState({\n              //   dailyPlanObject: dailyPlanObject.data\n              // });\n\n              dailyPlanObject.data.mealList.map(mealListID =>\n                API.getMealByID(mealListID)\n                  .then(mealObject => {\n                    // this.setState({\n                    //   mealObject: mealObject.data\n                    // });\n\n                    // scheduleContent += mealObject.data.mealName;\n\n                    mealObject.data.foodList.map(foodListID =>\n                      API.getFoodByID(foodListID)\n                        .then(foodObject => {\n                          foodObject.data.map(food =>\n                            // let scheduleDailyPlanListObject = {\n                            //   scheduleObject: {\n                            //     dailyPlanObject: {\n                            //       mealObject: {\n                            //         foodObject\n                            //       }\n                            //     }\n                            //   }\n                            // };\n                            scheduleFoodArray.push(food)\n                          );\n\n                          this.setState({\n                            scheduleContent: scheduleFoodArray\n                          });\n                        })\n                        .catch(err => console.log(err))\n                    );\n                  })\n                  .catch(err => console.log(err))\n              );\n            })\n            .catch(err => console.log(err))\n        );\n      })\n      .catch(err => console.log(err));\n  };\n\n  selectSchedule = schedule => {\n    this.setState({ currentSchedule: schedule });\n  };\n\n  removeFromSchedule = dailyPlanID => {\n    API.removeDailyPlanFromScheduleByID(\n      this.state.currentSchedule._id,\n      dailyPlanID\n    )\n      .then(data => {\n        // console.log(\"in remove food... data.data is\", data.data);\n        // console.log(\"foodlist is:\", data.data.foodList);\n        // const totalEnergy = data.data.foodList.reduce((a, b) => ({\n        //   energy: a.energy + b.energy\n        // }));\n        // const totalPotassium = data.data.foodList.reduce((a, b) => ({\n        //   potassium: a.potassium + b.potassium\n        // }));\n        const tempScheduleList = data.data.scheduleList;\n        let totalPotassium = 0;\n        let totalEnergy = 0;\n        tempScheduleList.map(schedule => {\n          totalPotassium += schedule.potassium;\n          totalEnergy += schedule.energy;\n        });\n        console.log(\"total energy is:\", totalEnergy);\n        console.log(\"total potassium is:\", totalPotassium);\n        API.updateEnergyPotassiumTotalsForScheduleByID(\n          this.state.currentSchedule._id,\n          totalEnergy,\n          totalPotassium\n        ).then(data => {\n          console.log(\n            \"dailyPlan data after food REMOVE, with updated totals\",\n            data.data\n          );\n          this.setState({\n            currentSchedule: data.data\n          });\n        });\n      })\n      .catch(err => console.log(err));\n  };\n\n  //! new version\n  addToSchedule = (\n    dailyPlan_id,\n    dailyPlanTotalEnergy,\n    dailyPlanTotalPotassium\n  ) => {\n    // console.log(\"in addToDailyPlan\");\n    // console.log(\"food id is:\", food_id);\n    // console.log(\"servingSize is:\", servingSize);\n\n    let scheduleData = {\n      scheduleDate: this.state.scheduleDate,\n      userID: \"JohnSmith\",\n      totalEnergy: dailyPlanTotalEnergy,\n      totalPotassium: dailyPlanTotalPotassium,\n      dailyPlanID: dailyPlan_id\n    };\n\n    API.updateSchedule(scheduleData)\n      .then(res => {\n        // const tempDailyPlanList = data.data.dailyPlanList;\n        // let totalPotassium = 0;\n        // let totalEnergy = 0;\n        // tempDailyPlanList.map(dailyPlan => {\n        //   totalPotassium += dailyPlan.potassium;\n        //   totalEnergy += dailyPlan.energy;\n        // });\n\n        // this.setState({\n        //   currentSchedule: res.data\n        // });\n        this.loadDailyPlanByScheduleDate(this.state.scheduleDate);\n      })\n      .catch(err => console.log(err));\n  };\n  //next 3 functions from addDailyPlan.js\n  deleteSchedule = id => {\n    API.deleteSchedule(id)\n      .then(res => {\n        console.log(\"res is: \", res.data);\n        window.location.href = \"/ViewSchedule\";\n\n        // window.location.href = \"/AddDailyPlan\";\n        // this.setState({\n        //   dailyPlanList: res.data\n        // });\n      })\n      .catch(err => console.log(err));\n  };\n\n  //  handleInputChange = event => {\n\n  //   };\n\n  handleInputChangeScheduleDate = event => {\n    event.preventDefault();\n\n    this.setState({\n      scheduleDate: event.target.value,\n      scheduleContent: []\n    });\n\n    this.loadDailyPlanByScheduleDate(event.target.value);\n\n    if (event.target.value) {\n      API.saveSchedule({\n        scheduleDate: event.target.value,\n        userID: \"JohnSmith\"\n        //dailyPlanList: this.state.dailyPlanList,\n        // userID: \"JohnSmith\"\n        //totalEnergy: this.state.totalEnergy,\n        //totalPotassium: this.state.totalPotassium\n      })\n        //todo this refreshes the screen... or should i update state?\n        .then\n        //res => (window.location.href = \"/ViewSchedule\")\n        ()\n        // .then(res => (window.location.href = \"/AddDailyPlan\"))\n        //.then(res => this.loadDailyPlans())\n        .catch(err => console.log(err));\n    }\n  };\n\n  render() {\n    return (\n      <Container fluid>\n        <Row>\n          <Col size=\"md-12 sm-12\">\n            <Jumbotron>\n              <h1>View Schedule</h1>\n            </Jumbotron>\n          </Col>\n        </Row>\n\n        <Row>\n          <Col size=\"md-12\">\n            <form>\n              <Input\n                value={this.state.scheduleDate}\n                onChange={this.handleInputChangeScheduleDate}\n                name=\"scheduleDate\"\n                type=\"date\"\n                defaultValue={this.state.scheduleDate}\n              />\n            </form>\n          </Col>\n        </Row>\n\n        {this.state.currentSchedule ? (\n          <Row>\n            <Col size=\"md-12 sm-12\">\n              {/* <strong>Selected DailyPlan: </strong>{\" \"}\n              {this.state.currentDailyPlan.dailyPlanName} */}\n              <strong>Total Energy: </strong>\n              {this.state.currentSchedule.totalEnergy}\n              <strong>Total Potassium: </strong>\n              {this.state.currentSchedule.totalPotassium}\n            </Col>\n          </Row>\n        ) : (\n          <Row>\n            <Col size=\"md-12 sm-12\">\n              <h6>\n                Select a DailyPlan from the dailyPlan list to see what foods it\n                contains and to make changes\n              </h6>\n            </Col>\n          </Row>\n        )}\n\n        <Row>\n          <Col size=\"md-4 sm-4\">\n            <h3>DailyPlan List</h3>\n\n            {/* <Row>\n              <Col> */}\n            {this.state.dailyPlanList.length ? (\n              <>\n                {this.state.dailyPlanList.map(dailyPlan => (\n                  <Card\n                    key={dailyPlan._id}\n                    //todo: clicking on card isn't working...need to fix\n                    // onClick={() => this.selectDailyPlan(dailyPlan)}\n                  >\n                    {/* <Link to={\"/food/\" + food._id}></Link> */}\n                    <strong>\n                      DailyPlan Name: {dailyPlan.dailyPlanName} <br />\n                      Energy: {dailyPlan.totalEnergy} <br />\n                      Potassium: {dailyPlan.totalPotassium} <br />\n                    </strong>\n\n                    <Button\n                      className=\"btn btn-primary\"\n                      onClick={() =>\n                        this.addToSchedule(\n                          dailyPlan._id,\n                          dailyPlan.totalEnergy,\n                          dailyPlan.totalPotassium\n                        )\n                      }\n                    >\n                      Add\n                    </Button>\n                  </Card>\n                ))}\n              </>\n            ) : (\n              <h6>No DailyPlans, Add a dailyPlan first</h6>\n            )}\n          </Col>\n\n          <Col size=\"md-4 sm-4\">\n            <h3>Foods in your Schedule</h3>\n\n            {this.state.scheduleContent.map(food => (\n              <Card key={food._id}>\n                <strong>\n                  <br /> {food.foodName} <br />\n                  <br /> Energy:{food.energy} <br />\n                  <br /> Potassium:{food.potassium} <br />\n                  <br /> Efficiency:need to get virtual\n                  {food.efficiency} <br />\n                </strong>\n              </Card>\n            ))}\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default Schedule;\n","import React, { Component } from \"react\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport API from \"../utils/API\";\nimport { Link } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport Card from \"../components/Card\";\nimport { List, ListItem } from \"../components/List\";\nimport { Input, TextArea, FormBtn, Dropdown } from \"../components/Form\";\nimport DeleteBtn from \"../components/DeleteBtn\";\n\nclass Meal extends Component {\n  state = {\n    mealName: \"\",\n    mealList: []\n  };\n\n  componentDidMount() {\n    this.loadMeals();\n  }\n\n  loadMeals = () => {\n    API.getMealByUser(\"JohnSmith\")\n      .then(res => {\n        this.setState({\n          mealList: res.data\n        });\n      })\n      .catch(err => console.log(err));\n  };\n\n  deleteMeal = id => {\n    API.deleteMeal(id)\n      .then(res => {\n        console.log(\"res is: \", res.data);\n        window.location.href = \"/AddMeal\";\n        // this.setState({\n        //   mealList: res.data\n        // });\n      })\n      .catch(err => console.log(err));\n  };\n\n  // loadFood = () => {\n  //   API.getFoodByFoodGroupNameAndUser(\"Sweets\", \"master\")\n  //     // API.getFoodByFoodGroupAndUser(\"Sweets\", \"JohnSmith\")\n  //     .then(res =>\n  //       this.setState({\n  //         foodList: res.data,\n  //         mealName: \"\",\n  //         foods: 0\n  //       })\n  //     )\n  //     .catch(err => console.log(err));\n  // };\n\n  // deleteFood = id => {\n  //   API.deleteFood(id)\n  //     .then(res => this.loadFood())\n  //     .catch(err => console.log(err));\n  // };\n\n  handleInputChange = event => {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value\n    });\n    console.log([name], value);\n    // console.log(this.state.foods);\n  };\n\n  handleFormSubmit = event => {\n    alert(this.state.foods);\n    event.preventDefault();\n    if (this.state.mealName) {\n      API.saveMeal({\n        mealName: this.state.mealName,\n        userID: \"JohnSmith\",\n        totalEnergy: 0,\n        totalPotassium: 0\n      })\n        //todo this refreshes the screen... or should i update state?\n        .then(res => (window.location.href = \"/AddMeal\"))\n        //.then(res => this.loadMeals())\n        .catch(err => console.log(err));\n    }\n  };\n\n  render() {\n    return (\n      <Container fluid>\n        <Row>\n          <Col size=\"md-12\">\n            <Jumbotron>\n              <h1>Add New Meal</h1>\n            </Jumbotron>\n          </Col>\n        </Row>\n        <Row>\n          <Col size=\"md-12\">\n            {/* <form> */}\n            <Input\n              value={this.state.mealName}\n              onChange={this.handleInputChange}\n              name=\"mealName\"\n              placeholder=\"Meal Name (required)\"\n            />\n            <FormBtn\n              disabled={\n                !this.state.mealName\n\n                // && this.state.foodGroup &&\n                // this.state.energy &&\n                // this.state.potassium\n              }\n              onClick={this.handleFormSubmit}\n            >\n              Add Meal\n            </FormBtn>\n          </Col>\n        </Row>\n        <Row>\n          <Col size=\"md-12\">\n            <>\n              {/* // name=\"foods\" // onChange={this.handleInputChange}\n              // label=\"Foods\" // // value={this.state.foods[0].foodId}> */}\n              {this.state.mealList.map(meal => (\n                // <ListItem value={meal._id}>\n                <Card value={meal._id}>\n                  {meal.mealName}\n                  <DeleteBtn onClick={() => this.deleteMeal(meal._id)} />\n                </Card>\n                // </ListItem>\n              ))}\n              {/* {console.log(this.state.mealList)} */}\n            </>\n            {/* <Input\n                value={this.state.foods[0].servingSize}\n                onChange={this.handleInputChange}\n                name=\"servingsize\"\n                placeholder=\"Serving Size (optional)\"\n              /> */}\n\n            {/* <TextArea\n                value={this.state.synopsis}\n                onChange={this.handleInputChange}\n                name=\"synopsis\"\n                placeholder=\"Synopsis (Optional)\"\n              /> */}\n            {/* </form> */}\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default Meal;\n","import React, { Component } from \"react\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport API from \"../utils/API\";\nimport { Link } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { List, ListItem } from \"../components/List\";\nimport { Input, TextArea, FormBtn } from \"../components/Form\";\nimport Card from \"../components/Card\";\nimport DeleteBtn from \"../components/DeleteBtn\";\nimport AddBtn from \"../components/AddBtn\";\nimport Button from \"../components/Button\";\nimport \"./viewFoodStyle.css\";\nimport \"font-awesome/css/font-awesome.min.css\";\n// import '../node_modules/react-vis/dist/style.css';\n//import 'C:\\Users\\gurne\\OneDrive\\Documents\\Project3\\project3\\client\\node_modules/'\n//import { XYPlot, XAxis, YAxis, HorizontalGridLines, LineSeries } from 'react-vis';\n\nclass Meal extends Component {\n  state = {\n    // first item from add meal\n    mealName: \"\",\n    mealList: [],\n    foodList: [],\n    foodFavoriteList: [],\n    currentMeal: null\n  };\n\n  componentDidMount() {\n    this.loadMeals(\"JohnSmith\");\n    this.loadFoodFavorites(\"JohnSmith\");\n  }\n\n  loadFoodFavorites = userID => {\n    API.getFoodByUser(userID)\n      .then(res => {\n        console.log(\"FOODFAVORITES LIST IS: \", res.data);\n        this.setState({\n          foodFavoriteList: res.data\n        });\n      })\n      .catch(err => console.log(err));\n  };\n\n  loadMeals = userID => {\n    API.getMealByUser(userID)\n      .then(res => {\n        console.log(\"GETMEALBYUSER RETURNED: \", res.data);\n        this.setState({\n          mealList: res.data,\n          currentMeal: res.data[0]\n        });\n      })\n      .catch(err => console.log(err));\n  };\n\n  selectMeal = meal => {\n    console.log(\"JUST GOT INTO SELECT MEAL AND MEAL IS:\", meal);\n    this.setState({ currentMeal: meal });\n    console.log(\n      \"selected meal... now current meal state is:\",\n      this.state.currentMeal\n    );\n\n    var foodListArray = [];\n    meal.foodList.map(food => {\n      console.log(\"MAPPING OVER FOOD AND FOOD IS:\", food);\n      API.getFoodByID(food.food)\n        .then(res => {\n          console.log(\"getFoodByMealID returned: \", res);\n\n          res.data.map(foodObject => {\n            console.log(\n              \"PUSHING THIS FOODOBJECT ONTO FOODLIST ARRAY: \",\n              foodObject\n            );\n            foodListArray.push(foodObject);\n            this.setState({\n              foodList: foodListArray\n            });\n          });\n        })\n        .catch(err => console.log(err));\n    });\n  };\n\n  removeFromMeal = foodID => {\n    console.log(\"remove food:\", foodID);\n    console.log(\"from meal:\", this.state.currentMeal._id);\n    API.removeFoodFromMealByID(this.state.currentMeal._id, foodID)\n      .then(data => {\n        console.log(\"food delete returned: \", data);\n        // }\n        // );\n        const tempFoodList = data.data.foodList;\n        let totalPotassium = 0;\n        let totalEnergy = 0;\n        tempFoodList.map(food => {\n          totalPotassium += food.food.potassium;\n          totalEnergy += food.food.energy;\n        });\n        console.log(\"total energy is:\", totalEnergy);\n        console.log(\"total potassium is:\", totalPotassium);\n        API.updateEnergyPotassiumTotalsForMealByID(\n          this.state.currentMeal._id,\n          totalEnergy,\n          totalPotassium\n        ).then(data => {\n          console.log(\n            \"meal data after food REMOVE, with updated totals\",\n            data.data\n          );\n          this.setState({\n            currentMeal: data.data\n          });\n        });\n      })\n      .catch(err => console.log(err));\n  };\n\n  //! new version\n  addToMeal = (food_id, servingSize) => {\n    // console.log(\"in addToMeal\");\n    // console.log(\"food id is:\", food_id);\n    // console.log(\"servingSize is:\", servingSize);\n    API.addFoodToMealByID(this.state.currentMeal._id, food_id, servingSize)\n      .then(data => {\n        // console.log(\"addFoodToMealByID data.data is\", data.data);\n        // console.log(\"foodlist is:\", data.data.foodList);\n        // const totalEnergy = data.data.foodList.reduce((a, b) => ({\n        //   energy: a.energy + b.energy\n        // }));\n        // const totalPotassium = data.data.foodList.reduce((a, b) => ({\n        //   potassium: a.potassium + b.potassium\n        // }));\n        console.log(\"data.data is:\", data.data);\n        const tempFoodList = data.data.foodList;\n        console.log(\"tempFoodList is:\", tempFoodList);\n        let totalPotassium = 0;\n        let totalEnergy = 0;\n        tempFoodList.map(food => {\n          totalPotassium += food.food.potassium;\n          totalEnergy += food.food.energy;\n        });\n        console.log(\"total energy before update totals is:\", totalEnergy);\n        console.log(\"total potassium before update totals is:\", totalPotassium);\n        API.updateEnergyPotassiumTotalsForMealByID(\n          this.state.currentMeal._id,\n          totalEnergy,\n          totalPotassium\n        ).then(data => {\n          console.log(\n            \"meal data after food ADD, with updated totals\",\n            data.data\n          );\n          this.setState({\n            currentMeal: data.data\n          });\n        });\n      })\n      .catch(err => console.log(err));\n  };\n\n  //next 3 functions from addMeal.js\n  deleteMeal = id => {\n    API.deleteMeal(id)\n      .then(res => {\n        console.log(\"res is: \", res.data);\n        window.location.href = \"/ViewMeal\";\n\n        // window.location.href = \"/AddMeal\";\n        // this.setState({\n        //   mealList: res.data\n        // });\n      })\n      .catch(err => console.log(err));\n  };\n\n  handleInputChange = event => {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value\n    });\n    console.log([name], value);\n    // console.log(this.state.foods);\n  };\n\n  handleFormSubmit = event => {\n    // alert(this.state.foods);\n    event.preventDefault();\n    if (this.state.mealName) {\n      API.saveMeal({\n        mealName: this.state.mealName,\n        userID: \"JohnSmith\",\n        totalEnergy: 0,\n        totalPotassium: 0\n      })\n        //todo this refreshes the screen... or should i update state?\n        .then(res => (window.location.href = \"/ViewMeal\"))\n        // .then(res => (window.location.href = \"/AddMeal\"))\n        //.then(res => this.loadMeals())\n        .catch(err => console.log(err));\n    }\n  };\n\n  render() {\n    const thumbnail = {\n      width: 50,\n      height: 50\n    };\n    // console.log(this.state.currentMeal);\n    return (\n      <Container fluid>\n        <Row>\n          <Col size=\"sm-12\">\n            <Jumbotron>\n              <h1>View Meal</h1>\n            </Jumbotron>\n          </Col>\n        </Row>\n        {/* the charts and details should show here */}\n        {this.state.currentMeal ? (\n          <div>\n            <div className=\"d-flex flex-row justify-content-center mb-1\">\n              <h3>Current Meal</h3>\n            </div>\n            <div className=\"d-flex flex-row justify-content-center mb-5\">\n              <div className=\"p-3 pl-5 dotted-div\">\n                <img\n                  style={thumbnail}\n                  alt=\"icon\"\n                  src=\"https://i.imgur.com/ftEWZYQ.png\"\n                />\n                <span className=\"meal-selected\">\n                  {\" \"}\n                  {this.state.currentMeal.mealName}\n                </span>\n              </div>\n              <div className=\"p-3 dotted-div\">\n                <img\n                  style={thumbnail}\n                  alt=\"icon\"\n                  src=\"https://i.imgur.com/iCAG80W.png\"\n                />\n                {this.state.currentMeal.totalEnergy}kCal\n              </div>\n              <div className=\"p-3 dotted-div\">\n                <img\n                  style={thumbnail}\n                  alt=\"icon\"\n                  src=\"https://i.imgur.com/rK4wz3p.jpg\"\n                />{\" \"}\n                {this.state.currentMeal.totalPotassium}gm\n              </div>\n              <div className=\"p-3  pr-5 dotted-div\">\n                <img\n                  style={thumbnail}\n                  alt=\"icon\"\n                  src=\"https://i.imgur.com/rK4wz3p.jpg\"\n                />{\" \"}\n                {this.state.currentMeal.efficiency}\n              </div>\n            </div>\n          </div>\n        ) : (\n          <div className=\"row ml-5\">\n            <h6>\n              Select a Meal from the meal list to see what foods it contains and\n              to make changes\n            </h6>\n          </div>\n        )}\n        <div className=\"container row ml-3 mb-3\">\n          <div className=\"col-6 mt-2\">\n            <Input\n              value={this.state.mealName}\n              onChange={this.handleInputChange}\n              name=\"mealName\"\n              placeholder=\"Enter meal name to create new meal\"\n            />\n          </div>\n          <div className=\"col-2\">\n            <Button\n              className=\"btn btn-primary\"\n              disabled={\n                !this.state.mealName\n\n                // && this.state.foodGroup &&\n                // this.state.energy &&\n                // this.state.potassium\n              }\n              onClick={this.handleFormSubmit}\n            >\n              Add Meal\n            </Button>\n          </div>\n        </div>\n\n        {/* end of add meal section */}\n        {/* <Col size=\"md-4 sm-4\">\n          <Row>\n            <Col size=\"sm-12\">\n              <h6>Select a Meal</h6>\n            </Col>\n          </Row>\n          )}\n        </Col> */}\n        {/* starting the display */}\n        <div className=\"row\">\n          {/* select a meal div */}\n          <div className=\"col-3 ml-5\">\n            <div className=\" justify-content-center\">\n              <h3 className=\"text-center\">Select a Meal</h3>\n              <hr />\n            </div>\n            <Row>\n              {this.state.mealList.length ? (\n                <>\n                  <ul className=\"list-group list-group-flush\">\n                    <ul className=\"list-group\">\n                      {this.state.mealList.map(meal => (\n                        <li className=\"list-group-item\" key={meal._id}>\n                          {/* //todo: clicking on card isn't working...need to fix */}\n                          {/* // onClick={() => this.selectMeal(meal)} */}\n                          {/* <Link to={\"/food/\" + food._id}></Link> */}\n                          <div className=\"row\">\n                            <div className=\"col-8\">\n                              <strong>\n                                <h5 style={{ fontWeight: \"bolder\" }}>\n                                  {\" \"}\n                                  Meal Name:\n                                  <span className=\"meal-selected\">\n                                    {meal.mealName}\n                                  </span>{\" \"}\n                                </h5>\n                                <span className=\"spanIt\">Energy:</span>{\" \"}\n                                {meal.totalEnergy} kCal <br />\n                                <span className=\"spanIt\"> Potassium:</span>{\" \"}\n                                {meal.totalPotassium} gm\n                                <br />\n                                {/* {parseInt(meal.totalPotassium) === 0\n                                  ? 0\n                                  : parseFloat(\n                                    parseInt(meal.totalEnergy) /\n                                    parseInt(meal.totalPotassium)\n                                  ).toFixed(2)} */}\n                                <br />\n                              </strong>\n                            </div>\n                            <div className=\"col-2\">\n                              <div className=\"col-12\">\n                                <button\n                                  // style={{ border: 0 }}\n                                  role=\"button\"\n                                  className=\"btn px-3 text-center blue-gradient \"\n                                  onClick={() => this.selectMeal(meal)}\n                                >\n                                  <div style={{ textAlign: \"center\" }}>\n                                    <i className=\"fa fa-plus-circle fa-2x\" />\n                                  </div>\n                                </button>\n                              </div>\n                              <div className=\"col-12\">\n                                <button\n                                  // style={{ border: 0 }}\n                                  role=\"button\"\n                                  className=\"btn px-3 text-center peach-gradient \"\n                                  onClick={() => this.deleteMeal(meal._id)}\n                                >\n                                  <div style={{ textAlign: \"center\" }}>\n                                    <i className=\"fa fa-minus-circle fa-2x\" />\n                                  </div>\n                                </button>\n                              </div>\n                            </div>\n                          </div>\n                        </li>\n                      ))}\n                    </ul>\n                  </ul>\n                </>\n              ) : (\n                <div className=\"justify-content-center\">\n                  <h6 className=\"text-center\">No Meals, Add a meal first</h6>\n                </div>\n              )}\n            </Row>\n          </div>\n\n          {/* you custom food div */}\n          <div className=\"col-3 offset-1\">\n            <div className=\"justify-content-center ml-3\">\n              <h3>Customize your Meal</h3>\n              <hr />\n            </div>\n\n            <Row>\n              {this.state.currentMeal &&\n              this.state.currentMeal.foodList.length > 0 ? (\n                <ul className=\"list-group list-group-flush\">\n                  <ul className=\"list-group\">\n                    {this.state.currentMeal.foodList.map(food => (\n                      <li\n                        className=\"list-group-item text-center\"\n                        key={food._id}\n                      >\n                        <div>\n                          <strong>\n                            <h5 style={{ fontWeight: \"bolder\" }}>\n                              {food.food.foodName}\n                            </h5>\n                            <span className=\"spanIt\">Energy:</span>\n                            {food.food.energy} <br />\n                            <span className=\"spanIt\">Potassium:</span>\n                            {food.food.potassium} <br />\n                            <span className=\"spanIt\"> ServingSize:</span>\n                            {food.servingSize}\n                            <br />\n                            <span className=\"spanIt\"> Efficiency:</span>\n                            {food.food.efficiency}{\" \"}\n                            {/* {food.food.energy / food.food.potassium} */}\n                            {/* {parseFloat(\n                              parseInt(food.food.energy) /\n                                parseInt(food.food.potassium)\n                            ).toFixed(2)} */}\n                            <br />\n                          </strong>\n                        </div>\n                        <button\n                          className=\"btn px-3 text-center peach-gradient \"\n                          onClick={() => this.removeFromMeal(food._id)}\n                        >\n                          <div style={{ textAlign: \"center\" }}>\n                            <i className=\"fa fa-minus-circle fa-2x\" />\n                          </div>\n                        </button>\n                      </li>\n                    ))}\n                  </ul>\n                </ul>\n              ) : (\n                <h6>Click Add on a food item to add it to your meal</h6>\n              )}\n            </Row>\n          </div>\n\n          {/* add fav food div */}\n          <div className=\"col-3 offset-1\">\n            <div className=\"justify-content-center ml-5\">\n              <h3>Add Favorite Foods</h3>\n              <hr />\n            </div>\n\n            <Row>\n              {this.state.foodFavoriteList.length ? (\n                <ul className=\"list-group list-group-flush\">\n                  <ul className=\"list-group\">\n                    {this.state.foodFavoriteList.map(food => (\n                      <li className=\"list-group-item\" key={food._id}>\n                        <div className=\"row\">\n                          <div className=\"col-2 mt-5\">\n                            <button\n                              // style={{ border: 0 }}\n                              role=\"button\"\n                              type=\"button\"\n                              className=\"btn px-3 text-center blue-gradient \"\n                              onClick={() => this.addToMeal(food._id, 100)}\n                            >\n                              <div style={{ textAlign: \"center\" }}>\n                                <i className=\"fa fa-plus-circle fa-2x\" />\n                              </div>\n                            </button>\n                          </div>\n                          <div className=\"col-8 offset-2\">\n                            <strong>\n                              <h5 style={{ fontWeight: \"bolder\" }}>\n                                {food.foodName}{\" \"}\n                              </h5>\n                              <span className=\"spanIt\">Energy:</span>\n                              {food.energy} <br />\n                              <span className=\"spanIt\">Potassium:</span>{\" \"}\n                              {food.potassium} <br />\n                              <span className=\"spanIt\">Efficiency:</span>\n                              {food.efficiency} <br />\n                            </strong>\n                          </div>\n                        </div>\n                      </li>\n                    ))}\n                  </ul>\n                </ul>\n              ) : (\n                <div className=\"justify-content-center ml-5\">\n                  <h6>Click Add to add a food to the meal</h6>\n                </div>\n              )}\n            </Row>\n          </div>\n        </div>\n      </Container>\n    );\n  }\n}\n\nexport default Meal;\n","import React, { Component } from \"react\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport API from \"../utils/API\";\nimport { Link } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { List, ListItem } from \"../components/List\";\nimport { Input, TextArea, FormBtn } from \"../components/Form\";\nimport Card from \"../components/Card\";\nimport DeleteBtn from \"../components/DeleteBtn\";\nimport AddBtn from \"../components/AddBtn\";\nimport Button from \"../components/Button\";\n\nclass DailyPlan extends Component {\n  state = {\n    dailyPlanName: \"\",\n    dailyPlanList: [],\n    mealList: [],\n    dailyPlanMealList: [],\n    currentDailyPlan: null\n  };\n\n  componentDidMount() {\n    this.loadDailyPlans(\"JohnSmith\");\n    this.loadMealList(\"JohnSmith\");\n  }\n  loadMealList = userID => {\n    API.getMealByUser(userID)\n      .then(res => {\n        console.log(\"mealList is: \", res.data);\n        this.setState({\n          mealList: res.data\n        });\n      })\n      .catch(err => console.log(err));\n  };\n\n  loadDailyPlans = userID => {\n    API.getDailyPlanByUser(userID)\n      .then(res => {\n        console.log(\"getDailyPlanByUser returned: \", res.data);\n        this.setState({\n          dailyPlanList: res.data\n        });\n      })\n      .catch(err => console.log(err));\n  };\n\n  selectDailyPlan = dailyPlan => {\n    console.log(\"selectDailyPlan dailyplan is : \" + dailyPlan);\n    console.log(dailyPlan);\n\n    this.setState({ currentDailyPlan: dailyPlan });\n    console.log(\n      \"selected dailyPlan... now current dailyPlan state is:\",\n      this.state.currentDailyPlan\n    );\n\n    var mealListArray = [];\n    dailyPlan.mealList.map(mealID =>\n      API.getMealByID(mealID)\n        .then(res => {\n          console.log(\"mealListArray element is: \", res.data);\n\n          mealListArray.push(res.data);\n\n          this.setState({\n            dailyPlanMealList: mealListArray\n          });\n        })\n        .catch(err => console.log(err))\n    );\n  };\n\n  removeFromDailyPlan = mealID => {\n    console.log(\"remove meal:\", mealID);\n    console.log(\"from dailyPlan:\", this.state.currentDailyPlan._id);\n    API.removeMealFromDailyPlanByID(this.state.currentDailyPlan._id, mealID)\n      .then(data => {\n        console.log(\"meal delete returned: \", data);\n        // }\n        // );\n        const tempMealList = data.data.mealList;\n        let totalPotassium = 0;\n        let totalEnergy = 0;\n        tempMealList.map(meal => {\n          totalPotassium += meal.meal.totalPotassium;\n          totalEnergy += meal.meal.totalEnergy;\n        });\n        console.log(\"total energy is:\", totalEnergy);\n        console.log(\"total potassium is:\", totalPotassium);\n        API.updateEnergyPotassiumTotalsForDailyPlanByID(\n          this.state.currentDailyPlan._id,\n          totalEnergy,\n          totalPotassium\n        ).then(data => {\n          console.log(\n            \"dailyPlan data after meal REMOVE, with updated totals\",\n            data.data\n          );\n          this.setState({\n            currentDailyPlan: data.data,\n            dailyPlanMealList: data.data.mealList\n          });\n\n          console.log(this.state.dailyPlanMealList);\n        });\n      })\n      .catch(err => console.log(err));\n  };\n\n  //! new version\n  addToDailyPlan = meal_id => {\n    // console.log(\"in addToDailyPlan\");\n    // console.log(\"meal id is:\", meal_id);\n    // console.log(\"servingSize is:\", servingSize);\n    API.addMealToDailyPlanByID(this.state.currentDailyPlan._id, meal_id)\n      .then(data => {\n        // console.log(\"addMealToDailyPlanByID data.data is\", data.data);\n        // console.log(\"meallist is:\", data.data.mealList);\n        // const totalEnergy = data.data.mealList.reduce((a, b) => ({\n        //   energy: a.energy + b.energy\n        // }));\n        // const totalPotassium = data.data.mealList.reduce((a, b) => ({\n        //   potassium: a.potassium + b.potassium\n        // }));\n        console.log(\"data.data is:\", data.data);\n        const tempMealList = data.data.mealList;\n        console.log(\"tempMealList is:\", tempMealList);\n        let totalPotassium = 0;\n        let totalEnergy = 0;\n        tempMealList.map(meal => {\n          totalPotassium += meal.totalPotassium;\n          totalEnergy += meal.totalEnergy;\n        });\n        console.log(\"total energy before update totals is:\", totalEnergy);\n        console.log(\"total potassium before update totals is:\", totalPotassium);\n        API.updateEnergyPotassiumTotalsForDailyPlanByID(\n          this.state.currentDailyPlan._id,\n          totalEnergy,\n          totalPotassium\n        ).then(data => {\n          console.log(data);\n          console.log(\n            \"dailyPlan data after meal ADD, with updated totals\",\n            data.data\n          );\n          this.setState({\n            currentDailyPlan: data.data,\n            dailyPlanMealList: data.data.mealList\n          });\n        });\n      })\n      .catch(err => console.log(err));\n  };\n  //next 3 functions from addDailyPlan.js\n  deleteDailyPlan = id => {\n    API.deleteDailyPlan(id)\n      .then(res => {\n        console.log(\"res is: \", res.data);\n        window.location.href = \"/ViewDailyPlan\";\n\n        // window.location.href = \"/AddDailyPlan\";\n        // this.setState({\n        //   dailyPlanList: res.data\n        // });\n      })\n      .catch(err => console.log(err));\n  };\n\n  handleInputChange = event => {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value\n    });\n    console.log([name], value);\n    // console.log(this.state.meals);\n  };\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n    if (this.state.dailyPlanName) {\n      API.saveDailyPlan({\n        dailyPlanName: this.state.dailyPlanName,\n        userID: \"JohnSmith\",\n        totalEnergy: 0,\n        totalPotassium: 0\n      })\n        //todo this refreshes the screen... or should i update state?\n        .then(res => (window.location.href = \"/ViewDailyPlan\"))\n        // .then(res => (window.location.href = \"/AddDailyPlan\"))\n        //.then(res => this.loadDailyPlans())\n        .catch(err => console.log(err));\n    }\n  };\n\n  render() {\n    return (\n      <Container fluid>\n        <Row>\n          <Col size=\"md-9 sm-9\">\n            <Input\n              value={this.state.dailyPlanName}\n              onChange={this.handleInputChange}\n              name=\"dailyPlanName\"\n              placeholder=\"Enter dailyPlan name to create new dailyPlan\"\n            />\n          </Col>\n          <Col size=\"md-3 sm-3\">\n            <Button\n              className=\"btn btn-primary\"\n              disabled={\n                !this.state.dailyPlanName\n\n                // && this.state.mealGroup &&\n                // this.state.energy &&\n                // this.state.potassium\n              }\n              onClick={this.handleFormSubmit}\n            >\n              Add DailyPlan\n            </Button>\n          </Col>\n        </Row>\n        {/* end of add dailyPlan section */}\n\n        {this.state.currentDailyPlan ? (\n          <Row>\n            <Col size=\"md-12 sm-12\">\n              <strong>Selected DailyPlan: </strong>{\" \"}\n              {this.state.currentDailyPlan.dailyPlanName}\n              <strong>Total Energy: </strong>\n              {this.state.currentDailyPlan.totalEnergy}\n              <strong>Total Potassium: </strong>\n              {this.state.currentDailyPlan.totalPotassium}\n            </Col>\n          </Row>\n        ) : (\n          <Row>\n            <Col size=\"md-12 sm-12\">\n              <h6>\n                Select a DailyPlan from the dailyPlan list to see what meals it\n                contains and to make changes\n              </h6>\n            </Col>\n          </Row>\n        )}\n\n        <Row>\n          <Col size=\"md-4 sm-4\">\n            <Row>\n              <h3>DailyPlan List</h3>\n            </Row>\n            <Row>\n              {this.state.dailyPlanList.length ? (\n                <>\n                  {this.state.dailyPlanList.map(dailyPlan => (\n                    <Card key={dailyPlan._id}>\n                      {/* <Link to={\"/meal/\" + meal._id}></Link> */}\n                      <strong>\n                        DailyPlan Name: {dailyPlan.dailyPlanName} <br />\n                        Energy: {dailyPlan.totalEnergy} <br />\n                        Potassium: {dailyPlan.totalPotassium} <br />\n                      </strong>\n                      <Button\n                        className=\"btn btn-primary\"\n                        onClick={() => this.selectDailyPlan(dailyPlan)}\n                      >\n                        Select\n                      </Button>\n                      <Button\n                        className=\"btn btn-danger\"\n                        onClick={() => this.deleteDailyPlan(dailyPlan._id)}\n                      >\n                        Delete\n                      </Button>\n                    </Card>\n                  ))}\n                </>\n              ) : (\n                <h6>No DailyPlans, Add a dailyPlan first</h6>\n              )}\n            </Row>\n          </Col>\n          <Col size=\"md-4 sm-4\">\n            <Row>\n              <h3>Meals in your DailyPlan</h3>\n            </Row>\n            <Row>\n              <div>\n                {/* this.state.currentDailyPlan && */}\n                {this.state.dailyPlanMealList.length + \" meals\"}\n                {this.state.dailyPlanMealList.length > 0 ? (\n                  <List>\n                    {this.state.dailyPlanMealList.map((\n                      meal // console.log(\"MEAL IS: \" + meal)\n                    ) => (\n                      <Card key={meal._id}>\n                        <strong>\n                          <br /> {meal.mealName} <br />\n                          <br /> Energy:{meal.totalEnergy} <br />\n                          <br /> Potassium:{meal.totalPotassium} <br />\n                          {/* <br /> ServingSize:{meal.servingSize}\n                          <br /> */}\n                          <br /> Efficiency: {meal.efficiency} <br />\n                        </strong>\n                        <Button\n                          className=\"btn btn-danger\"\n                          onClick={() => this.removeFromDailyPlan(meal._id)}\n                        >\n                          Remove\n                        </Button>\n                      </Card>\n                    ))}\n                  </List>\n                ) : (\n                  <h6>Click Add on a meal card to add it to your dailyPlan</h6>\n                )}\n              </div>\n            </Row>\n          </Col>\n          <Col size=\"md-4 sm-4\">\n            <Row>\n              <h3>Meals</h3>\n            </Row>\n            <Row>\n              {this.state.mealList.length ? (\n                this.state.mealList.map(meal => (\n                  <Card key={meal._id}>\n                    <strong>\n                      <br /> {meal.mealName} <br />\n                      <br /> Energy:{meal.totalEnergy} <br />\n                      <br /> Potassium:{meal.totalPotassium} <br />\n                      <br /> Efficiency:{meal.efficiency} <br />\n                    </strong>\n                    <Button\n                      className=\"btn btn-primary\"\n                      onClick={() => this.addToDailyPlan(meal._id)}\n                    >\n                      Add\n                    </Button>\n                  </Card>\n                ))\n              ) : (\n                <h6>Click Add to add a meal to the dailyPlan</h6>\n              )}\n            </Row>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default DailyPlan;\n","import React, { Component } from \"react\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport API from \"../utils/API\";\nimport { Link } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { List, ListItem } from \"../components/List\";\nimport { Input, TextArea, FormBtn } from \"../components/Form\";\nimport SearchResults from \"./SearchResults\";\nimport foods from \"./food.json\";\nimport { FoodPic, FoodContainer } from \"./FoodPic\";\n\nclass FoodItem extends Component {\n  state = {\n    results: \"\",\n    foodSearch: \"\",\n    pics: null\n  };\n\n  handleInputChange = event => {\n    this.setState({ foodSearch: event.target.value });\n  };\n\n  findPic = name => {\n    API.getRecipes(name)\n      .then(res => {\n        const ImgRec = res.data.results.filter(recipe =>\n          Boolean(recipe.thumbnail)\n        );\n        this.setState({ pics: ImgRec.length > 0 ? ImgRec[0].thumbnail : null });\n      })\n      .catch(err => console.log(err));\n  };\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n    console.log(foods);\n    foods.map(item => {\n      let key = item.id;\n      if (item.foodID === this.state.foodSearch) {\n        console.log(item.foodName);\n        this.setState({ results: item });\n        this.findPic(item.foodName);\n      }\n    });\n  };\n\n  render() {\n    return (\n      <Container fluid>\n        <Row>\n          <Col size=\"md-12\">\n            <h1>What Food Can I Eat?</h1>\n            <form>\n              <Input\n                value={this.state.foodSearch}\n                onChange={this.handleInputChange}\n                name=\"foodSearch\"\n                placeholder=\"Enter Food Name\"\n              />\n              <FormBtn onClick={this.handleFormSubmit}>Search Food</FormBtn>\n            </form>\n          </Col>\n        </Row>\n\n        <SearchResults\n          foodName={this.state.results.foodName}\n          potassium={this.state.results.potassium}\n        />\n        <FoodContainer>\n          {console.log(this.state.pics)}\n\n          {this.state.pics && <FoodPic thumbnail={this.state.pics} />}\n        </FoodContainer>\n      </Container>\n    );\n  }\n}\n\nexport default FoodItem;\n","import React, { Component } from \"react\";\nimport FoodItem from \"./Books\";\nimport Login from \"./Login\";\n\nfunction HomeContainer() {\n    return (\n        <div>\n            <FoodItem />\n            <Login />\n        </div>\n    )\n}\n\nexport default HomeContainer;","import React from \"react\";\nimport \"./style.css\"\n\nfunction CustomCard(props) {\n    return (\n        <div className=\"card pl-10\">\n\n            <div class=\"view overlay\">\n                <img class=\"card-img-top\" src=\"https://mdbootstrap.com/img/Photos/Horizontal/Work/4-col/img%20%2821%29.jpg\" alt=\"Card image cap\" />\n                <a>\n                    <div class=\"mask rgba-white-slight\"></div>\n                </a>\n            </div>\n\n\n            <h4 className=\"card-title\">{props.title}</h4>\n            <hr class=\"hr-light\" />\n            <div className=\"card-text\">\n                <ul className=\"list-group\">\n                    <li className=\"list-group-item d-flex justify-content-between align-items-center\">\n                        Food Group\n                        <span >{props.foodGroup}</span>\n                    </li>\n                    <li className=\"list-group-item d-flex justify-content-between align-items-center\">\n                        Energy\n            <span className=\"badge blue-gradient  badge-pill\">{props.energy} kCal</span>\n                    </li>\n                    <li className=\"list-group-item d-flex justify-content-between align-items-center\">\n                        Potassium\n            <span className=\"badge blue-gradient badge-pill\">{props.potassium} mg</span>\n                    </li>\n                    <li className=\"list-group-item d-flex justify-content-between align-items-center\">\n                        Efficiency\n            <span className=\"badge blue-gradient badge-pill\">{props.efficiency}</span>\n                    </li>\n                    <li className=\"list-group-item d-flex justify-content-between align-items-center\">\n                        User Name\n            <span>{props.username}</span>\n                    </li>\n                </ul>\n                {/* <p className=\"text-small text-muted mb-0 pt-3\">* At vero eos et accusamus et iusto ducimus.</p> */}\n            </div>\n        </div>\n\n    )\n}\n\nexport default CustomCard;","import React, { Component } from \"react\";\nimport Button from \"../components/Button\";\nimport API from \"../utils/API\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport Card from \"../components/Card\";\nimport { Input, TextArea, FormBtn, Dropdown } from \"../components/Form\";\nimport CustomCard from \"../components/CustomCard\"\n\nclass FoodFavorite extends Component {\n  state = {\n    foodFavoriteList: [],\n    customize: false,\n    editFoodID: null,\n    energy: 0,\n    potassium: 0,\n    foodGroupName: \"\",\n    foodGroupList: []\n  };\n\n  componentDidMount() {\n    this.loadFoodFavorite(\"JohnSmith\");\n    this.loadFoodGroupByMasterAndUser(\"JohnSmith\");\n  }\n\n  loadFoodFavorite = userID => {\n    API.getFoodByUser(userID)\n      .then(res => {\n        this.setState({\n          foodFavoriteList: res.data\n        });\n      })\n      .catch(err => console.log(err));\n  };\n\n  deleteFood = (id, foodName) => {\n    if (\n      window.confirm(\n        \"Are you sure you would like to delete \" +\n        foodName +\n        \" from your Favorite Foods?\"\n      )\n    ) {\n      API.deleteFoodByID(id)\n        .then(res => this.loadFoodFavorite(\"JohnSmith\"))\n        .catch(err => console.log(err));\n    }\n  };\n\n  handleInputChange = event => {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n\n    if (this.state.energy && this.state.potassium && this.state.foodGroupName) {\n      API.updateFoodByID(this.state.editFoodID, {\n        energy: this.state.energy,\n        potassium: this.state.potassium,\n        foodGroupName: this.state.foodGroupName\n      })\n        .then(\n          this.setState({\n            energy: 0,\n            potassium: 0,\n            foodGroupName: \"\",\n            customize: false\n          })\n        )\n        .catch(err => console.log(err));\n\n      this.loadFoodFavorite(\"JohnSmith\");\n    }\n  };\n\n  edit = (id, energy, potassium, foodGroupName) => {\n    this.setState({\n      customize: true,\n      editFoodID: id,\n      energy: energy,\n      potassium: potassium,\n      foodGroupName: foodGroupName\n    });\n  };\n\n  loadFoodGroupByMasterAndUser = userID => {\n    API.getFoodGroupByMasterAndUser(userID)\n      .then(res =>\n        this.setState({\n          foodGroupList: res.data\n        })\n      )\n      .catch(err => console.log(err));\n  };\n\n  render() {\n    var foodDisplay = {\n      color: '#1e90ff',\n      fontWeight: 'bold'\n    };\n    return (\n      <Container fluid>\n        <Row>\n          <Col size=\"md-12\">\n            {/* <Jumbotron>\n              <h1>View Food</h1>\n            </Jumbotron> */}\n          </Col>\n        </Row>\n\n\n        {this.state.foodFavoriteList.length ? (\n          this.state.foodFavoriteList.map(foodFavoriteList => (\n            <Row>\n              <Col size=\"md-6\" className=\"offset-2\" >\n                <div className=\"m-5\">\n                  <CustomCard\n                    key={foodFavoriteList._id}\n                    title={foodFavoriteList.foodName}\n                    foodGroup={foodFavoriteList.foodGroupName}\n                    energy={foodFavoriteList.energy}\n                    potassium={foodFavoriteList.potassium}\n                    efficiency={foodFavoriteList.efficiency}\n                    username={foodFavoriteList.userID}\n                  >\n                  </CustomCard>\n                </div>\n              </Col>\n\n              {this.state.customize &&\n                this.state.editFoodID === foodFavoriteList._id ? (\n                  <Col size=\"md-4\">\n                    <div className=\"mt-5\">\n                      <Dropdown\n                        name=\"foodGroupName\"\n                        onChange={this.handleInputChange}\n                        label=\"Food Group\"\n                        defaultValue={this.state.foodGroupName}\n                      >\n                        {this.state.foodGroupList.map(foodGroupList => (\n                          <option value={foodGroupList.foodGroupName}>\n                            {foodGroupList.foodGroupName}\n                          </option>\n                        ))}\n                      </Dropdown>\n                    </div>\n                    <Input\n                      defaultValue={foodFavoriteList.energy}\n                      onChange={this.handleInputChange}\n                      name=\"energy\"\n                      placeholder=\"Energy (required)\"\n                      type=\"text\"\n                    />\n\n                    <Input\n                      defaultValue={foodFavoriteList.potassium}\n                      onChange={this.handleInputChange}\n                      name=\"potassium\"\n                      placeholder=\"Potassium (required)\"\n                      type=\"text\"\n                    />\n\n                    <FormBtn\n                      className=\"btn peach-gradient\"\n                      // disabled={!(this.state.energy && this.state.potassium)}\n                      onClick={this.edit}\n                    >\n                      <a style={{ fontWeight: 'bolder' }}> CANCEL <i class=\"fa fa-remove\"></i></a>\n                    </FormBtn>\n\n                    <FormBtn\n                      className=\"btn blue-gradient\"\n                      // disabled={!(this.state.energy && this.state.potassium)}\n                      onClick={this.handleFormSubmit}\n                    >\n                      <a style={{ fontWeight: 'bolder' }}> SUBMIT <i class=\"fa fa-paper-plane\"></i></a>\n\n                    </FormBtn>\n                  </Col>\n                ) : (\n                  <div className=\"conatiner button-container\">\n                    <Col size=\"md-4\">\n                      <div className=\"mt-5\">\n                        <button\n                          key={foodFavoriteList._id}\n                          onClick={() =>\n                            this.edit(\n                              foodFavoriteList._id,\n                              foodFavoriteList.energy,\n                              foodFavoriteList.potassium,\n                              foodFavoriteList.foodGroupName\n                            )\n                          }\n                          className=\"btn btn-outline-mdb-color waves-effect edit-button\"\n                        >\n\n                          <a style={{ fontWeight: 'bolder', fontSize: 15 }}>EDIT<i class=\"fa fa-pencil-square-o\"></i></a>\n                        </button>\n                      </div>\n                    </Col>\n                    <Col size=\"md-4\">\n                      <button\n                        key={foodFavoriteList._id}\n                        onClick={() =>\n                          this.deleteFood(\n                            foodFavoriteList._id,\n                            foodFavoriteList.foodName\n                          )\n                        }\n                        className=\" btn btn-outline-mdb-color waves-effect remove-button\"\n                      >\n                        <a style={{ fontWeight: 'bolder', fontSize: 15 }}>REMOVE<i class=\"fa fa-remove\"></i></a>\n                      </button>\n                    </Col>\n                  </div>\n                )}\n            </Row>\n          ))\n        ) : (\n            <h3>No Results to Display</h3>\n          )}\n      </Container>\n    );\n  }\n}\n\nexport default FoodFavorite;\n","import React, { Component } from \"react\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport API from \"../utils/API\";\n// import { Link } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../components/Grid\";\n// import { List, ListItem } from \"../components/List\";\nimport { Input, TextArea, FormBtn, Dropdown } from \"../components/Form\";\nimport Button from \"../components/Button\";\n\nclass FoodGroup extends Component {\n  state = {\n    foodGroupName: \"\",\n    foodGroupList: \"\",\n    pic: null\n  };\n\n  componentDidMount() {\n    this.loadFoodGroupByMasterAndUser(\"JohnSmith\");\n  }\n\n  loadFoodGroupByMasterAndUser = userID => {\n    API.getFoodGroupByMasterAndUser(userID)\n      .then(res =>\n        this.setState({\n          foodGroupName: \"\",\n          foodGroupList: res.data\n        })\n      )\n      .catch(err => console.log(err));\n  };\n\n  // deleteFood = id => {\n  //   API.deleteFood(id)\n  //     .then(res => this.loadFood())\n  //     .catch(err => console.log(err));\n  // };\n\n  handleInputChange = event => {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n    if (this.state.foodGroupName) {\n      this.findPic(this.state.foodGroupName);\n      API.saveFoodGroup({\n        foodGroupName: this.state.foodGroupName,\n        userID: \"JohnSmith\"\n      })\n\n        .then(res => this.loadFoodGroupByMasterAndUser(\"JohnSmith\"))\n        .catch(err => console.log(err));\n    }\n  };\n\n  findPic = name => {\n    API.getRecipes(name)\n      .then(res => {\n        const ImgRec = res.data.results.filter(recipe =>\n          Boolean(recipe.thumbnail)\n        );\n        this.setState({ pics: ImgRec.length > 0 ? ImgRec[0].thumbnail : null });\n      })\n      .catch(err => console.log(err));\n  };\n\n  render() {\n    return (\n      <Container fluid>\n        <Row>\n          {this.state.foodGroupList.length ? (\n            <div>\n              {/* <ul class=\"list-group list-group-flush\">\n                <ul className=\"list-group list-group-horizontal\"> */}\n              {this.state.foodGroupList.map(foodGroupList => (\n                <div\n                  style={{ border: 2 }}\n                  key={foodGroupList.foodGroupName}\n                  className=\"flex-item\"\n                >\n                  {/* <Link to={\"/food/\" + food._id}></Link> */}\n                  <div>\n                    {foodGroupList.image ? (\n                      <img className=\"card-img-left\" style={{ width: 95, height: 95 }} alt='groupImg'\n                        src={foodGroupList.image} />) : (\n                        <img className=\"card-img-left\" style={{ width: 95, height: 95 }} alt='groupImg'\n                          src={this.state.pics} />)}\n                    <h4> {foodGroupList.foodGroupName}</h4><br />\n                  </div>\n\n                  {/* <DeleteBtn  /> */}\n                </div>\n              ))}\n              {/* </ul>\n              </ul> */}\n            </div>\n          ) : (\n              <h3>No Results to Display</h3>\n            )}\n        </Row>\n\n        <Row>\n          <Col size=\"md-12\">\n            <form>\n              <Input\n                value={this.state.foodGroupName}\n                onChange={this.handleInputChange}\n                name=\"foodGroupName\"\n                placeholder=\"Food Group Name (required)\"\n              />\n\n              <FormBtn\n                disabled={!this.state.foodGroupName}\n                onClick={this.handleFormSubmit}\n              >\n                Submit Food Group\n              </FormBtn>\n            </form>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default FoodGroup;\n","import React, { Component } from \"react\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport API from \"../utils/API\";\n// import { Link } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../components/Grid\";\n// import { List, ListItem } from \"../components/List\";\nimport { Input, TextArea, FormBtn, Dropdown } from \"../components/Form\";\nimport axios from 'axios';\nimport {\n  setInStorage,\n  getFromStorage,\n} from '../utils/storage';\n\nclass Register extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isLoading: true,\n            token: '',\n            signUpError: '',\n            signUpName: '',\n            signUpEmail: '',\n            signUpPassword: '',\n        };\n\n        this.onTextboxChangeSignUpName = this.onTextboxChangeSignUpName.bind(this);\n        this.onTextboxChangeSignUpEmail = this.onTextboxChangeSignUpEmail.bind(this);\n        this.onTextboxChangeSignUpPassword = this.onTextboxChangeSignUpPassword.bind(this);\n        this.onSignUp = this.onSignUp.bind(this);\n    }\n\n    componentDidMount() {\n        const obj = getFromStorage('the_main_app');\n        if (obj && obj.token) {\n            const { token } = obj;\n            // Verify the token\n            axios.get('/api/account/verify?token=' + token)\n            .then(res => {\n                if (res.success) {\n                    this.setState({\n                        token,\n                        isLoading: false\n                    });\n                } else {\n                    this.setState({\n                        isLoading: false,\n                    });\n                }\n            });\n        } else {\n            this.setState({\n                isLoading: false,\n            });\n        }\n    }\n\n    onTextboxChangeSignUpName(event) {\n        this.setState({\n            signUpName: event.target.value,\n        });\n    }\n    onTextboxChangeSignUpEmail(event) {\n        this.setState({\n            signUpEmail: event.target.value,\n        });\n    }\n    onTextboxChangeSignUpPassword(event) {\n        this.setState({\n            signUpPassword: event.target.value,\n        });\n    }\n\n     onSignUp = (e)=> {\n        e.preventDefault();\n            //Grab state\n    const {\n        signUpName,\n        signUpEmail,\n        signUpPassword,\n      } = this.state;\n  \n      this.setState({\n        isLoading: true,\n      });\n      \n      //Post request to backend\n      axios.post('/api/account/signup', {\n          name: signUpName,\n          email: signUpEmail,\n          password: signUpPassword,\n      }).then(res => {\n          console.log(res);\n          if (res.data.success) {\n            this.setState({\n              signUpError: res.message,\n              isLoading: false,\n              signUpEmail: '',\n              signUpName: '',\n              signUpPassword: '',\n            });\n            //REDIRCT THEM TO LOGIN \n            window.location.href = './'\n          }\n        }).catch(err =>{\n            //TELL THE USER THAT THE EMAIL ALREADY EXISTS \n        });\n    }\n\n    render() {\n        const {\n            isLoading,\n            token,\n            signUpError,\n            signUpName,\n            signUpEmail,\n            signUpPassword,\n        } = this.state;\n\n        return (\n            <Container fluid>\n                <Row>\n                    <Col size=\"md-12\">\n                        <Jumbotron>\n                            <h1>New User Registration</h1>\n                        </Jumbotron>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col size=\"md-4\" />\n                    <Col size=\"md-4\">\n                        <form>\n                            Name \n                            <Input\n                                type=\"text\"\n                                placeholder=\"Name\"\n                                value={signUpName}\n                                onChange={this.onTextboxChangeSignUpName}\n                            />\n                            Email \n                            <Input \n                                type=\"email\"\n                                placeholder=\"Email\"\n                                value={signUpEmail}\n                                onChange={this.onTextboxChangeSignUpEmail}\n                            />\n                            Password \n                            <Input \n                                type=\"password\"\n                                placeholder=\"Password\"\n                                value={signUpPassword}\n                                onChange={this.onTextboxChangeSignUpPassword}\n                            />\n                            <FormBtn\n                                disabled={!(this.state.signUpName && this.state.signUpEmail && this.state.signUpPassword)}\n                                onClick={this.onSignUp}\n                            >\n                                Register\n                            </FormBtn>\n                        </form>\n                    </Col>\n                    <Col size=\"md-4\" />\n                </Row>\n            </Container>\n        );\n    }\n}\n\nexport default Register;","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport NoMatch from \"./pages/NoMatch\";\nimport Nav from \"./components/Nav\";\nimport Login from \"./pages/Login\";\nimport Logout from \"./pages/Logout\";\nimport AddFood from \"./pages/AddFood\";\nimport ViewFood from \"./pages/ViewFood\";\nimport ViewSchedule from \"./pages/ViewSchedule\";\nimport AddMeal from \"./pages/AddMeal\";\nimport ViewMeal from \"./pages/ViewMeal\";\nimport ViewDailyPlan from \"./pages/ViewDailyPlan\";\nimport HomeContainer from \"./pages/HomeContainer\";\nimport ViewFoodFavorite from \"./pages/ViewFoodFavorite\";\nimport AddFoodGroup from \"./pages/AddFoodGroup\";\nimport Register from \"./pages/Register\";\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n        <Nav />\n        <Switch>\n          <Route exact path=\"/\" component={Login} />\n          <Route exact path=\"/home\" component={HomeContainer} />\n          <Route exact path=\"/AddFood\" component={AddFood} />\n          <Route exact path=\"/ViewFood\" component={ViewFood} />\n          <Route exact path=\"/AddFoodGroup\" component={AddFoodGroup} />\n          <Route exact path=\"/AddMeal\" component={AddMeal} />\n          <Route exact path=\"/ViewMeal\" component={ViewMeal} />\n          <Route exact path=\"/ViewDailyPlan\" component={ViewDailyPlan} />\n          <Route exact path=\"/ViewSchedule\" component={ViewSchedule} />\n          <Route exact path=\"/ViewFoodFavorite\" component={ViewFoodFavorite} />\n          <Route exact path=\"/Register\" component={Register} />\n          <Route exact path=\"/Logout\" component={Logout} />\n          {/* <Route exact path=\"/foods/:id\" component={Detail} /> */}\n          <Route component={NoMatch} />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}